{"version":3,"file":"static/js/747.42651bda.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/TaskForm/Checkmark/Checkmark.styled.jsx","components/Calendar/month/CalendarHead/CalendarHead.styled.jsx","components/Calendar/month/CalendarHead/CalendarHead.jsx","components/Calendar/month/CalendarTable/CalendarTable.jsx","components/Calendar/month/ChoosedMonth.styled.jsx","components/Calendar/month/ChoosedMonth.jsx","components/ChoosedDay/ChoosedDay.styled.js","components/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/ChoosedDay/TasksColumnItem/TasksColumnItem.styled.js","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.styled.js","components/DeleteForm/DeleteForm.styled.jsx","components/TaskForm/Checkmark/Checkmark.jsx","components/DeleteForm/DeleteForm.jsx","components/TaskForm/TaskForm.styled.jsx","components/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryModal.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryButton/CategoryButton.jsx","constants/categoryList.js","helpers/helpers.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryModal.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.jsx","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.styled.js","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.jsx","components/ChoosedDay/TasksColumnItem/TasksColumnItem.jsx","components/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ChoosedDay.jsx","pages/Private/CalendarPage/CalendarPage.jsx","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js","redux/task/taskSelectors.js"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <Circles height=\"80\" width=\"80\" color=\"#4d78a9\" wrapperClass={css.loader} />\n  );\n};\n\nexport default Loader;\n","import styled, { keyframes } from 'styled-components';\n\nexport const CheckmarkWrap = styled.div`\n  box-sizing: border-box;\n  height: 258.39px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst strokeAnimation = keyframes`\n  100% {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst scaleAnimation = keyframes`\n  0%, 100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n`;\n\nconst fillAnimation = keyframes`\n  100% {\n    box-shadow: inset 0px 0px 0px 30px #fff;\n  }\n`;\n\nexport const Circle = styled.circle`\n  stroke-dasharray: 332;\n  stroke-dashoffset: 332;\n  stroke-width: 4;\n  stroke-miterlimit: 10;\n  stroke: green;\n  fill: none;\n  animation: ${strokeAnimation} 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n`;\n\nexport const Svg = styled.svg`\n  display: block;\n  width: 112px;\n  height: 112px;\n  border-radius: 50%;\n  display: block;\n  stroke-width: 4;\n  stroke: green;\n  stroke-miterlimit: 10;\n  margin: 10% auto;\n  box-shadow: inset 0px 0px 0px #7ac142;\n  animation: ${fillAnimation} 0.4s ease-in-out 0.4s forwards,\n    ${scaleAnimation} 0.3s ease-in-out 0.9s both;\n`;\n\nexport const Path = styled.path`\n  transform-origin: 50% 50%;\n  stroke-dasharray: 96;\n  stroke-dashoffset: 96;\n  animation: ${strokeAnimation} 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s\n    forwards;\n`;\n","import styled from 'styled-components';\n\nexport const MonthCalendarHeadStyles = styled.div``;\n\nexport const MobileDaysList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  /* width: 100%; */\n  height: 50px;\n  margin-bottom: 14px;\n  padding: 16px 16px;\n  border: 1px solid ${({ bordercolor }) => bordercolor};\n  border-radius: 8px;\n  background-color: ${({ bgcolor }) => bgcolor};\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const DesktopDayList = styled.ul`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    /* gap: 62px; */\n    /* width: 100%; */\n    height: 46px;\n    margin-bottom: 18px;\n    padding: 14px 40px;\n    border: 1px solid ${({ bordercolor }) => bordercolor};\n    border-radius: 8px;\n    background-color: ${({ bgcolor }) => bgcolor};\n\n    @media screen and (min-width: 1440px) {\n      /* gap: 122px; */\n      height: 46px;\n      margin-bottom: 15px;\n      padding: 14px 60px;\n    }\n  }\n`;\n\nexport const WorkDay = styled.li`\n  /* width: calc(100% / 7); */\n  color: ${({ color }) => color};\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(18 / 16);\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const WeekendDay = styled(WorkDay)`\n  color: #3e85f3;\n`;\n","import {\n  MonthCalendarHeadStyles,\n  WorkDay,\n  WeekendDay,\n  MobileDaysList,\n  DesktopDayList,\n} from './CalendarHead.styled';\n\nconst workDayNames = ['MON', 'TUE', 'WED', 'THU', 'FRI'];\nconst weekendDayNames = ['SAT', 'SUN'];\n\nconst CalendarHead = ({ theme }) => {\n  return (\n    <MonthCalendarHeadStyles>\n      <DesktopDayList\n        bordercolor={\n          theme === 'dark'\n            ? 'rgba(255, 255, 255, 0.15)'\n            : 'rgba(220, 227, 229, 0.80)'\n        }\n        bgcolor={theme === 'dark' ? '#21222c' : '#ffffff'}\n      >\n        {workDayNames.map(day => (\n          <WorkDay key={day} color={theme === 'dark' ? '#ffffff' : '#343434'}>\n            {day}\n          </WorkDay>\n        ))}\n        {weekendDayNames.map(day => (\n          <WeekendDay key={day}>{day}</WeekendDay>\n        ))}\n      </DesktopDayList>\n\n      <MobileDaysList\n        bordercolor={\n          theme === 'dark'\n            ? 'rgba(255, 255, 255, 0.15)'\n            : 'rgba(220, 227, 229, 0.80)'\n        }\n        bgcolor={theme === 'dark' ? '#21222c' : '#ffffff'}\n      >\n        {workDayNames.map(day => (\n          <WorkDay key={day}>{day.slice(0, 1)}</WorkDay>\n        ))}\n        {weekendDayNames.map(day => (\n          <WeekendDay key={day}>{day.slice(0, 1)}</WeekendDay>\n        ))}\n      </MobileDaysList>\n    </MonthCalendarHeadStyles>\n  );\n};\n\nexport default CalendarHead;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoading, selectTasks } from 'redux/task/taskSelectors';\n\nimport Loader from 'components/Loader';\nimport { renderCalendar } from 'utils/calendar';\n\nimport { GridWrapper } from './CalendarTable.styled';\n\nconst CalendarTable = ({ theme }) => {\n  const { currentDate } = useParams();\n  const isLoading = useSelector(selectIsLoading);\n  const tasksList = useSelector(selectTasks);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <GridWrapper\n      bordercolor={\n        theme === 'dark'\n          ? 'rgba(255, 255, 255, 0.15)'\n          : 'rgba(220, 227, 229, 0.80)'\n      }\n      bgcolor={theme === 'dark' ? '#21222c' : '#ffffff'}\n    >\n      {renderCalendar({ isLoading, currentDate, tasksList, theme })}\n    </GridWrapper>\n  );\n};\n\nexport default CalendarTable;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100vh;\n`;\n","import CalendarHead from './CalendarHead';\nimport CalendarTable from './CalendarTable';\nimport { Container } from './ChoosedMonth.styled';\n\nconst ChoosedMonth = ({ theme }) => {\n  return (\n    <Container>\n      {/* <h2>Month</h2> */}\n      <CalendarHead theme={theme} />\n      <CalendarTable theme={theme} />\n    </Container>\n  );\n};\n\nexport default ChoosedMonth;\n","import styled from 'styled-components';\n\nexport const StyledChoosedDay = styled.div`\n  padding: 24px 20px 20px;\n  overflow-x: auto;\n\n  /* height: 100%; */\n  /* height: 600px; */\n\n  background: #f7f6f9;\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px 18px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 32px 32px 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 335px);\n  /* grid-template-rows: repeat(auto-fit, 1fr); */\n  /* grid-template-rows: 1fr; */\n  grid-column-gap: 20px;\n  grid-row-gap: 0px;\n\n  overflow-x: auto;\n  /* height: 100%; */\n  /* height: 500px; */\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 344px);\n    grid-column-gap: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-column-gap: 27px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnItem = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 18px 18px 20px;\n  /* min-width: 335px;\n  min-height: 155px; */\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background: #fff;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 20px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n\n  .columnHeadBar {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 28px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledColumnHeadBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 34px;\n\n  @media screen and (min-width: 768px) {\n    height: 38px;\n  }\n\n  & h3 {\n    margin: 0;\n    color: #111;\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.111; /* 111.111% */\n\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      line-height: 1.2; /* 120% */\n    }\n  }\n\n  & button {\n    /* width: 22px; */\n    /* height: 22px; */\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: white;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 22px;\n    height: 22px;\n    stroke: currentColor;\n    fill: white;\n\n    @media screen and (min-width: 768px) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const DeleteBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n`;\n","const { Path, Circle, Svg, CheckmarkWrap } = require('./Checkmark.styled');\n\nconst Checkmark = () => {\n  return (\n    <CheckmarkWrap>\n      <Svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 104 104\"\n        width=\"104\"\n        height=\"104\"\n      >\n        <Circle cx=\"52\" cy=\"52\" r=\"50\" fill=\"none\" />\n        <Path fill=\"none\" d=\"M28.2 54.2l14.2 14.4 33.4-33.6\" />\n      </Svg>\n    </CheckmarkWrap>\n  );\n};\n\nexport default Checkmark;\n","import { DeleteBtn, CancelBtn, BtnWrapper, TextDiv } from './DeleteForm.styled';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../Pictures/sprite.svg';\nimport { deleteTask } from 'redux/task/taskOperations';\nimport Checkmark from 'components/TaskForm/Checkmark/Checkmark';\nimport { useState } from 'react';\n\nconst DeleteForm = ({ task, closeModal }) => {\n  const dispatch = useDispatch();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const removeTask = () => {\n    setIsSubmitted(true);\n\n    setTimeout(() => closeModal(), 1500);\n    setTimeout(() => dispatch(deleteTask(task._id)), 1500);\n  };\n  return (\n    <>\n      {isSubmitted ? (\n        <Checkmark />\n      ) : (\n        <>\n          <TextDiv>Do you want to delete the task?</TextDiv>\n          <BtnWrapper>\n            <DeleteBtn onClick={removeTask}>\n              <svg width=\"18\" height=\"18\" style={{ marginRight: 8 }}>\n                <use href={sprite + '#trashbin'}></use>\n              </svg>\n              Delete\n            </DeleteBtn>\n            <CancelBtn onClick={closeModal}>Cancel</CancelBtn>\n          </BtnWrapper>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DeleteForm;\n","import styled from '@emotion/styled/macro';\nimport { Field, Form } from 'formik';\n// import { keyframes } from 'styled-components';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst styledRadio = Field;\n\nexport const FormContainer = styled.div`\n  box-sizing: border-box;\n  padding: 0 10px 26px 10px;\n  background-color: ${({ bg }) => bg || '#fff'};\n  `;\n\nexport const FormElement = styled(styledForm)``;\n\nexport const FormLabel = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: rgba(52, 52, 52, 0.8);\n  font-size: 12px;\n  line-height: 1.16;\n  font-family: Inter;\n`;\n\nexport const FormField = styled(styledField)`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 0;\n  margin-bottom: 16px;\n  padding: 14px 18px;\n  /* background: #f6f6f6;\n  color: #343434; */\n  background-color: ${({ bg }) => bg || '#f6f6f6'};\n  color: ${({ color }) => color || '#343434'};\n\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n    border: 0;\n  }\n\n  &::placeholder {\n    color: #343434;\n  }\n`;\n\nexport const TimeInput = styled(styledField)`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 0;\n  margin-bottom: 16px;\n  padding: 14px 18px;\n  /* background: #f6f6f6;\n  color: #343434; */\n\n  background-color: ${({ bg }) => bg || '#f6f6f6'};\n  color: ${({ color }) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  max-width: 126px;\n\n  &:focus {\n    outline: none;\n    border: 0;\n  }\n\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n\n  &::placeholder {\n    color: #343434;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 163px;\n  }\n`;\n\nexport const TimeWrapper = styled.div`\n  display: flex;\n  column-gap: 15px;\n  position: relative;\n`;\n\nexport const TimeFieldWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const RadioBtn = styled(styledRadio)`\n  opacity: 0;\n  pointer-events: none;\n`;\n\nexport const CustomRadioBtn = styled.span`\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: white;\n  cursor: pointer;\n  left: 1.3px;\n  top: 3.3px;\n  z-index: 3;\n\n  &::after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    position: absolute;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: opacity 0.2s;\n    z-index: 2;\n  }\n`;\n\nexport const LowPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #72c2f8;\n  }\n`;\n\nexport const MidPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #f3b249;\n  }\n`;\n\nexport const HighPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #ea3d65;\n  }\n`;\n\nexport const PriorityWrapper = styled.div`\n  display: flex;\n  column-gap: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const RadioLabel = styled.label`\n  color: #343434;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.16;\n  font-family: Inter;\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const CheckedRadioBtnBlue = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: rgba(114, 194, 248, 0.5);\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const CheckedRadioBtnYellow = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #f3b24988;\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const CheckedRadioBtnRed = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #ea3d658b;\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const RadioLabelStyled = styled(RadioLabel)`\n  & ${RadioBtn}:checked + ${CheckedRadioBtnRed} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n  & ${RadioBtn}:checked + ${CheckedRadioBtnBlue} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n  & ${RadioBtn}:checked + ${CheckedRadioBtnYellow} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n`;\n\nexport const AddTaskButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.17;\n  border: 0;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 10px;\n  font-weight: 400;\n  color: red;\n  position: absolute;\n  width: 400px;\n  bottom: 5px;\n  left: 2px;\n`;\n\nexport const BoxInput = styled.div`\n  position: relative;\n`;\n\nexport const StyledSVG = styled.svg`\n  display: inline-block;\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const StyledEditBtn = styled.svg`\n  text-align: center;\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const BtnTxt = styled.span`\n  display: inline-block;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  AddTaskButton,\n  BoxInput,\n  BtnTxt,\n  BtnWrapper,\n  CancelButton,\n  CheckedRadioBtnBlue,\n  CheckedRadioBtnRed,\n  CheckedRadioBtnYellow,\n  Error,\n  FormContainer,\n  FormElement,\n  FormField,\n  FormLabel,\n  HighPrioBtn,\n  LowPrioBtn,\n  MidPrioBtn,\n  PriorityWrapper,\n  RadioBtn,\n  RadioLabelStyled,\n  StyledEditBtn,\n  StyledSVG,\n  TimeFieldWrap,\n  TimeInput,\n  TimeWrapper,\n} from './TaskForm.styled';\nimport sprite from '../Pictures/sprite.svg';\nimport { editTask, addTask } from '../../redux/task/taskOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsError } from 'redux/task/taskSelectors';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Checkmark from './Checkmark/Checkmark';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst TaskForm = ({ closeModal, task }) => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const error = useSelector(selectIsError);\n  const { title, start, end, priority } = task;\n  const theme = useSelector(selectTheme);\n\n  useEffect(() => {}, [error]);\n\n  let taskSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, 'Task name too short')\n      .max(60, 'Task name too long.')\n      .required('Task name is required'),\n    start: Yup.string().required('Start time is required'),\n    end: Yup.string()\n      .required('End time is required')\n      .test(\n        'is-greater',\n        'End time must be greater than start time',\n        function (end) {\n          const start = this.parent.start;\n          return !start || !end || start < end;\n        }\n      ),\n    priority: Yup.string()\n      .oneOf(['low', 'medium', 'high'])\n      .required('Priority is required'),\n  });\n\n  const onTaskSubmit = async values => {\n    const newTask = { ...task, ...values };\n    task._id ? dispatch(editTask(newTask)) : dispatch(addTask(newTask));\n    setIsSubmitted(true);\n    setTimeout(() => closeModal(), 1500);\n  };\n\n  return (\n    <FormContainer bg={theme !== 'dark' ? '#fff' : 'var(--color-theme-dark)'}>\n      {!isSubmitted && (\n        <Formik\n          initialValues={\n            task._id\n              ? { title, start, end, priority }\n              : { title: '', start: '09:00', end: '10:00', priority: 'low' }\n          }\n          validationSchema={taskSchema}\n          onSubmit={async values => {\n            onTaskSubmit(values);\n          }}\n        >\n          {({ values, errors, touched }) => {\n            return (\n              <FormElement>\n                <FormLabel htmlFor=\"title\">Title</FormLabel>\n                <BoxInput>\n                  <FormField\n                  bg={theme !== 'dark' ? '#f6f6f6' : 'var(--color-theme-dark)'}\n                  color={theme === 'dark' ? '#fff' : '#343434'}\n                    id=\"title\"\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Enter text\"\n                  />\n                  {errors.title && touched.title ? (\n                    <Error>{errors.title}</Error>\n                  ) : null}\n                </BoxInput>\n                <TimeWrapper>\n                  <TimeFieldWrap>\n                    <FormLabel htmlFor=\"start\">Start</FormLabel>\n                    <TimeInput\n                                      bg={theme !== 'dark' ? '#f6f6f6' : 'var(--color-theme-dark)'}\n                                      color={theme === 'dark' ? '#fff' : '#343434'}\n                      id=\"start\"\n                      type=\"time\"\n                      step=\"60\"\n                      name=\"start\"\n                    ></TimeInput>\n                    {errors.start && touched.start ? (\n                      <Error>{errors.start}</Error>\n                    ) : null}\n                    {!errors.start && errors.end && touched.end ? (\n                      <Error>{errors.end}</Error>\n                    ) : null}\n                  </TimeFieldWrap>\n                  <TimeFieldWrap>\n                    <FormLabel htmlFor=\"end\">End</FormLabel>\n                    <TimeInput                   bg={theme !== 'dark' ? '#f6f6f6' : 'var(--color-theme-dark)'}\n                  color={theme === 'dark' ? '#fff' : '#343434'} id=\"end\" type=\"time\" name=\"end\"></TimeInput>\n                  </TimeFieldWrap>\n                </TimeWrapper>\n                <PriorityWrapper role=\"group\" id=\"priority-group\">\n                  <RadioLabelStyled>\n                    <RadioBtn type=\"radio\" name=\"priority\" value=\"low\" />\n                    <CheckedRadioBtnBlue />\n                    <LowPrioBtn />\n                    Low\n                  </RadioLabelStyled>\n                  <RadioLabelStyled>\n                    <RadioBtn\n                      type=\"radio\"\n                      name=\"priority\"\n                      value=\"medium\"\n                    ></RadioBtn>\n                    <CheckedRadioBtnYellow />\n                    <MidPrioBtn /> Medium\n                  </RadioLabelStyled>\n                  <RadioLabelStyled>\n                    <RadioBtn\n                      type=\"radio\"\n                      name=\"priority\"\n                      value=\"high\"\n                    ></RadioBtn>\n                    <CheckedRadioBtnRed />\n                    <HighPrioBtn /> High\n                  </RadioLabelStyled>\n                </PriorityWrapper>\n                <BtnWrapper>\n                  <AddTaskButton type=\"submit\">\n                    {task._id ? (\n                      <StyledEditBtn style={{ marginRight: 8 }}>\n                        <use href={sprite + '#edit-btn'}></use>\n                      </StyledEditBtn>\n                    ) : (\n                      <StyledSVG>\n                        <use href={sprite + '#plus-btn'}></use>\n                      </StyledSVG>\n                    )}\n                    {task._id ? 'Edit' : <BtnTxt>Add</BtnTxt>}\n                  </AddTaskButton>\n                  <CancelButton onClick={closeModal}>Cancel</CancelButton>\n                </BtnWrapper>\n              </FormElement>\n            );\n          }}\n        </Formik>\n      )}\n      {isSubmitted ? <Checkmark /> : null}\n    </FormContainer>\n  );\n};\n\nexport default TaskForm;\n","import DeleteForm from 'components/DeleteForm/DeleteForm';\nimport Modal from 'components/Modal/Modal';\nimport TaskForm from 'components/TaskForm/TaskForm';\n\nimport { createPortal } from 'react-dom';\n\nconst TaskModal = ({ task, closeModal, deleteTask }) => {\n  return createPortal(\n    <Modal closeModal={closeModal}>\n      {deleteTask ? (\n        <DeleteForm closeModal={closeModal} task={task}></DeleteForm>\n      ) : (\n        <TaskForm closeModal={closeModal} task={task}></TaskForm>\n      )}\n    </Modal>,\n    document.body\n  );\n};\n\nexport default TaskModal;\n","import { useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport { StyledColumnHeadBar } from './ColumnHeadBar.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\n// import { ReactComponent as PlusCircleLogo } from '../../../Pictures/plus-circle.svg';\nimport sprite from 'components/Pictures/sprite.svg';\n\nconst ColumnHeadBar = ({ title, category }) => {\n  const [showModal, setShowModal] = useState(false);\n  const { currentDate } = useParams();\n\n  const handleClick = () => setShowModal(true);\n\n  const closeModal = () => setShowModal(false);\n\n  return (\n    <>\n      <StyledColumnHeadBar className=\"columnHeadBar\">\n        <h3>{title}</h3>\n        <button onClick={handleClick} aria-label=\"add task\" type=\"button\">\n          <svg>\n            <use href={sprite + '#icon-plus-circle'}></use>\n          </svg>\n          {/* <PlusCircleLogo /> */}\n        </button>\n      </StyledColumnHeadBar>\n\n      {showModal && (\n        <TaskModal\n          task={{ category, date: currentDate }}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ColumnHeadBar;\n","import styled from 'styled-components';\n\nexport const StyledColumnTasksList = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskColumnCard = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px; */\n  padding: 14px 14px 18px;\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #f7f6f9;\n\n  & .title,\n  .time {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    /* margin-bottom: 28px; */\n    margin-bottom: 5px;\n\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285; /* 128.571% */\n  }\n\n  & .time {\n    text-align: center;\n  }\n\n  & .time span:first-child {\n    margin-right: 5px;\n  }\n  & .time span:last-child {\n    margin-left: 5px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskToolbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n\n  & .infoWrapper {\n    display: flex;\n    align-items: end;\n  }\n\n  & .imgWrapper {\n    overflow: hidden;\n    margin-right: 8px;\n\n    width: 32px;\n    height: 32px;\n\n    border-radius: 50%;\n    border: 1.8px solid #3e85f3;\n    /* background: url(<path-to-image>), lightgray 50% / cover no-repeat; */\n\n    & img {\n      margin-left: -1px;\n      margin-top: -1px;\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  & span {\n    padding: 4px 12px;\n\n    color: #fff;\n\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 600;\n    line-height: 1.2; /* 120% */\n\n    border-radius: 4px;\n    background: ${props => props.priority};\n  }\n\n  .controlsWrapper {\n    line-height: 0;\n  }\n  & button {\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: #f7f6f9;\n  }\n\n  & button:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: #f7f6f9;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledCategoryModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  /* background-color: rgba(0, 0, 0, 0.8); */\n\n  & .modal {\n    position: absolute;\n    top: ${({ coords }) => coords.clientY + 15 + 'px'};\n    left: ${({ coords }) => coords.clientX - 5 + 'px'};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    padding: 0 12px;\n\n    width: 148px;\n    height: 90px;\n\n    border-radius: 8px;\n    background: #fff;\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  }\n\n  & button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 12px 12px;\n\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.2857; /* 128.571% */\n\n    color: #343434;\n    border: none;\n    background-color: #fff;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & button span {\n    line-height: 0;\n  }\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: #f7f6f9;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import sprite from 'components/Pictures/sprite.svg';\n\nconst CategoryButton = ({ category, title, changeCategory }) => {\n  return (\n    <button\n      onClick={() => changeCategory(category)}\n      aria-label=\"change task category\"\n      type=\"button\"\n    >\n      {title}\n      <span>\n        <svg>\n          <use href={sprite + '#arrow-circle-broken-right'}></use>\n        </svg>\n      </span>\n    </button>\n  );\n};\n\nexport default CategoryButton;\n","export const CATEGORY_LIST = ['to-do', 'in-progress', 'done'];\n","export const filterDayTasks = (monthTasks, day) => {\n  return monthTasks.filter(task => task.date.slice(-2) === day);\n};\n\nexport const CreateSortedTasks = (categories, tasks) => {\n  const obj = {};\n  categories.forEach(cat => (obj[cat] = []));\n  tasks.forEach(task => obj[task.category].push(task));\n  return obj;\n};\n\nexport const parseCategoryTitle = category => {\n  const capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\n  return capitalize(category).replace('-', ' ');\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { StyledCategoryModal } from './CategoryModal.styled';\nimport CategoryButton from './CategoryButton/CategoryButton';\n\nimport { editTask } from 'redux/task/taskOperations';\nimport { selectIsError } from 'redux/task/taskSelectors';\nimport { CATEGORY_LIST } from 'constants/categoryList';\nimport { parseCategoryTitle } from 'helpers/helpers';\n\nconst CategoryModal = ({ task, coords, closeModal }) => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectIsError);\n\n  const variants = CATEGORY_LIST.filter(cat => cat !== task.category);\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) closeModal();\n  };\n\n  const changeCategory = category => {\n    dispatch(editTask({ ...task, category }));\n    !error && closeModal();\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') closeModal();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [closeModal]);\n\n  return createPortal(\n    <StyledCategoryModal coords={coords} onClick={handleOverlayClick}>\n      <div className=\"modal\">\n        {variants.map(variant => (\n          <CategoryButton\n            key={variant}\n            category={variant}\n            title={parseCategoryTitle(variant)}\n            changeCategory={changeCategory}\n          />\n        ))}\n      </div>\n    </StyledCategoryModal>,\n    document.body\n  );\n};\n\nexport default CategoryModal;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { StyledTaskToolbar } from './TaskToolbar.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\nimport CategoryModal from './CategoryModal/CategoryModal';\n\nimport { selectUser } from 'redux/auth/authSelectors';\nimport sprite from 'components/Pictures/sprite.svg';\n\nconst TaskToolbar = ({ task }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteTask, setDeleteTask] = useState(false);\n  const [categoryModal, setCategoryModal] = useState({\n    isOpen: false,\n    coords: null,\n  });\n\n  const user = useSelector(selectUser);\n  const { avatarURL, name } = user;\n  const { priority } = task;\n\n  const priorityColors = {\n    low: '#72C2F8',\n    medium: '#F3B249',\n    high: '#EA3D65',\n  };\n\n  const handleClick = ({ clientX, clientY }) => {\n    setCategoryModal({\n      isOpen: true,\n      coords: { clientX, clientY },\n    });\n  };\n\n  const closeCategoryModal = () => {\n    setCategoryModal({\n      isOpen: false,\n      coords: null,\n    });\n  };\n\n  const onEditClick = () => {\n    setShowModal(true);\n  };\n\n  const onDeleteClick = () => {\n    setShowModal(true);\n    setDeleteTask(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setDeleteTask(false);\n  };\n  return (\n    <>\n      <StyledTaskToolbar\n        className=\"taskToolbar\"\n        priority={priorityColors[priority]}\n      >\n        <div className=\"infoWrapper\">\n          <div className=\"imgWrapper\">\n            <img src={avatarURL} alt={name} />\n          </div>\n          <span>{priority}</span>\n        </div>\n        <div className=\"controlsWrapper\">\n          <button\n            onClick={handleClick}\n            aria-label=\"change task category\"\n            type=\"button\"\n          >\n            <svg>\n              <use href={sprite + '#arrow-circle-broken-right'}></use>\n            </svg>\n          </button>\n          <button onClick={onEditClick} aria-label=\"edit task\" type=\"button\">\n            <svg>\n              <use href={sprite + '#icon-pencil'}></use>\n            </svg>\n          </button>\n          <button\n            onClick={onDeleteClick}\n            aria-label=\"delete task\"\n            type=\"button\"\n          >\n            <svg>\n              <use href={sprite + '#icon-trash'}></use>\n            </svg>\n          </button>\n        </div>\n      </StyledTaskToolbar>\n\n      {showModal && (\n        <TaskModal\n          task={task}\n          closeModal={closeModal}\n          deleteTask={deleteTask}\n        />\n      )}\n\n      {categoryModal.isOpen && (\n        <CategoryModal\n          task={task}\n          coords={categoryModal.coords}\n          closeModal={closeCategoryModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskToolbar;\n","import { StyledTaskColumnCard } from './TaskColumnCard.styled';\nimport TaskToolbar from './TaskToolbar/TaskToolbar';\n\nconst TaskColumnCard = ({ task }) => {\n  return (\n    <StyledTaskColumnCard>\n      <p className=\"title\">{task.title}</p>\n      <p className=\"time\">\n        <span>{task.start}</span>-<span>{task.end}</span>\n      </p>\n      <TaskToolbar task={task} />\n    </StyledTaskColumnCard>\n  );\n};\n\nexport default TaskColumnCard;\n","import { StyledColumnTasksList } from './ColumnTasksList.styled';\nimport TaskColumnCard from './TaskColumnCard/TaskColumnCard';\n\nconst ColumnTasksList = ({ tasks }) => {\n  return (\n    <StyledColumnTasksList>\n      {tasks.map(task => (\n        <TaskColumnCard key={task._id} task={task} />\n      ))}\n    </StyledColumnTasksList>\n  );\n};\n\nexport default ColumnTasksList;\n","import styled from 'styled-components';\n\nexport const StyledAddTaskBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 299px;\n  height: 48px;\n  padding: 16px 20px;\n\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n  background: #e3f3ff;\n\n  color: #111;\n  /* text-align: center; */\n  font-family: Inter;\n  font-size: 14px;\n  /* font-style: normal; */\n  font-weight: 600;\n  line-height: 1.285; /* 128.571% */\n\n  & span {\n    line-height: 0;\n    margin-right: 8px;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: currentColor;\n    fill: white;\n  }\n\n  &:hover {\n    color: white;\n    border: 1px solid #3e85f3;\n    background: #3e85f3;\n  }\n`;\n","import { useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport { StyledAddTaskBtn } from './AddTaskBtn.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\nimport sprite from 'components/Pictures/sprite.svg';\n\nconst AddTaskBtn = ({ category }) => {\n  const [showModal, setShowModal] = useState(false);\n  const { currentDate } = useParams();\n\n  const handleClick = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  return (\n    <>\n      <StyledAddTaskBtn aria-label=\"add task\" onClick={handleClick}>\n        <span>\n          <svg>\n            <use href={sprite + '#icon-plus'}></use>\n          </svg>\n        </span>\n        Add task\n      </StyledAddTaskBtn>\n\n      {showModal && (\n        <TaskModal\n          task={{ category, date: currentDate }}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default AddTaskBtn;\n","import { StyledTasksColumnItem } from './TasksColumnItem.styled';\nimport ColumnHeadBar from './ColumnHeadBar/ColumnHeadBar';\nimport ColumnTasksList from './ColumnTasksList/ColumnTasksList';\nimport AddTaskBtn from './AddTaskBtn/AddTaskBtn';\n\nconst TasksColumnItem = ({ title, tasks, category }) => {\n  return (\n    <StyledTasksColumnItem className=\"tasksColumnItem\">\n      <ColumnHeadBar title={title} category={category} />\n      <ColumnTasksList tasks={tasks} />\n      <AddTaskBtn category={category} />\n    </StyledTasksColumnItem>\n  );\n};\n\nexport default TasksColumnItem;\n","import { StyledTasksColumnsList } from './TasksColumnsList.styled';\nimport TasksColumnItem from '../TasksColumnItem/TasksColumnItem';\n\nimport { parseCategoryTitle } from 'helpers/helpers';\nimport { CATEGORY_LIST } from 'constants/categoryList';\n\nconst TasksColumnsList = ({ sortedTasks }) => {\n  return (\n    <StyledTasksColumnsList>\n      {CATEGORY_LIST.map(category => (\n        <TasksColumnItem\n          key={category}\n          title={parseCategoryTitle(category)}\n          category={category}\n          tasks={sortedTasks[category]}\n        />\n      ))}\n    </StyledTasksColumnsList>\n  );\n};\n\nexport default TasksColumnsList;\n","import { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { StyledChoosedDay } from './ChoosedDay.styled';\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\n\nimport { selectTasks } from 'redux/task/taskSelectors';\nimport { CreateSortedTasks, filterDayTasks } from 'helpers/helpers';\nimport { CATEGORY_LIST } from 'constants/categoryList';\n\nconst ChoosedDay = () => {\n  const { pathname } = useLocation();\n  const monthTasks = useSelector(selectTasks);\n\n  const day = pathname.slice(-2);\n  const dayTasks = filterDayTasks(monthTasks, day);\n  const sortedTasks = CreateSortedTasks(CATEGORY_LIST, dayTasks); // maybe useSelector ?\n\n  return (\n    <StyledChoosedDay>\n      {/* <DayCalendarHead /> */}\n      <TasksColumnsList sortedTasks={sortedTasks} />\n    </StyledChoosedDay>\n    //\n  );\n};\n\nexport default ChoosedDay;\n","import {\n  Suspense,\n  useEffect,\n  // useRef,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nimport { addDays, addMonths, format, subDays, subMonths } from 'date-fns';\n\nimport { HeaderContainer } from './CalendarPage.styled.jsx';\nimport Header from 'components/Header/Header.jsx';\nimport { CalendarToolbar } from 'components/Calendar/common';\nimport { CalendarContainer } from 'components/Calendar/common';\nimport ChoosedMonth from 'components/Calendar/month/ChoosedMonth';\n\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport ChoosedDay from 'components/ChoosedDay/ChoosedDay.jsx';\n\nimport { getTasks as getTasksThunk } from 'redux/task/taskOperations';\nimport { selectTheme } from 'redux/header/headerSlice.js';\n// import { selectTasks } from 'redux/task/taskSelectors';\n\nconst CalendarPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const theme = useSelector(selectTheme);\n  // const tasks = useSelector(selectTasks);\n\n  const currentDate = Object.values(useParams())[0].slice(-10);\n  console.log('currentDate: ', currentDate);\n  const requestDate = currentDate.slice(0, 7);\n\n  // const prevMonthRef = useRef(pathname.slice(-5).slice(0, 2));\n\n  const [period, setPeriod] = useState('month');\n\n  const currentPeriod = pathname.includes('month') ? 'month' : 'day';\n\n  // console.log('period: ', period);\n  // console.log('currentDate: ', currentDate);\n  // console.log('requestDate: ', requestDate);\n  // console.log('tasks: ', tasks);\n  // console.log(theme);\n\n  useEffect(() => {\n    if (period !== currentPeriod) {\n      setPeriod(currentPeriod);\n    }\n    dispatch(getTasksThunk(requestDate));\n  }, [currentPeriod, period, requestDate, dispatch]);\n\n  // useEffect(() => {\n  //   if (tasks.length > 0) return;\n\n  //   dispatch(getTasksThunk(requestDate));\n  // }, [dispatch, requestDate, tasks.length]);\n\n  // useEffect(() => {\n  //   if (tasks.length === 0) return;\n\n  //   const currentMonth = pathname.slice(-5).slice(0, 2);\n  //   if (prevMonthRef.current === currentMonth) return;\n\n  //   prevMonthRef.current = currentMonth;\n  //   dispatch(getTasksThunk(requestDate));\n  // }, [dispatch, requestDate, tasks.length, pathname]);\n\n  const handlePrev = () => {\n    if (pathname.includes('day')) {\n      const newDate = subDays(new Date(currentDate), 1);\n      navigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n\n      return;\n    }\n\n    const newDate = subMonths(new Date(currentDate), 1);\n    navigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n  };\n\n  const handleNext = () => {\n    if (pathname.includes('day')) {\n      const newDate = addDays(new Date(currentDate), 1);\n      navigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n\n      return;\n    }\n\n    const newDate = addMonths(new Date(currentDate), 1);\n    navigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n  };\n\n  return (\n    <MainLayout>\n      <CalendarContainer bgcolor={theme === 'dark' ? '#171820' : '#f7f6f9'}>\n        <HeaderContainer>\n          <Header />\n        </HeaderContainer>\n\n        <Suspense fallback={null}>\n          <CalendarToolbar\n            onClickPrev={handlePrev}\n            onClickNext={handleNext}\n            today={currentDate}\n            theme={theme}\n          />\n          <Routes>\n            <Route\n              path=\"/month/:currentDate\"\n              element={<ChoosedMonth theme={theme} />}\n            />\n            <Route path=\"/day/:currentDate\" element={<ChoosedDay />} />\n          </Routes>\n        </Suspense>\n      </CalendarContainer>\n    </MainLayout>\n  );\n};\n\nexport default CalendarPage;\n","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}","export const selectTasks = state => state.tasks.tasks;\nexport const selectIsError = state => state.tasks.error;\nexport const selectIsLoading = state => state.tasks.isLoading;\n"],"names":["height","width","color","wrapperClass","css","CheckmarkWrap","styled","strokeAnimation","keyframes","scaleAnimation","fillAnimation","Circle","Svg","Path","MonthCalendarHeadStyles","MobileDaysList","bordercolor","bgcolor","DesktopDayList","WorkDay","WeekendDay","workDayNames","weekendDayNames","theme","map","day","slice","currentDate","useParams","isLoading","useSelector","selectIsLoading","tasksList","selectTasks","Loader","renderCalendar","Container","StyledChoosedDay","StyledTasksColumnsList","StyledTasksColumnItem","StyledColumnHeadBar","DeleteBtn","CancelBtn","BtnWrapper","TextDiv","require","xmlns","viewBox","cx","cy","r","fill","d","task","closeModal","dispatch","useDispatch","useState","isSubmitted","setIsSubmitted","onClick","setTimeout","deleteTask","_id","style","marginRight","href","sprite","styledForm","Form","styledField","Field","styledRadio","FormContainer","bg","FormElement","FormLabel","FormField","TimeInput","TimeWrapper","TimeFieldWrap","RadioBtn","CustomRadioBtn","LowPrioBtn","MidPrioBtn","HighPrioBtn","PriorityWrapper","RadioLabel","CheckedRadioBtnBlue","CheckedRadioBtnYellow","CheckedRadioBtnRed","RadioLabelStyled","AddTaskButton","CancelButton","Error","BoxInput","StyledSVG","StyledEditBtn","BtnTxt","error","selectIsError","title","start","end","priority","selectTheme","useEffect","taskSchema","Yup","shape","min","max","required","test","this","parent","oneOf","onTaskSubmit","values","newTask","editTask","addTask","initialValues","validationSchema","onSubmit","errors","touched","htmlFor","id","type","name","placeholder","step","role","value","createPortal","Modal","document","body","category","showModal","setShowModal","className","date","StyledColumnTasksList","StyledTaskColumnCard","StyledTaskToolbar","props","StyledCategoryModal","coords","clientY","clientX","changeCategory","CATEGORY_LIST","parseCategoryTitle","string","charAt","toUpperCase","replace","variants","filter","cat","handleKeyDown","e","code","window","addEventListener","removeEventListener","currentTarget","target","variant","setDeleteTask","isOpen","categoryModal","setCategoryModal","user","selectUser","avatarURL","low","medium","high","src","alt","tasks","StyledAddTaskBtn","sortedTasks","pathname","useLocation","dayTasks","monthTasks","filterDayTasks","categories","obj","forEach","push","CreateSortedTasks","navigate","useNavigate","Object","console","log","requestDate","period","setPeriod","currentPeriod","includes","getTasksThunk","MainLayout","Header","Suspense","fallback","onClickPrev","newDate","dirtyDate","dirtyAmount","requiredArgs","arguments","amount","toInteger","addDays","subDays","Date","format","addMonths","subMonths","onClickNext","today","path","element","state"],"sourceRoot":""}