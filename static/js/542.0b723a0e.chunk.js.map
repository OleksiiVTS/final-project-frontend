{"version":3,"file":"static/js/542.0b723a0e.chunk.js","mappings":"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","sources":["helpers/schemaYap.js","components/UserForm/UserForm.styled.jsx","components/UserForm/PreviewAvatar.js","components/UserForm/UserForm.jsx","pages/Private/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nconst phoneRegExp =\n  '\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}';\n\nconst ValidSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .max(16, 'Must be 16 characters or less')\n    .required('Username is required'),\n  phone: Yup.string().matches(phoneRegExp, 'Wrong number'),\n  birthday: Yup.date(),\n  skype: Yup.string().max(16, 'Must be 16 characters or less'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n});\n\nexport default ValidSchema;\n","import styled from 'styled-components';\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nexport const Icon = styled(AiFillPlusCircle)`\n  fill: #3e85f3;\n  width: 14px;\n  height: 14px;\n\n  @media screen and (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const FormaBox = styled.form`\n  /* width: 100vh; */\n  height: 100vh;\n\n  /* padding: 95px 20px 40px 20px; */\n  /* background-color: #f7f6f9; */\n  @media screen and (min-width: 768px) {\n    /* padding: 64px 32px 38px 32px; */\n  }\n  @media screen and (min-width: 1440px) {\n    /* padding: 33px 32px 32px 32px; */\n  }\n`;\nexport const UserFormBox = styled.div`\n  width: 335px;\n  position: relative;\n\n  display: flex;\n  padding: 59px 18px 40px 18px;\n  flex-direction: column;\n  border-radius: 16px;\n  background: ${({ bg }) => bg || 'var(--color-choice-dark-no-active)'};\n  color: ${({ color }) => color || '#000'};\n\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 40px 175px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    padding: 60px 165px;\n  }\n`;\n\nexport const LabelAvatar = styled.label`\n  @media screen and (min-width: 768px) {\n    display: block;\n    width: 124px;\n    margin-right: auto;\n    margin-left: auto;\n  }\n`;\n\nexport const BoxForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  column-gap: 50px;\n\n  box-sizing: border-box;\n  @media screen and (min-width: 1440px) {\n    height: 264px;\n    width: 758px;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  left: 50%;\n  top: 0;\n  width: 72px;\n  height: 72px;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    left: 0;\n    transform: translate(0, 0);\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const IconDiv = styled.button`\n  position: absolute;\n  top: 25px;\n  left: 52%;\n  z-index: 2;\n  cursor: pointer;\n  padding: 0;\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n\n  @media screen and (min-width: 768px) {\n    top: 150px;\n    left: 51%;\n    width: 25px;\n    height: 25px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 168px;\n    left: 51%;\n  }\n`;\nexport const WhiteBox = styled.div`\n  position: absolute;\n  top: 29.5px;\n  left: 53.2%;\n  width: 6px;\n  height: 6px;\n  background-color: #ffffff;\n  border-radius: 50%;\n  z-index: 1;\n  @media screen and (min-width: 768px) {\n    top: 157px;\n    left: 52%;\n    width: 11px;\n    height: 11px;\n    width: 12px;\n    height: 12px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 175px;\n    left: 51.7%;\n  }\n`;\nexport const UserName = styled.h1`\n  color: ${({ color }) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1; /* 100% */\n\n  margin: 0;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const User = styled.h2`\n  color: ${({ color }) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n\n  margin-top: 8px;\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 44px;\n  }\n`;\n\nexport const LabelUserForm = styled.label`\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.17; /* 116.667% */\n  display: block;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28; /* 128.571% */\n  }\n`;\n\nexport const InputUserForm = styled.input`\n  box-sizing: border-box;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  color: ${({ color }) => color || '#000'};\n  background: ${({ bg }) => bg || '#fff'};\n\n  margin-bottom: 18px;\n  padding: 12px 14px;\n  border-radius: 8px;\n\n  width: 100%;\n  border: 1px solid\n    ${({ bordercolor }) => bordercolor || 'rgba(17, 17, 17, 0.1)'};\n\n  @media screen and (min-width: 768px) {\n    padding: 13px 18px;\n    width: 354px;\n    margin-bottom: 24px;\n    font-size: 16px;\n    line-height: 1.12; /* 112.5% */\n  }\n  @media screen and (min-width: 1440px) {\n    width: 354px;\n\n    &:nth-child(-n + 3) {\n      margin-right: 50px;\n    }\n  }\n`;\n\nexport const InputUserFormEmail = styled.input`\n  box-sizing: border-box;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  color: ${({ color }) => color || '#000'};\n  background: ${({ bg }) => bg || '#fff'};\n\n  margin-bottom: 18px;\n  padding: 12px 14px;\n  border-radius: 8px;\n\n  width: 100%;\n  border: 1px solid\n    ${({ bordercolor }) => bordercolor || 'rgba(17, 17, 17, 0.1)'};\n\n  @media screen and (min-width: 768px) {\n    padding: 13px 18px;\n    width: 354px;\n    margin-bottom: 24px;\n    font-size: 16px;\n    line-height: 1.12; /* 112.5% */\n  }\n  @media screen and (min-width: 1440px) {\n    width: 354px;\n    margin-bottom: 0;\n    margin-right: 50px;\n  }\n`;\n\nexport const Chevron = styled.svg`\n  position: absolute;\n  bottom: 58%;\n  right: 30px;\n  pointer-events: none;\n\n  @media screen and (min-width: 768px) {\n    bottom: 50.5%;\n    right: 189px;\n  }\n  @media screen and (min-width: 1440px) {\n    bottom: 40.5%;\n    right: 583px;\n  }\n`;\n\nexport const BtnUserForm = styled.button`\n  width: 195px;\n  height: 46px;\n  margin-top: 22px;\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  color: #fff;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    margin-top: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 88px;\n  }\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 10px;\n  font-weight: 400;\n  color: red;\n  position: absolute;\n  width: 400px;\n  bottom: -12px;\n  left: 10px;\n`;\n\nexport const FieldWrap = styled.div`\n  position: relative;\n`;\n","import React from 'react';\nimport { Avatar } from './UserForm.styled';\n\nconst PreviewAvatar = ({ file }) => {\n  const [preview, setPreview] = React.useState(null);\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n  return (\n    <>\n      <Avatar src={preview} alt=\"User avatar\" />\n    </>\n  );\n};\n\nexport default PreviewAvatar;\n","//import moment from 'moment';\n//import { format } from 'date-fns';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, useFormik } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ValidSchema from 'helpers/schemaYap.js';\nimport { update } from 'redux/auth/authOperations.js';\n\nimport { selectUser } from '../../redux/auth/authSelectors.js';\nimport {\n  Avatar,\n  BoxForm,\n  BtnUserForm,\n  Chevron,\n  FormaBox,\n  Icon,\n  IconDiv,\n  InputUserForm,\n  InputUserFormEmail,\n  LabelAvatar,\n  LabelUserForm,\n  User,\n  UserFormBox,\n  UserName,\n  WhiteBox,\n} from './UserForm.styled.jsx';\nimport { useRef } from 'react';\nimport PreviewAvatar from './PreviewAvatar.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\nimport sprite from '../Pictures/sprite.svg';\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const updateUser = updateUser => {\n    dispatch(update(updateUser));\n  };\n  const isUser = useSelector(selectUser);\n  //const dateMoment = format(new Date(), 'MM/dd/yyyy');\n  const theme = useSelector(selectTheme);\n\n  const fileRef = useRef(null);\n\n  const formik = useFormik({\n    initialValues: {\n      usrName: isUser.username ?? '',\n      phone: isUser.phone ?? '',\n      birthday: new Date(isUser.birthday),\n      skype: isUser.skype ?? '',\n      email: isUser.email ?? '',\n      file: isUser.file,\n    },\n    onSubmit: values => {\n      var imagefile = document.getElementById('avatar');\n      //console.log(imagefile);\n      updateUser({ ...values, avatarURL: imagefile });\n    },\n  });\n  console.log(formik.values.birthday);\n\n  const Input = ({ onChange, placeholder, value, isSecure, id, onClick }) => (\n    <InputUserForm\n      bg={theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'}\n      color={theme === 'dark' ? '#fff' : '#000'}\n      bordercolor={\n        theme === 'dark'\n          ? 'var(--color-field-names-dark)'\n          : 'rgba(17, 17, 17, 0.1)'\n      }\n      onChange={onChange}\n      placeholder={placeholder}\n      value={value}\n      isSecure={isSecure}\n      id={id}\n      onClick={onClick}\n    />\n  );\n  return (\n    <Formik validationSchema={ValidSchema}>\n      <FormaBox onSubmit={formik.handleSubmit}>\n        <UserFormBox\n          validationSchema={ValidSchema}\n          bg={theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'}\n          color={theme === 'dark' ? 'var(--color-field-names-dark)' : '#000'}\n        >\n          <div>\n            <LabelAvatar htmlFor=\"avatar\">\n              {formik.values.file ? (\n                <PreviewAvatar file={formik.values.file} />\n              ) : (\n                <Avatar src={isUser.avatarURL} alt=\"User avatar\" />\n              )}\n\n              <IconDiv\n                type=\"button\"\n                onClick={() => {\n                  fileRef.current.click();\n                }}\n              >\n                <Icon />\n              </IconDiv>\n              <WhiteBox></WhiteBox>\n              <input\n                ref={fileRef}\n                id=\"avatar\"\n                type=\"file\"\n                hidden\n                accept=\"image/*\"\n                onChange={event => {\n                  formik.setFieldValue('file', event.target.files[0]);\n                }}\n                onBlur={formik.handleBlur}\n                value={formik.values.avatar}\n              />\n            </LabelAvatar>\n            <UserName color={theme === 'dark' ? '#fff' : '#343434'}>\n              {isUser.username ?? 'User Name'}\n            </UserName>\n\n            <User\n              color={\n                theme === 'dark' ? 'var(--color-field-names-dark)' : '#343434'\n              }\n            >\n              User\n            </User>\n          </div>\n          <BoxForm>\n            <LabelUserForm htmlFor=\"usrName\">User Name</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"usrName\"\n              name=\"usrName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.usrName}\n            />\n            {formik.touched.usrName && formik.errors.usrName ? (\n              <div>{formik.errors.usrName}</div>\n            ) : null}\n\n            <LabelUserForm htmlFor=\"birthday\">Birthday</LabelUserForm>\n            {/* <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"birthday\"\n              name=\"birthday\"\n              type=\"birthday\"\n              placeholder={dateMoment}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.birthday}\n            ></InputUserForm>  */}\n\n            <DatePicker\n              id=\"birthday\"\n              selected={formik.values.birthday}\n              name=\"birthday\"\n              customInput={<Input />}\n              onChange={date => formik.setFieldValue('birthday', date)}\n            />\n            <Chevron\n              width=\"18\"\n              height=\"18\"\n              stroke={theme === 'dark' ? '#fff' : '#000'}\n            >\n              <use href={sprite + '#icon-chevron-down'}></use>\n            </Chevron>\n            <LabelUserForm htmlFor=\"email\">Email</LabelUserForm>\n            <InputUserFormEmail\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Add your email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n\n            <LabelUserForm htmlFor=\"phone\">Phone</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"phone\"\n              name=\"phone\"\n              type=\"phone\"\n              placeholder=\"Add a phone number\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phone}\n            ></InputUserForm>\n\n            <LabelUserForm htmlFor=\"skype\">Skype</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"skype\"\n              name=\"skype\"\n              type=\"skype\"\n              placeholder=\"Add a skype number\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.skype}\n            ></InputUserForm>\n          </BoxForm>\n          <BtnUserForm type=\"submit\">Save changes</BtnUserForm>\n        </UserFormBox>\n      </FormaBox>\n    </Formik>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport { selectIsRefreshing } from 'redux/auth/authSelectors.js';\nimport { useSelector } from 'react-redux';\nimport { Circles } from 'react-loader-spinner';\nimport UserForm from 'components/UserForm/UserForm.jsx';\nimport { HeaderContainer } from '../CalendarPage/CalendarPage.styled.jsx';\nimport Header from 'components/Header/Header.jsx';\nimport { CalendarContainer } from 'components/Calendar/common/index.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\n\nconst AccountPage = () => {\n  const IsRefreshing = useSelector(selectIsRefreshing);\n  const theme = useSelector(selectTheme);\n\n  return (\n    <MainLayout>\n      <CalendarContainer bgcolor={theme === 'dark' ? '#171820' : '#f7f6f9'}>\n        <HeaderContainer>\n          <Header pageName='My Account'/>\n        </HeaderContainer>\n        {IsRefreshing ? (\n          <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#4d78a9\"\n            // wrapperClass={css.loader}\n          />\n        ) : (\n          <UserForm />\n        )}\n      </CalendarContainer>\n    </MainLayout>\n  );\n};\n\nexport default AccountPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["Yup","shape","firstName","max","required","phone","matches","birthday","skype","email","Icon","styled","AiFillPlusCircle","FormaBox","UserFormBox","bg","color","LabelAvatar","BoxForm","Avatar","IconDiv","WhiteBox","UserName","User","LabelUserForm","InputUserForm","bordercolor","InputUserFormEmail","Chevron","BtnUserForm","file","React","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","src","alt","dispatch","useDispatch","isUser","useSelector","selectUser","theme","selectTheme","fileRef","useRef","formik","useFormik","initialValues","usrName","username","Date","onSubmit","values","updateUser","imagefile","document","getElementById","avatarURL","update","console","log","Input","onChange","placeholder","value","isSecure","id","onClick","validationSchema","ValidSchema","handleSubmit","htmlFor","type","current","click","ref","hidden","accept","event","setFieldValue","target","files","onBlur","handleBlur","avatar","name","handleChange","touched","errors","selected","customInput","date","width","height","stroke","href","sprite","IsRefreshing","selectIsRefreshing","MainLayout","bgcolor","Header","pageName"],"sourceRoot":""}