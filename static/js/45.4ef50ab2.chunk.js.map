{"version":3,"file":"static/js/45.4ef50ab2.chunk.js","mappings":"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","sources":["components/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/ChoosedDay/TasksColumnItem/TasksColumnItem.styled.js","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.styled.js","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.jsx","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.styled.js","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.jsx","components/ChoosedDay/TasksColumnItem/TasksColumnItem.jsx","components/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ChoosedDay.styled.js","components/ChoosedDay/ChoosedDay.jsx","pages/Private/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledTasksColumnsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 335px);\n  /* grid-template-rows: repeat(auto-fit, 1fr); */\n  /* grid-template-rows: 1fr; */\n  grid-column-gap: 20px;\n  grid-row-gap: 0px;\n\n  overflow-x: auto;\n  /* height: 100%; */\n  /* height: 500px; */\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 344px);\n    grid-column-gap: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-column-gap: 27px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnItem = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 18px 18px 20px;\n  /* min-width: 335px;\n  min-height: 155px; */\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background: #fff;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 20px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n\n  .columnHeadBar {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 28px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledColumnHeadBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 34px;\n\n  @media screen and (min-width: 768px) {\n    height: 38px;\n  }\n\n  & h3 {\n    margin: 0;\n    color: #111;\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.111; /* 111.111% */\n\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      line-height: 1.2; /* 120% */\n    }\n  }\n\n  & button {\n    /* width: 22px; */\n    /* height: 22px; */\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: white;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 22px;\n    height: 22px;\n    stroke: currentColor;\n    fill: white;\n\n    @media screen and (min-width: 768px) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n","import React from 'react';\nimport sprite from '../../../Pictures/sprite.svg';\n// import { ReactComponent as PlusCircleLogo } from '../../../Pictures/plus-circle.svg';\nimport { StyledColumnHeadBar } from './ColumnHeadBar.styled';\n\n// import { useDispatch } from 'react-redux';\n// import { addTask } from 'redux/tasks/operations';\n\nconst ColumnHeadBar = ({ title, category }) => {\n  // const dispatch = useDispatch();\n\n  const handleClick = e => {\n    console.log(`add task to ${category}`);\n    //\n    // onClick={dispatch(addTask)}\n  };\n\n  return (\n    <StyledColumnHeadBar className=\"columnHeadBar\">\n      <h3>{title}</h3>\n      <button onClick={handleClick} aria-label=\"add task\" type=\"button\">\n        <svg>\n          <use href={sprite + '#icon-plus-circle'}></use>\n        </svg>\n        {/* <PlusCircleLogo /> */}\n      </button>\n    </StyledColumnHeadBar>\n  );\n};\n\nexport default ColumnHeadBar;\n","import styled from 'styled-components';\n\nexport const StyledAddTaskBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 299px;\n  height: 48px;\n  padding: 16px 20px;\n\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n  background: #e3f3ff;\n\n  color: #111;\n  /* text-align: center; */\n  font-family: Inter;\n  font-size: 14px;\n  /* font-style: normal; */\n  font-weight: 600;\n  line-height: 1.285; /* 128.571% */\n\n  & span {\n    line-height: 0;\n    margin-right: 8px;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: currentColor;\n    fill: white;\n  }\n\n  &:hover {\n    color: white;\n    border: 1px solid #3e85f3;\n    background: #3e85f3;\n  }\n`;\n","import React from 'react';\nimport { StyledAddTaskBtn } from './AddTaskBtn.styled';\n\nimport sprite from '../../../Pictures/sprite.svg';\n\nconst AddTaskBtn = ({ category }) => {\n  const handleClick = e => {\n    console.log(`add task to ${category}`);\n    //\n    // onClick={dispatch(addTask)}\n  };\n\n  return (\n    <StyledAddTaskBtn aria-label=\"add task\" onClick={handleClick}>\n      <span>\n        <svg>\n          <use href={sprite + '#icon-plus'}></use>\n        </svg>\n      </span>\n      Add task\n    </StyledAddTaskBtn>\n  );\n};\n\nexport default AddTaskBtn;\n","import styled from 'styled-components';\n\nexport const StyledColumnTasksList = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskColumnCard = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px; */\n  padding: 14px 14px 18px;\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #f7f6f9;\n\n  & .title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    margin-bottom: 28px;\n\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285; /* 128.571% */\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskToolbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n\n  & .infoWrapper {\n    display: flex;\n    align-items: end;\n  }\n\n  & .imgWrapper {\n    overflow: hidden;\n    margin-right: 8px;\n\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    border: 1.8px solid #3e85f3;\n    /* background: url(<path-to-image>), lightgray 50% / cover no-repeat; */\n\n    & img {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  & span {\n    padding: 4px 12px;\n\n    color: #fff;\n\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 600;\n    line-height: 1.2; /* 120% */\n\n    border-radius: 4px;\n    background: ${props => props.priority};\n  }\n\n  .controlsWrapper {\n    line-height: 0;\n  }\n  & button {\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: #f7f6f9;\n  }\n\n  & button:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: #f7f6f9;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import { StyledTaskToolbar } from './TaskToolbar.styled';\n\nimport sprite from '../../../../../Pictures/sprite.svg';\n// import { useSelector } from 'react-redux';\n\nconst TaskToolbar = ({ priority, id }) => {\n  // const user = useSelector('user')\n  const user = {\n    _id: { $oid: '6529476a97b7633982504c1e' },\n    email: 'vlad4@mail.com',\n    password: '$2a$10$/LQqZa97FIpqrzsuN0fhi.yzcowlVFbq5TpxWaV5iitOMgexu.lVi',\n    subscription: 'starter',\n    avatarURL:\n      'http://res.cloudinary.com/dnd9pw6nh/image/upload/v1697204074/avatarUser/scymdkr4ztejgfzcj8qh.jpg',\n    public_id: 'avatarUser/scymdkr4ztejgfzcj8qh',\n    verify: true,\n    name: 'vlad',\n    verificationToken: ' ',\n    createdAt: { $date: { $numberLong: '1697204074420' } },\n    updatedAt: { $date: { $numberLong: '1697315175368' } },\n    token:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Mjk0NzZhOTdiNzYzMzk4MjUwNGMxZSIsImlhdCI6MTY5NzMxNTE3NSwiZXhwIjoxNjk3Mzk3OTc1fQ.c3V0oMP1jeWgx4RiyHPD5pJot0DdtNl2Eus3B-juXOw',\n  };\n\n  const { avatarURL, name } = user;\n\n  const priorityColors = {\n    low: '#72C2F8',\n    medium: '#F3B249',\n    high: '#EA3D65',\n  };\n\n  const onCategoryChange = e => {\n    console.log(`change category for id ${id}`);\n  };\n\n  const onEditClick = e => {\n    console.log(`edit ${id}`);\n  };\n\n  const onDeleteClick = e => {\n    console.log(`delete ${id}`);\n  };\n\n  return (\n    <StyledTaskToolbar\n      className=\"taskToolbar\"\n      priority={priorityColors[priority]}\n    >\n      <div className=\"infoWrapper\">\n        <div className=\"imgWrapper\">\n          <img src={avatarURL} alt={name} />\n        </div>\n        <span>{priority}</span>\n      </div>\n      <div className=\"controlsWrapper\">\n        <button\n          onClick={onCategoryChange}\n          aria-label=\"change task category\"\n          type=\"button\"\n        >\n          <svg>\n            <use href={sprite + '#arrow-circle-broken-right'}></use>\n          </svg>\n        </button>\n        <button onClick={onEditClick} aria-label=\"edit task\" type=\"button\">\n          <svg>\n            <use href={sprite + '#icon-pencil'}></use>\n          </svg>\n        </button>\n        <button onClick={onDeleteClick} aria-label=\"delete task\" type=\"button\">\n          <svg>\n            <use href={sprite + '#icon-trash'}></use>\n          </svg>\n        </button>\n      </div>\n    </StyledTaskToolbar>\n    //\n  );\n};\n\nexport default TaskToolbar;\n","import React from 'react';\nimport { StyledTaskColumnCard } from './TaskColumnCard.styled';\nimport TaskToolbar from './TaskToolbar/TaskToolbar';\n\nconst TaskColumnCard = ({ task }) => {\n  const { title, priority, _id } = task;\n  return (\n    <StyledTaskColumnCard>\n      <p className=\"title\">{title}</p>\n      <TaskToolbar priority={priority} id={_id} />\n    </StyledTaskColumnCard>\n  );\n};\n\nexport default TaskColumnCard;\n","import React from 'react';\nimport { StyledColumnTasksList } from './ColumnTasksList.styled';\nimport TaskColumnCard from './TaskColumnCard/TaskColumnCard';\n\nconst ColumnTasksList = ({ tasks }) => {\n  return (\n    <StyledColumnTasksList>\n      {tasks.map(task => (\n        <TaskColumnCard key={task.title} task={task} />\n      ))}\n    </StyledColumnTasksList>\n  );\n};\n\nexport default ColumnTasksList;\n","import React from 'react';\nimport { StyledTasksColumnItem } from './TasksColumnItem.styled';\nimport ColumnHeadBar from './ColumnHeadBar/ColumnHeadBar';\nimport AddTaskBtn from './AddTaskBtn/AddTaskBtn';\nimport ColumnTasksList from './ColumnTasksList/ColumnTasksList';\n\nconst TasksColumnItem = ({ title, tasks, category }) => {\n  // console.log(category);\n  return (\n    <StyledTasksColumnItem className=\"tasksColumnItem\">\n      <ColumnHeadBar title={title} category={category} />\n      <ColumnTasksList tasks={tasks} />\n      <AddTaskBtn category={category} />\n    </StyledTasksColumnItem>\n  );\n};\n\nexport default TasksColumnItem;\n","import React from 'react';\nimport { StyledTasksColumnsList } from './TasksColumnsList.styled';\nimport TasksColumnItem from '../TasksColumnItem/TasksColumnItem';\n\nconst TasksColumnsList = ({ currentTasks }) => {\n  // console.log(currentTasks);\n  const titles = ['To do', 'In progress', 'Done'];\n  const categoryList = ['to-do', 'in-progress', 'done'];\n\n  return (\n    <StyledTasksColumnsList>\n      {currentTasks.map((set, idx) => (\n        <TasksColumnItem\n          key={titles[idx]}\n          title={titles[idx]}\n          category={categoryList[idx]}\n          tasks={set}\n        />\n      ))}\n    </StyledTasksColumnsList>\n  );\n};\n\nexport default TasksColumnsList;\n","import styled from 'styled-components';\n\nexport const StyledChoosedDay = styled.div`\n  padding: 24px 20px 20px;\n  overflow-x: auto;\n\n  /* height: 100%; */\n  /* height: 600px; */\n\n  background: #f7f6f9;\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px 18px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 32px 32px 18px;\n  }\n`;\n","import React from 'react';\n// import { useDispatch } from 'react-redux';\n\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\nimport { StyledChoosedDay } from './ChoosedDay.styled';\nimport { useParams } from 'react-router-dom';\n\nconst ChoosedDay = () => {\n  const { currentDay } = useParams();\n  console.log('currentDay', currentDay);\n\n  // const tasks = []; //get from state\n  const categoryList = ['to-do', 'in-progress', 'done'];\n  // const priorityList = ['low', 'medium', 'high'];\n\n  const tasksForCurrentDay = [\n    {\n      _id: '65294bc4924f405b17970a7e',\n      title: 'first',\n      start: '14:15',\n      end: '03:00',\n      priority: 'medium',\n      date: '2023-12-31',\n      category: 'done',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '65294cf6924f405b17970a82',\n      title: 'second',\n      start: '14:15',\n      end: '03:00',\n      priority: 'low',\n      date: '2023-12-31',\n      category: 'to-do',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '65294d04924f405b17970a85',\n      title: 'third',\n      start: '14:15',\n      end: '03:00',\n      priority: 'high',\n      date: '2023-12-31',\n      category: 'to-do',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '6529508bbbaee1c2770c5ba9',\n      title: 'fourth',\n      start: '14:15',\n      end: '03:00',\n      priority: 'low',\n      date: '2023-12-31',\n      category: 'done',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '652ad610673d4d226e29333e',\n      title: 'fifth',\n      start: '15:30',\n      end: '12:12',\n      priority: 'high',\n      date: '2023-12-31',\n      category: 'done',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '652ad7a68911da03b5124190',\n      title: 'sixth',\n      start: '15:30',\n      end: '12:12',\n      priority: 'medium',\n      date: '2023-12-31',\n      category: 'to-do',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n  ];\n\n  const currentTasks = [[], [], []];\n\n  tasksForCurrentDay.forEach(task => {\n    if (task.category === categoryList[0]) currentTasks[0].push(task);\n    if (task.category === categoryList[1]) currentTasks[1].push(task);\n    if (task.category === categoryList[2]) currentTasks[2].push(task);\n  });\n\n  // const currentTasks = tasksForCurrentDay.reduce((acc, task) => {\n  //   console.log(task.category);\n  //   acc[task.category] = [...acc[task.category], task];\n  //   return acc;\n  // }, {});\n  // console.log(currentTasks);\n\n  return (\n    <StyledChoosedDay>\n      {/* <DayCalendarHead /> */}\n      <TasksColumnsList currentTasks={currentTasks} />\n    </StyledChoosedDay>\n    //\n  );\n};\n\nexport default ChoosedDay;\n","import React, { Suspense } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport ChoosedDay from 'components/ChoosedDay/ChoosedDay.jsx';\n\n// import { Link } from 'react-router-dom';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\n\nconst CalendarPage = () => {\n  return (\n    <MainLayout>\n      <div>\n        <h1> CalendarPage</h1>\n      </div>\n      <Suspense fallback={null}>\n        <Routes>\n          <Route path=\"/day/:currentDay\" element={<ChoosedDay />} />\n        </Routes>\n      </Suspense>\n    </MainLayout>\n    // {isLoading && !error && (\n    //     <Circles\n    //       height=\"80\"\n    //       width=\"80\"\n    //       color=\"#4d78a9\"\n    //!       wrapperClass={css.loader}\n    //     />\n    //   )}\n  );\n};\n\nexport default CalendarPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["StyledTasksColumnsList","styled","StyledTasksColumnItem","StyledColumnHeadBar","title","category","className","onClick","e","console","log","type","href","sprite","StyledAddTaskBtn","StyledColumnTasksList","StyledTaskColumnCard","StyledTaskToolbar","props","priority","id","avatarURL","name","low","medium","high","src","alt","task","_id","tasks","map","currentTasks","titles","categoryList","set","idx","StyledChoosedDay","currentDay","useParams","start","end","date","owner","$oid","forEach","push","MainLayout","Suspense","fallback","path","element"],"sourceRoot":""}