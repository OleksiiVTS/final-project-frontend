{"version":3,"file":"static/js/923.56b6b3e1.chunk.js","mappings":"oNAwHA,UA9GoB,WAAO,IAAD,YAClBA,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,QAAQC,IAAIJ,GACZ,IAAMK,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,QAAO,UAAER,EAAOS,YAAT,QAAiB,GACxBC,MAAK,UAAEV,EAAOU,aAAT,QAAkB,GACvBC,SAAQ,UAAEX,EAAOW,gBAAT,QAAqB,GAC7BC,MAAK,UAAEZ,EAAOY,aAAT,QAAkB,GACvBC,MAAK,UAAEb,EAAOa,aAAT,QAAkB,IAEzBC,iBAAkBC,EAAAA,GAAW,CAC3BC,UAAWD,EAAAA,KACRE,IAAI,GAAI,iCACRC,SAAS,YACZR,MAAOK,EAAAA,KACPJ,SAAUI,EAAAA,KACVH,MAAOG,EAAAA,KACPF,MAAOE,EAAAA,KAAaF,MAAM,yBAAyBK,SAAS,cAE9DC,SAAU,SAAAC,GACRC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,GACpC,IAGH,OACE,SAAC,IAAD,WACE,4BACE,wBAAI,kBACJ,kBAAMD,SAAUd,EAAOmB,aAAvB,WACE,mBAAOC,QAAQ,SAAf,WACE,gBAAKC,IAAI,GAAGC,IAAI,iBAChB,kBAAOC,KAAK,OAAOnB,KAAK,SAASoB,OAAO,aACxC,kBAHF,UAIG7B,EAAOS,YAJV,QAIkB,aAChB,kBAAS,WAGX,mBACA,kBAAOgB,QAAQ,UAAf,SAAyB,eACzB,kBACEK,GAAG,UACHrB,KAAK,UACLmB,KAAK,OACLG,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAOe,OAAOZ,UAEtBH,EAAO+B,QAAQ5B,SAAWH,EAAOgC,OAAO7B,SACvC,yBAAMH,EAAOgC,OAAO7B,UAClB,MACJ,mBACA,kBAAOiB,QAAQ,QAAf,SAAuB,WACvB,kBACEK,GAAG,QACHrB,KAAK,QACLmB,KAAK,QACLG,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAOe,OAAOV,SAEvB,mBACA,kBAAOe,QAAQ,WAAf,SAA0B,cAC1B,kBACEK,GAAG,WACHrB,KAAK,WACLmB,KAAK,WACLG,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAOe,OAAOT,YAEvB,mBACA,kBAAOc,QAAQ,QAAf,SAAuB,WACvB,kBACEK,GAAG,QACHrB,KAAK,QACLmB,KAAK,QACLG,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAOe,OAAOR,SAEvB,mBACA,kBAAOa,QAAQ,QAAf,SAAuB,WACvB,kBACEK,GAAG,QACHrB,KAAK,QACLmB,KAAK,QACLG,SAAU1B,EAAO2B,aACjBC,OAAQ5B,EAAO6B,WACfC,MAAO9B,EAAOe,OAAOP,QAEtBR,EAAO+B,QAAQvB,OAASR,EAAOgC,OAAOxB,OACrC,yBAAMR,EAAOgC,OAAOxB,QAClB,MACJ,mBACA,mBAAQe,KAAK,SAAb,SAAsB,wBAa/B,C","sources":["pages/Private/AccountPage/AccountPage.jsx"],"sourcesContent":["import React from 'react';\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { selectUser } from 'redux/auth/authSelectors.js';\nimport { useSelector } from 'react-redux';\n\n// import { Link } from 'react-router-dom';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\n\nconst AccountPage = () => {\n  const isUser = useSelector(selectUser);\n  console.log(isUser);\n  const formik = useFormik({\n    initialValues: {\n      usrName: isUser.name ?? '',\n      phone: isUser.phone ?? '',\n      birthday: isUser.birthday ?? '',\n      skype: isUser.skype ?? '',\n      email: isUser.email ?? '',\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .max(15, 'Must be 15 characters or less')\n        .required('Required'),\n      phone: Yup.string(),\n      birthday: Yup.string(),\n      skype: Yup.string(),\n      email: Yup.string().email('Invalid email address').required('Required'),\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <MainLayout>\n      <div>\n        <h1> AccountForm</h1>\n        <form onSubmit={formik.handleSubmit}>\n          <label htmlFor=\"avatar\">\n            <img src=\"\" alt=\"User avatar\" />\n            <input type=\"file\" name=\"avatar\" accept=\"image/*\" />\n            <br></br>\n            {isUser.name ?? 'User Name'}\n            <br></br>\n            User\n          </label>\n          <br></br>\n          <label htmlFor=\"usrName\">User Name</label>\n          <input\n            id=\"usrName\"\n            name=\"usrName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.usrName}\n          />\n          {formik.touched.usrName && formik.errors.usrName ? (\n            <div>{formik.errors.usrName}</div>\n          ) : null}\n          <br></br>\n          <label htmlFor=\"phone\">Phone</label>\n          <input\n            id=\"phone\"\n            name=\"phone\"\n            type=\"phone\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.phone}\n          ></input>\n          <br></br>\n          <label htmlFor=\"birthday\">Birthday</label>\n          <input\n            id=\"birthday\"\n            name=\"birthday\"\n            type=\"birthday\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.birthday}\n          ></input>\n          <br></br>\n          <label htmlFor=\"skype\">Skype</label>\n          <input\n            id=\"skype\"\n            name=\"skype\"\n            type=\"skype\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.skype}\n          ></input>\n          <br></br>\n          <label htmlFor=\"email\">Email</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n          ) : null}\n          <br></br>\n          <button type=\"submit\">Save changes</button>\n        </form>\n      </div>\n    </MainLayout>\n    // {isLoading && !error && (\n    //     <Circles\n    //       height=\"80\"\n    //       width=\"80\"\n    //       color=\"#4d78a9\"\n    //!       wrapperClass={css.loader}\n    //     />\n    //   )}\n  );\n};\n\nexport default AccountPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["isUser","useSelector","selectUser","console","log","formik","useFormik","initialValues","usrName","name","phone","birthday","skype","email","validationSchema","Yup","firstName","max","required","onSubmit","values","alert","JSON","stringify","handleSubmit","htmlFor","src","alt","type","accept","id","onChange","handleChange","onBlur","handleBlur","value","touched","errors"],"sourceRoot":""}