{"version":3,"file":"static/js/687.d5af5cc5.chunk.js","mappings":"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","sources":["helpers/schemaYap.js","components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/Private/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nconst phoneRegExp =\n  '\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}';\n\nconst ValidSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .max(16, 'Must be 16 characters or less')\n    .required('Username is required'),\n  phone: Yup.string().matches(phoneRegExp, 'Wrong number'),\n  birthday: Yup.string(),\n  skype: Yup.string().max(16, 'Must be 16 characters or less'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n});\n\nexport default ValidSchema;\n","import styled from 'styled-components';\n\nexport const UserFormBox = styled.div`\n  width: 335px;\n  position: relative;\n  outline: 1px solid red;\n  display: flex;\n  padding: 59px 18px 40px 18px;\n  flex-direction: column;\n  border-radius: 16px;\n  background: #fff;\n  margin-top: 95px;\n  justify-content: center;\n`;\nexport const Avatar = styled.img`\n  position: absolute;\n  left: 50%;\n  top: 0;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const UserName = styled.h1`\n  color: #343434;\n\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1; /* 100% */\n\n  margin: 0;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const User = styled.h2`\n  color: #343434;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n\n  margin-top: 8px;\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const LabelUserForm = styled.label`\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.17; /* 116.667% */\n\n  margin-bottom: 8px;\n`;\n\nexport const InputUserForm = styled.input`\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n\n  margin-bottom: 18px;\n  padding: 12px 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(17, 17, 17, 0.1);\n`;\n\nexport const BtnUserForm = styled.button`\n  width: 195px;\n  height: 46px;\n\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  color: #fff;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, useFormik } from 'formik';\nimport ValidSchema from 'helpers/schemaYap.js';\nimport { update } from 'redux/auth/authOperations.js';\n\nimport { selectUser } from '../../redux/auth/authSelectors.js';\nimport {\n  Avatar,\n  BtnUserForm,\n  InputUserForm,\n  LabelUserForm,\n  User,\n  UserFormBox,\n  UserName,\n} from './UserForm.styled.jsx';\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const updateUser = updateUser => {\n    dispatch(update(updateUser));\n  };\n  const isUser = useSelector(selectUser);\n  console.log(isUser);\n\n  const formik = useFormik({\n    initialValues: {\n      usrName: isUser.username ?? '',\n      phone: isUser.phone ?? '',\n      birthday: isUser.birthday ?? '',\n      skype: isUser.skype ?? '',\n      email: isUser.email ?? '',\n    },\n    onSubmit: values => {\n      // console.log(values.skype);\n      updateUser(values);\n    },\n  });\n\n  return (\n    <Formik validationSchema={ValidSchema}>\n      <form onSubmit={formik.handleSubmit}>\n        <UserFormBox validationSchema={ValidSchema}>\n          <label htmlFor=\"avatar\">\n            <Avatar\n              src={isUser.avatarURL}\n              alt=\"User avatar\"\n              width={125}\n              height={125}\n            />\n            <input type=\"file\" name=\"avatar\" accept=\"image/*\" />\n\n            <UserName>{isUser.username ?? 'User Name'}</UserName>\n\n            <User>User</User>\n          </label>\n\n          <LabelUserForm htmlFor=\"usrName\">User Name</LabelUserForm>\n          <InputUserForm\n            id=\"usrName\"\n            name=\"usrName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.usrName}\n          />\n          {formik.touched.usrName && formik.errors.usrName ? (\n            <div>{formik.errors.usrName}</div>\n          ) : null}\n\n          <LabelUserForm htmlFor=\"phone\">Phone</LabelUserForm>\n          <InputUserForm\n            id=\"phone\"\n            name=\"phone\"\n            type=\"phone\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.phone}\n          ></InputUserForm>\n\n          <LabelUserForm htmlFor=\"birthday\">Birthday</LabelUserForm>\n          <InputUserForm\n            id=\"birthday\"\n            name=\"birthday\"\n            type=\"birthday\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.birthday}\n          ></InputUserForm>\n\n          <LabelUserForm htmlFor=\"skype\">Skype</LabelUserForm>\n          <InputUserForm\n            id=\"skype\"\n            name=\"skype\"\n            type=\"skype\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.skype}\n          ></InputUserForm>\n\n          <LabelUserForm htmlFor=\"email\">Email</LabelUserForm>\n          <InputUserForm\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n          ) : null}\n\n          <BtnUserForm type=\"submit\">Save changes</BtnUserForm>\n        </UserFormBox>\n      </form>\n    </Formik>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\n\nimport { selectIsRefreshing } from 'redux/auth/authSelectors.js';\nimport { useSelector } from 'react-redux';\n\n// import { Link } from 'react-router-dom';\nimport { Circles } from 'react-loader-spinner';\nimport UserForm from 'components/UserForm/UserForm.jsx';\n\nconst AccountPage = () => {\n  const IsRefreshing = useSelector(selectIsRefreshing);\n  // console.log(isUser);\n\n  return (\n    <MainLayout>\n      {IsRefreshing ? (\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"#4d78a9\"\n          // wrapperClass={css.loader}\n        />\n      ) : (\n        <div>\n          <h1> AccountForm</h1>\n          <UserForm />\n        </div>\n      )}\n    </MainLayout>\n  );\n};\n\nexport default AccountPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["Yup","shape","firstName","max","required","phone","matches","birthday","skype","email","UserFormBox","styled","Avatar","UserName","User","LabelUserForm","InputUserForm","BtnUserForm","dispatch","useDispatch","isUser","useSelector","selectUser","console","log","formik","useFormik","initialValues","usrName","username","onSubmit","values","updateUser","update","validationSchema","ValidSchema","handleSubmit","htmlFor","src","avatarURL","alt","width","height","type","name","accept","id","onChange","handleChange","onBlur","handleBlur","value","touched","errors","IsRefreshing","selectIsRefreshing","MainLayout","color"],"sourceRoot":""}