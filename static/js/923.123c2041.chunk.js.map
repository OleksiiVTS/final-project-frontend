{"version":3,"file":"static/js/923.123c2041.chunk.js","mappings":"oMAEaA,E,QAAUC,GAAAA,QAAH,0C,UCyBpB,EAnBmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACC,UAACF,EAAD,YAEC,SAACG,EAAA,EAAD,IAECD,IAWH,C,8GCkGD,UAjHoB,WAAO,IAAD,YAClBE,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAeF,EAAAA,EAAAA,IAAYG,EAAAA,IAE3BC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,QAAO,UAAER,EAAOS,gBAAT,QAAqB,GAC5BC,MAAK,UAAEV,EAAOU,aAAT,QAAkB,GACvBC,SAAQ,UAAEX,EAAOW,gBAAT,QAAqB,GAC7BC,MAAK,UAAEZ,EAAOY,aAAT,QAAkB,GACvBC,MAAK,UAAEb,EAAOa,aAAT,QAAkB,IAEzBC,SAAU,SAAAC,GAERC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,GACpC,EACDI,iBAAkBC,EAAAA,GAAW,CAC3BC,UAAWD,EAAAA,KACRE,IAAI,GAAI,iCACRC,SAAS,YACZb,MAAOU,EAAAA,KACPT,SAAUS,EAAAA,KACVR,MAAOQ,EAAAA,KACPP,MAAOO,EAAAA,KAAaP,MAAM,yBAAyBU,SAAS,gBAIhE,OACE,SAAC,IAAD,UACGpB,GACC,SAAC,KAAD,CACEqB,OAAO,KACPC,MAAM,KACNC,MAAM,aAIR,4BACE,wBAAI,kBACJ,kBAAMZ,SAAUT,EAAOsB,aAAvB,WACE,mBAAOC,QAAQ,SAAf,WACE,gBAAKC,IAAI,GAAGC,IAAI,iBAChB,kBAAOC,KAAK,OAAOC,KAAK,SAASC,OAAO,aACxC,kBAHF,UAIGjC,EAAOS,gBAJV,QAIsB,aACpB,kBAAS,WAGX,mBACA,kBAAOmB,QAAQ,UAAf,SAAyB,eACzB,kBACEM,GAAG,UACHF,KAAK,UACLD,KAAK,OACLI,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOU,OAAOP,UAEtBH,EAAOmC,QAAQhC,SAAWH,EAAOoC,OAAOjC,SACvC,yBAAMH,EAAOoC,OAAOjC,UAClB,MACJ,mBACA,kBAAOoB,QAAQ,QAAf,SAAuB,WACvB,kBACEM,GAAG,QACHF,KAAK,QACLD,KAAK,QACLI,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOU,OAAOL,SAEvB,mBACA,kBAAOkB,QAAQ,WAAf,SAA0B,cAC1B,kBACEM,GAAG,WACHF,KAAK,WACLD,KAAK,WACLI,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOU,OAAOJ,YAEvB,mBACA,kBAAOiB,QAAQ,QAAf,SAAuB,WACvB,kBACEM,GAAG,QACHF,KAAK,QACLD,KAAK,QACLI,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOU,OAAOH,SAEvB,mBACA,kBAAOgB,QAAQ,QAAf,SAAuB,WACvB,kBACEM,GAAG,QACHF,KAAK,QACLD,KAAK,QACLI,SAAU9B,EAAO+B,aACjBC,OAAQhC,EAAOiC,WACfC,MAAOlC,EAAOU,OAAOF,QAEtBR,EAAOmC,QAAQ3B,OAASR,EAAOoC,OAAO5B,OACrC,yBAAMR,EAAOoC,OAAO5B,QAClB,MACJ,mBACA,mBAAQkB,KAAK,SAAb,SAAsB,wBAMjC,C","sources":["components/MainLayout/MainLayout.styled.jsx","components/MainLayout/MainLayout.jsx","pages/Private/AccountPage/AccountPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n\tdisplay: flex;\n`;\n","import React from 'react';\nimport SideBar from '../SideBar/SideBar.jsx';\n// import Header from '../Header/Header.jsx';\n// import { Link } from 'react-router-dom';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\n\nimport { Section } from './MainLayout.styled.jsx';\n\nconst MainLayout = ({ children }) => {\n\treturn (\n\t\t<Section>\n\t\t\t{/* <h1> MainLayout</h1> */}\n\t\t\t<SideBar />\n\t\t\t{/* <Header /> */}\n\t\t\t{children}\n\t\t</Section>\n\t\t// {isLoading && !error && (\n\t\t//     <Circles\n\t\t//       height=\"80\"\n\t\t//       width=\"80\"\n\t\t//       color=\"#4d78a9\"\n\t\t//!       wrapperClass={css.loader}\n\t\t//     />\n\t\t//   )}\n\t);\n};\n\nexport default MainLayout;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n","import React from 'react';\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { selectIsRefreshing, selectUser } from 'redux/auth/authSelectors.js';\nimport { useSelector } from 'react-redux';\n\n// import { Link } from 'react-router-dom';\nimport { Circles } from 'react-loader-spinner';\n\nconst AccountPage = () => {\n  const isUser = useSelector(selectUser);\n  const IsRefreshing = useSelector(selectIsRefreshing);\n  // console.log(isUser);\n  const formik = useFormik({\n    initialValues: {\n      usrName: isUser.username ?? '',\n      phone: isUser.phone ?? '',\n      birthday: isUser.birthday ?? '',\n      skype: isUser.skype ?? '',\n      email: isUser.email ?? '',\n    },\n    onSubmit: values => {\n      // console.log(values);\n      alert(JSON.stringify(values, null, 2));\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .max(15, 'Must be 15 characters or less')\n        .required('Required'),\n      phone: Yup.string(),\n      birthday: Yup.string(),\n      skype: Yup.string(),\n      email: Yup.string().email('Invalid email address').required('Required'),\n    }),\n  });\n\n  return (\n    <MainLayout>\n      {IsRefreshing ? (\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"#4d78a9\"\n          // wrapperClass={css.loader}\n        />\n      ) : (\n        <div>\n          <h1> AccountForm</h1>\n          <form onSubmit={formik.handleSubmit}>\n            <label htmlFor=\"avatar\">\n              <img src=\"\" alt=\"User avatar\" />\n              <input type=\"file\" name=\"avatar\" accept=\"image/*\" />\n              <br></br>\n              {isUser.username ?? 'User Name'}\n              <br></br>\n              User\n            </label>\n            <br></br>\n            <label htmlFor=\"usrName\">User Name</label>\n            <input\n              id=\"usrName\"\n              name=\"usrName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.usrName}\n            />\n            {formik.touched.usrName && formik.errors.usrName ? (\n              <div>{formik.errors.usrName}</div>\n            ) : null}\n            <br></br>\n            <label htmlFor=\"phone\">Phone</label>\n            <input\n              id=\"phone\"\n              name=\"phone\"\n              type=\"phone\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phone}\n            ></input>\n            <br></br>\n            <label htmlFor=\"birthday\">Birthday</label>\n            <input\n              id=\"birthday\"\n              name=\"birthday\"\n              type=\"birthday\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.birthday}\n            ></input>\n            <br></br>\n            <label htmlFor=\"skype\">Skype</label>\n            <input\n              id=\"skype\"\n              name=\"skype\"\n              type=\"skype\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.skype}\n            ></input>\n            <br></br>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n            <br></br>\n            <button type=\"submit\">Save changes</button>\n          </form>\n        </div>\n      )}\n    </MainLayout>\n  );\n};\n\nexport default AccountPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["Section","styled","children","SideBar","isUser","useSelector","selectUser","IsRefreshing","selectIsRefreshing","formik","useFormik","initialValues","usrName","username","phone","birthday","skype","email","onSubmit","values","alert","JSON","stringify","validationSchema","Yup","firstName","max","required","height","width","color","handleSubmit","htmlFor","src","alt","type","name","accept","id","onChange","handleChange","onBlur","handleBlur","value","touched","errors"],"sourceRoot":""}