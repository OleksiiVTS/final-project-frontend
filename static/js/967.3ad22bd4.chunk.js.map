{"version":3,"file":"static/js/967.3ad22bd4.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Public/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst navLink = NavLink;\n\nexport const PageContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #dcebf7;\n`;\n\nexport const FormPosition = styled.div`\n  width: 100%;\n  margin: 0;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const LoginContainer = styled.div`\n  position: relative;\n  padding: 40px 24px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  @media screen and (min-width: 180px) and (max-width: 767px) {\n    box-sizing: border-box;\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    box-sizing: border-box;\n    max-width: 480px;\n    padding: 40px 40px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 32px;\n  font-family: Inter;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.33;\n  color: #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n  }\n`;\n\nexport const FormStyled = styled(styledForm)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 8px;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.29;\n  color: #111111;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const BoxInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 24px;\n  position: relative;\n`;\n\nexport const FormField = styled(styledField)`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 14px;\n  margin-bottom: 8px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  color: #111111;\n  border-radius: 8px;\n  border: 1px solid #dce3e599;\n\n \n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n\n  ::placeholder {\n    color: #dce3e5;\n  }\n`;\n\nexport const InputIconEmail = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconPassword = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const CorrectInput = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #3cbc81;\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: red;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const LoginButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 8px;\n  padding: 14px 0;\n  border-radius: 16px;\n  border: 1px solid transparent;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  margin-left: auto;\n  margin-right: auto;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n  }\n`;\n\nexport const ImagePosition = styled.div`\n  position: relative;\n  max-width: 480px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const SingUp = styled(navLink)`\n  display: block;\n  margin-top: 18px;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n  color: #3e85f3;\n  text-decoration: underline;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Image = styled.img`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    bottom: -100px;\n    left: 500px;\n    width: 368px;\n    height: 521px;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport {\n  BoxInput,\n  Error,\n  FormField,\n  FormLabel,\n  FormPosition,\n  FormStyled,\n  FormTitle,\n  Image,\n  LoginButton,\n  LoginContainer,\n  PageContainer,\n  SingUp,\n  ImagePosition,\n  CorrectInput,\n  InputIconEmail,\n  InputIconPassword,\n} from './LoginForm.styled';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport { FiLogIn } from 'react-icons/fi';\n\nimport * as Yup from 'yup';\n\nimport IMG from '../Pictures/login_goose.jpg';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/authOperations';\n\nconst LoginForm = () => {\n  const dispacth = useDispatch();\n\n\n  let userSchema = Yup.object().shape({\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Invalid email. Valid email contain xxx@xxx.xxx'\n      )\n      .required('Email is required field'),\n    password: Yup.string()\n      .trim()\n      .min(8, 'Password should be 6 chars minimum.')\n      .max(20, 'Password should be 20 chars maximum')\n      .required('Password is required field')\n  });\n\n  return (\n    <PageContainer>\n      <FormPosition>\n        <LoginContainer>\n          <FormTitle>Log In</FormTitle>\n          <Formik\n            initialValues={{ email: '', password: '' }}\n            validationSchema={userSchema}\n            onSubmit={async values => {\n              try {\n                dispacth(login(values));\n              } catch (error) {\n                alert(error.message);\n              }\n            }}\n          >\n            {({ errors, values, touched }) => (\n              <FormStyled>\n                <BoxInput>\n                  {errors.email || values.email.trim() ? (\n                    <FormLabel\n                      style={\n                        errors.email\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  )}\n\n                  {errors.email || values.email.trim() ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.email\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                      />\n                      {errors.email ? (\n                        <>\n                          <Error>{errors.email}</Error>\n                          <InputIconEmail>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconEmail>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is a CORRECT email</CorrectInput>\n                          <InputIconEmail>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconEmail>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {errors.password || values.password.trim() ? (\n                    <FormLabel\n                      style={\n                        errors.password\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"password\"\n                    >\n                      Password\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  )}\n                  {errors.password || values.password.trim() ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.password\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                      />\n                      {errors.password ? (\n                        <>\n                          <Error>{errors.password}</Error>\n                          <InputIconPassword>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconPassword>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>\n                            This is a CORRECT password\n                          </CorrectInput>\n                          <InputIconPassword>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconPassword>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n                <LoginButton type=\"submit\">\n                  Log in <FiLogIn style={{ marginLeft: 11 }} />\n                </LoginButton>\n              </FormStyled>\n            )}\n          </Formik>\n        </LoginContainer>\n        <ImagePosition>\n          <SingUp to=\"/register\">Sing up</SingUp>\n          <Image src={IMG} alt=\"Goose\" />\n        </ImagePosition>\n      </FormPosition>\n    </PageContainer>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\n\nimport LoginForm from '../../../components/LoginForm/LoginForm.jsx';\n\nconst LoginPage = () => {\n  return <LoginForm></LoginForm>;\n};\n\nexport default LoginPage;\n\n// {isLoading && !error && (\n//     <Circles\n//       height=\"80\"\n//       width=\"80\"\n//       color=\"#4d78a9\"\n//!       wrapperClass={css.loader}\n//     />\n//   )}\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["styledForm","Form","styledField","Field","navLink","NavLink","PageContainer","styled","FormPosition","LoginContainer","FormTitle","FormStyled","FormLabel","BoxInput","FormField","InputIconEmail","InputIconPassword","CorrectInput","Error","LoginButton","ImagePosition","SingUp","Image","dispacth","useDispatch","userSchema","Yup","shape","email","trim","matches","required","password","min","max","initialValues","validationSchema","onSubmit","values","login","error","alert","message","errors","touched","style","color","htmlFor","borderColor","backgroundColor","position","id","type","name","placeholder","size","marginLeft","to","src","IMG","alt"],"sourceRoot":""}