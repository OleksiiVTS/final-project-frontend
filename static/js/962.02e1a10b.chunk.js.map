{"version":3,"file":"static/js/962.02e1a10b.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Public/RegisterPage/RegisterPage.jsx","redux/auth/firebase.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst navLink = NavLink;\n\nexport const PageContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #dcebf7;\n  overflow: hidden;\n`;\n\nexport const FormPosition = styled.div`\n  width: 100%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const RegisterContainer = styled.div`\n  padding: 24px 24px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #ffffff;\n  border-radius: 8px;\n  @media screen and (min-width: 335px) and (max-width: 767px) {\n    box-sizing: border-box;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    box-sizing: border-box;\n    max-width: 480px;\n    padding: 40px 40px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 32px;\n  font-family: Inter;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.33;\n  color: #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n  }\n`;\n\nexport const BoxInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 24px;\n  position: relative;\n`;\n\nexport const FormStyled = styled(styledForm)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 8px;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.29;\n  color: #111111;\n  \n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const FormField = styled(styledField)`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 14px;\n  margin-bottom: 4px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  color: #111111;\n  background-color: #FFFFFF;\n  border-radius: 8px;\n  border: 1px solid #dce3e599;   \n  \n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    margin-bottom: 8px;\n  }\n\n  ::placeholder {\n    color: #dce3e5;\n  }\n`;\n\nexport const CorrectInput = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #3cbc81;\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #e74a3b;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputIconName = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconEmail = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconPassword = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const RegButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  padding: 14px 0;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n  }\n`;\n\nexport const GoogleBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  padding: 14px 0;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 15px;\n    font-size: 18px;\n  }\n`;\n\nexport const LogIn = styled(navLink)`\n  display: block;\n  margin-top: 18px;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n  color: #3e85f3;\n  text-decoration: underline;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ImagePosition = styled.div`\n  position: relative;\n  max-width: 480px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Image = styled.img`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    bottom: -90px;\n    right: 520px;\n    width: 368px;\n    height: auto;\n    overflow: hidden;\n  }\n`;\n","import { Formik } from 'formik';\nimport { FiLogIn } from 'react-icons/fi';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport {\n  Error,\n  FormField,\n  FormLabel,\n  FormStyled,\n  FormTitle,\n  LogIn,\n  RegButton,\n  RegisterContainer,\n  BoxInput,\n  Image,\n  FormPosition,\n  PageContainer,\n  ImagePosition,\n  CorrectInput,\n  InputIconName,\n  InputIconEmail,\n  InputIconPassword,\n  GoogleBtn,\n} from './RegisterForm.styled';\nimport * as Yup from 'yup';\nimport { GoogleAuthProvider, getAuth, signInWithPopup } from 'firebase/auth';\nimport { app } from '../../redux/auth/firebase';\n\nimport IMG from '../Pictures/singup_goose.jpg';\n\nimport { register } from 'redux/auth/authOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/auth/authSelectors';\nimport { toast } from 'react-toastify';\nimport { Circles } from 'react-loader-spinner';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  let userSchema = Yup.object().shape({\n    username: Yup.string()\n      .trim()\n      .min(4, 'Name is too short - should be 4 chars minimum.')\n      .max(20, 'Name is too long - should be 20 chars maximum.')\n      .required('Name is required field'),\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Invalid email. Valid email contain xxx@xxx.xxx'\n      )\n      .required('Email is required field'),\n    password: Yup.string()\n      .trim()\n      .min(8, 'Password should be 8 chars minimum.')\n      .max(20, 'Password should be 20 chars maximum')\n      .required('Password is required field')\n  });\n\n  const GoogleAuth = async () => {\n    const auth = getAuth(app);\n    const googleAuthProvider = new GoogleAuthProvider().addScope(\"email\");\n    try {\n      const result = await signInWithPopup(auth, googleAuthProvider);\n      const googleUser = {\n        username: result.user.providerData[0].displayName,\n        email: result.user.providerData[0].email,\n        password: result.user.providerData[0].uid,\n      };\n      dispatch(register(googleUser));\n    } catch (error) {}\n  };\n  \n\n  return (\n    <PageContainer>\n      <FormPosition>\n        <RegisterContainer>\n          <FormTitle>Sign Up</FormTitle>\n          <Formik\n            initialValues={{ username: '', email: '', password: '' }}\n            validationSchema={userSchema}\n            validateOnBlur={false}\n            validateOnChange={false}\n            onSubmit={async values => {\n              try {\n                dispatch(register(values));\n              } catch (error) {\n                toast.error(error.message);\n              }\n            }}\n          >\n            {({ errors, isValid }) => (\n              <FormStyled>\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.username\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"username\"\n                    >\n                      Name\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"username\">Name</FormLabel>\n                  )}\n\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.username\n                            ? { borderColor: '#E74A3B', position: 'relative' }\n                            : { borderColor: '#3CBC81', position: 'relative' }\n                        }\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Enter your name\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.username}\n                        aria-describedby=\"usernameError\"\n                      />\n                      {errors.username ? (\n                        <>\n                          <Error id=\"usernameError\">{errors.username}</Error>\n                          <InputIconName>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconName>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is a CORRECT name</CorrectInput>\n                          <InputIconName>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconName>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder=\"Enter your name\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.username}\n                        aria-describedby=\"usernameError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.email\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  )}\n\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.email\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.email}\n                        aria-describedby=\"emailError\"\n                      />\n                      {errors.email ? (\n                        <>\n                          <Error id=\"emailError\">{errors.email}</Error>\n                          <InputIconEmail>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconEmail>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is a CORRECT email</CorrectInput>\n                          <InputIconEmail>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconEmail>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.email}\n                        aria-describedby=\"emailError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {!isValid ? (\n                    <FormLabel\n                      style={\n                        errors.password\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"password\"\n                    >\n                      Password\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  )}\n\n                  {!isValid ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.password\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.password}\n                        aria-describedby=\"passwordError\"\n                      />\n                      {errors.password ? (\n                        <>\n                          <Error id=\"passwordError\">{errors.password}</Error>\n                          <InputIconPassword>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconPassword>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>\n                            This is a CORRECT password\n                          </CorrectInput>\n                          <InputIconPassword>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconPassword>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        aria-required=\"true\"\n                        aria-invalid={!!errors.password}\n                        aria-describedby=\"passwordError\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                {isLoading ? (\n                  <div style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n                    <Circles\n                      height=\"80\"\n                      width=\"80\"\n                      color=\"#3E85F3\"\n                      ariaLabel=\"circles-loading\"\n                      wrapperStyle={{}}\n                      wrapperClass=\"\"\n                      visible={true}\n                    />\n                  </div>\n                ) : (\n                  <>\n                    <RegButton type=\"submit\" disabled={isLoading}>\n                      Sign up <FiLogIn style={{ marginLeft: 11 }} />\n                    </RegButton>\n                    <GoogleBtn\n                      type=\"button\"\n                      onClick={GoogleAuth}\n                      disabled={isLoading}\n                    >\n                      Sign in with Google 🚀{' '}\n                    </GoogleBtn>\n                  </>\n                )}\n              </FormStyled>\n            )}\n          </Formik>\n        </RegisterContainer>\n        <ImagePosition>\n          <LogIn to=\"/login\">Log In</LogIn>\n          <Image\n            srcSet={`\n            ${require('../Pictures/singup_goose.jpg')} 1x,\n            ${require('../Pictures/singup_goose2x.jpg')} 2x\n          `}\n            src={IMG}\n            alt=\"Goose\"\n          />\n        </ImagePosition>\n      </FormPosition>\n    </PageContainer>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\nimport RegisterForm from '../../../components/RegisterForm/RegisterForm.jsx';\n\nconst RegisterPage = () => {\n  return <RegisterForm></RegisterForm>;\n};\n\nexport default RegisterPage;\n\n// {isLoading && !error && (\n//     <Circles\n//       height=\"80\"\n//       width=\"80\"\n//       color=\"#4d78a9\"\n//!       wrapperClass={css.loader}\n//     />\n//   )}\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n","import { initializeApp } from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBEgrHUWZSQaIHXbvdDYaU2gnwhximhORc\",\n  authDomain: 'goose-track-final-project-goit.firebaseapp.com',\n  projectId: 'goose-track-final-project-goit',\n  storageBucket: 'goose-track-final-project-goit.appspot.com',\n  messagingSenderId: '726960774734',\n  appId: '1:726960774734:web:576c405ee449fbe4e26d1f',\n};\n\n\nexport const app = initializeApp(firebaseConfig);\n"],"names":["styledForm","Form","styledField","Field","navLink","NavLink","PageContainer","styled","FormPosition","RegisterContainer","FormTitle","BoxInput","FormStyled","FormLabel","FormField","CorrectInput","Error","InputIconName","InputIconEmail","InputIconPassword","RegButton","GoogleBtn","LogIn","ImagePosition","Image","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","userSchema","Yup","shape","username","trim","min","max","required","email","matches","password","GoogleAuth","auth","getAuth","app","googleAuthProvider","GoogleAuthProvider","addScope","signInWithPopup","result","googleUser","user","providerData","displayName","uid","register","initialValues","validationSchema","validateOnBlur","validateOnChange","onSubmit","values","error","toast","message","errors","isValid","htmlFor","style","color","id","type","name","placeholder","borderColor","position","size","backgroundColor","marginLeft","marginRight","height","width","ariaLabel","wrapperStyle","wrapperClass","visible","disabled","onClick","to","srcSet","require","src","IMG","alt","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId"],"sourceRoot":""}