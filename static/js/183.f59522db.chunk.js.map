{"version":3,"file":"static/js/183.f59522db.chunk.js","mappings":"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","sources":["helpers/schemaYap.js","components/UserForm/UserForm.styled.jsx","components/UserForm/PreviewAvatar.js","components/UserForm/UserForm.jsx","pages/Private/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\nconst phoneRegExp =\n  '\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}';\n\nconst ValidSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .max(16, 'Must be 16 characters or less')\n    .required('Username is required'),\n  phone: Yup.string().matches(phoneRegExp, 'Wrong number'),\n  birthday: Yup.string(),\n  skype: Yup.string().max(16, 'Must be 16 characters or less'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n});\n\nexport default ValidSchema;\n","import styled from 'styled-components';\n\nexport const FormaBox = styled.form`\n  /* width: 100vh; */\n  height: 100vh;\n\n  /* padding: 95px 20px 40px 20px; */\n  /* background-color: #f7f6f9; */\n  @media screen and (min-width: 768px) {\n    /* padding: 64px 32px 38px 32px; */\n  }\n  @media screen and (min-width: 1440px) {\n    /* padding: 33px 32px 32px 32px; */\n  }\n`;\nexport const UserFormBox = styled.div`\n  width: 335px;\n  position: relative;\n\n  display: flex;\n  padding: 59px 18px 40px 18px;\n  flex-direction: column;\n  border-radius: 16px;\n  background: ${({bg}) => bg || 'var(--color-choice-dark-no-active)'};\n  color: ${({color})=> color || '#000'};\n\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 40px 175px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    padding: 60px 165px;\n  }\n`;\nexport const BoxForm = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 1440px) {\n    height: 270px;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  left: 50%;\n  top: 0;\n  width: 72px;\n  height: 72px;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    left: 0;\n    transform: translate(0, 0);\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const IconDiv = styled.button`\n  position: absolute;\n  top: 25px;\n  left: 52%;\n  z-index: 2;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  @media screen and (min-width: 768px) {\n    top: 150px;\n    left: 51%;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 168px;\n    left: 51%;\n  }\n`;\nexport const WhiteBox = styled.div`\n  position: absolute;\n  top: 29.5px;\n  left: 53.2%;\n  width: 6px;\n  height: 6px;\n  background-color: #ffffff;\n  border-radius: 50%;\n  z-index: 1;\n  @media screen and (min-width: 768px) {\n    top: 156.5px;\n    left: 52%;\n    width: 10px;\n    height: 10px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 175px;\n    left: 51.7%;\n  }\n`;\nexport const UserName = styled.h1`\n  color: ${({color}) => color || '#343434'} ;\n\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1; /* 100% */\n\n  margin: 0;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const User = styled.h2`\n  color: ${({color}) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n\n  margin-top: 8px;\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 44px;\n  }\n`;\n\nexport const LabelUserForm = styled.label`\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.17; /* 116.667% */\n\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.29; /* 128.571% */\n  }\n`;\n\nexport const InputUserForm = styled.input`\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  color: ${({color}) => color || '#000'};\n  background: ${({bg}) => bg || '#fff'};\n\n  margin-bottom: 18px;\n  padding: 12px 14px;\n  border-radius: 8px;\n  border: 1px solid ${({bordercolor})=> bordercolor || 'rgba(17, 17, 17, 0.1)'};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 24px;\n    padding: 14px 18px;\n    font-size: 16px;\n    line-height: 1.12; /* 112.5% */\n  }\n  @media screen and (min-width: 1440px) {\n    width: 354px;\n    &:nth-child(6) {\n      margin-bottom: 0;\n    }\n    &:nth-child(-n + 3) {\n      margin-right: 50px;\n    }\n  }\n`;\n\nexport const BtnUserForm = styled.button`\n  width: 195px;\n  height: 46px;\n\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  color: #fff;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    margin-top: 18px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 88px;\n  }\n`;\n","import React from 'react';\nimport { Avatar } from './UserForm.styled';\n\nconst PreviewAvatar = ({ file }) => {\n  const [preview, setPreview] = React.useState(null);\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n  return (\n    <>\n      <Avatar src={preview} alt=\"User avatar\" />\n    </>\n  );\n};\n\nexport default PreviewAvatar;\n","//import moment from 'moment';\nimport { format } from 'date-fns';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, useFormik } from 'formik';\nimport ValidSchema from 'helpers/schemaYap.js';\nimport { update } from 'redux/auth/authOperations.js';\n\nimport { selectUser } from '../../redux/auth/authSelectors.js';\nimport {\n  Avatar,\n  BoxForm,\n  BtnUserForm,\n  FormaBox,\n  IconDiv,\n  InputUserForm,\n  LabelUserForm,\n  User,\n  UserFormBox,\n  UserName,\n  WhiteBox,\n} from './UserForm.styled.jsx';\nimport { useRef } from 'react';\nimport PreviewAvatar from './PreviewAvatar.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const updateUser = updateUser => {\n    dispatch(update(updateUser));\n  };\n  const isUser = useSelector(selectUser);\n  const theme = useSelector(selectTheme);\n\n  const fileRef = useRef(null);\n\n  const formik = useFormik({\n    initialValues: {\n      usrName: isUser.username ?? '',\n      phone: isUser.phone ?? '',\n      birthday: isUser.birthday ?? '',\n      skype: isUser.skype ?? '',\n      email: isUser.email ?? '',\n      file: null,\n    },\n    onSubmit: values => {\n      var imagefile = document.getElementById('avatar');\n      //console.log(imagefile);\n      updateUser({ ...values, avatarURL: imagefile });\n    },\n  });\n  //const nowDate = new Date();\n  const dateMoment = format(new Date(), 'MM/dd/yyyy');\n\n  return (\n    <Formik validationSchema={ValidSchema}>\n      <FormaBox onSubmit={formik.handleSubmit}>\n        <UserFormBox\n          validationSchema={ValidSchema}\n          bg={theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'}\n          color={theme === 'dark' ? 'var(--color-field-names-dark)' : '#000'}\n        >\n          <div>\n            <label htmlFor=\"avatar\">\n              {formik.values.file ? (\n                <PreviewAvatar file={formik.values.file} />\n              ) : (\n                <Avatar src={isUser.avatarURL} alt=\"User avatar\" />\n              )}\n\n              <IconDiv\n                type=\"button\"\n                onClick={() => {\n                  fileRef.current.click();\n                }}\n              >\n                <AiFillPlusCircle size={24} fill=\"#3E85F3\" />\n              </IconDiv>\n              <WhiteBox></WhiteBox>\n              <input\n                ref={fileRef}\n                id=\"avatar\"\n                type=\"file\"\n                hidden\n                accept=\"image/*\"\n                onChange={event => {\n                  formik.setFieldValue('file', event.target.files[0]);\n                }}\n                onBlur={formik.handleBlur}\n                value={formik.values.avatar}\n              />\n            </label>\n            <UserName color={theme === 'dark' ? '#fff' : '#343434'}>\n              {isUser.username ?? 'User Name'}\n            </UserName>\n\n            <User\n              color={\n                theme === 'dark' ? 'var(--color-field-names-dark)' : '#343434'\n              }\n            >\n              User\n            </User>\n          </div>\n          <BoxForm>\n            <LabelUserForm htmlFor=\"usrName\">User Name</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"usrName\"\n              name=\"usrName\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.usrName}\n            />\n            {formik.touched.usrName && formik.errors.usrName ? (\n              <div>{formik.errors.usrName}</div>\n            ) : null}\n\n            <LabelUserForm htmlFor=\"birthday\">Birthday</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"birthday\"\n              name=\"birthday\"\n              type=\"birthday\"\n              placeholder={dateMoment}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.birthday}\n            ></InputUserForm>\n\n            <LabelUserForm htmlFor=\"email\">Email</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Add your email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <div>{formik.errors.email}</div>\n            ) : null}\n\n            <LabelUserForm htmlFor=\"phone\">Phone</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"phone\"\n              name=\"phone\"\n              type=\"phone\"\n              placeholder=\"Add a phone number\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.phone}\n            ></InputUserForm>\n\n            <LabelUserForm htmlFor=\"skype\">Skype</LabelUserForm>\n            <InputUserForm\n              bg={\n                theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n              }\n              color={theme === 'dark' ? '#fff' : '#000'}\n              bordercolor={\n                theme === 'dark'\n                  ? 'var(--color-field-names-dark)'\n                  : 'rgba(17, 17, 17, 0.1)'\n              }\n              id=\"skype\"\n              name=\"skype\"\n              type=\"skype\"\n              placeholder=\"Add a skype number\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.skype}\n            ></InputUserForm>\n          </BoxForm>\n          <BtnUserForm type=\"submit\">Save changes</BtnUserForm>\n        </UserFormBox>\n      </FormaBox>\n    </Formik>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport { selectIsRefreshing } from 'redux/auth/authSelectors.js';\nimport { useSelector } from 'react-redux';\nimport { Circles } from 'react-loader-spinner';\nimport UserForm from 'components/UserForm/UserForm.jsx';\nimport { HeaderContainer } from '../CalendarPage/CalendarPage.styled.jsx';\nimport Header from 'components/Header/Header.jsx';\nimport { CalendarContainer } from 'components/Calendar/common/index.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\n\nconst AccountPage = () => {\n  const IsRefreshing = useSelector(selectIsRefreshing);\n  const theme = useSelector(selectTheme);\n\n  return (\n    <MainLayout>\n      <CalendarContainer bgcolor={theme === 'dark' ? '#171820' : '#f7f6f9'}>\n        <HeaderContainer>\n          <Header pageName='My Account'/>\n        </HeaderContainer>\n        {IsRefreshing ? (\n          <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#4d78a9\"\n            // wrapperClass={css.loader}\n          />\n        ) : (\n          <UserForm />\n        )}\n      </CalendarContainer>\n    </MainLayout>\n  );\n};\n\nexport default AccountPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["Yup","shape","firstName","max","required","phone","matches","birthday","skype","email","FormaBox","styled","UserFormBox","bg","color","BoxForm","Avatar","IconDiv","WhiteBox","UserName","User","LabelUserForm","InputUserForm","bordercolor","BtnUserForm","file","React","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","src","alt","dispatch","useDispatch","isUser","useSelector","selectUser","theme","selectTheme","fileRef","useRef","formik","useFormik","initialValues","usrName","username","onSubmit","values","updateUser","imagefile","document","getElementById","avatarURL","update","dateMoment","format","Date","validationSchema","ValidSchema","handleSubmit","htmlFor","type","onClick","current","click","size","fill","ref","id","hidden","accept","onChange","event","setFieldValue","target","files","onBlur","handleBlur","value","avatar","name","handleChange","touched","errors","placeholder","IsRefreshing","selectIsRefreshing","MainLayout","bgcolor","Header","pageName","height","width"],"sourceRoot":""}