{"version":3,"file":"static/js/624.774307b8.chunk.js","mappings":"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","sources":["components/TaskForm/Checkmark/Checkmark.styled.jsx","pages/Private/CalendarPage/CalendarPage.styled.jsx","components/Calendar/common/CalendarContainer.jsx","components/Calendar/common/CalendarToolbar.styled.jsx","components/Calendar/common/CalendarToolbar.jsx","components/Calendar/icons/ChevronLeft.jsx","components/Calendar/icons/ChevronRight.jsx","components/Calendar/common/PeriodSelector.styled.jsx","components/Calendar/common/PeriodSelector.jsx","components/Calendar/common/PeriodTypeSelector.styled.jsx","components/Calendar/common/PeriodTypeSelector.jsx","components/Calendar/common/CalendarDatePicker.styled.jsx","components/Calendar/common/NewCalendarDatePicker.jsx","components/Calendar/month/CalendarHead/CalendarHead.styled.jsx","components/Calendar/month/CalendarHead/CalendarHead.jsx","components/Loader/Loader.jsx","components/Calendar/month/CalendarTable/CalendarTable.jsx","components/Calendar/month/ChoosedMonth.styled.jsx","components/Calendar/month/ChoosedMonth.jsx","components/ChoosedDay/ChoosedDay.styled.js","components/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/ChoosedDay/TasksColumnItem/TasksColumnItem.styled.js","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.styled.js","components/DeleteForm/DeleteForm.styled.jsx","components/TaskForm/Checkmark/Checkmark.jsx","components/DeleteForm/DeleteForm.jsx","components/TaskForm/TaskForm.styled.jsx","components/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryModal.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryButton/CategoryButton.jsx","constants/categoryList.js","helpers/helpers.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryModal.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.jsx","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.styled.js","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.jsx","components/ChoosedDay/TasksColumnItem/TasksColumnItem.jsx","components/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ChoosedDay.jsx","pages/Private/CalendarPage/CalendarPage.jsx","redux/task/taskSelectors.js"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nexport const CheckmarkWrap = styled.div`\n  box-sizing: border-box;\n  height: 258.39px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst strokeAnimation = keyframes`\n  100% {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst scaleAnimation = keyframes`\n  0%, 100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n`;\n\nconst fillAnimation = keyframes`\n  100% {\n    box-shadow: inset 0px 0px 0px 30px #fff;\n  }\n`;\n\nexport const Circle = styled.circle`\n  stroke-dasharray: 332;\n  stroke-dashoffset: 332;\n  stroke-width: 4;\n  stroke-miterlimit: 10;\n  stroke: green;\n  fill: none;\n  animation: ${strokeAnimation} 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n`;\n\nexport const Svg = styled.svg`\n  display: block;\n  width: 112px;\n  height: 112px;\n  border-radius: 50%;\n  display: block;\n  stroke-width: 4;\n  stroke: green;\n  stroke-miterlimit: 10;\n  margin: 10% auto;\n  box-shadow: inset 0px 0px 0px #7ac142;\n  animation: ${fillAnimation} 0.4s ease-in-out 0.4s forwards,\n    ${scaleAnimation} 0.3s ease-in-out 0.9s both;\n`;\n\nexport const Path = styled.path`\n  transform-origin: 50% 50%;\n  stroke-dasharray: 96;\n  stroke-dashoffset: 96;\n  animation: ${strokeAnimation} 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s\n    forwards;\n`;\n","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n  margin-block: 24px 64px;\n\n  @media screen and (min-width: 768px) {\n    margin-block: 40px 32px;\n  }\n`;\n","import styled from 'styled-components';\n\nconst CalendarContainer = styled.div`\n  width: 1151px;\n  height: 100%;\n  padding-inline: 20px;\n  background-color: #f7f6f9;\n\n  @media screen and (min-width: 768px) {\n    padding-inline: 32px;\n  }\n`;\n\nexport default CalendarContainer;\n","import styled from 'styled-components';\n\nexport const ToolbarWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 24px;\n\n\t@media screen and (min-width: 768px) {\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tmargin-bottom: 32px;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-bottom: 40px;\n\t}\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { PeriodSelector, PeriodTypeSelector } from '.';\n\nimport { ToolbarWrapper } from './CalendarToolbar.styled';\n\nconst CalendarToolbar = ({ today, onClickPrev, onClickNext }) => {\n\tconst [type, setType] = useState('month');\n\tconst { pathname } = useLocation();\n\n\tuseEffect(() => {\n\t\tif (pathname.includes('day')) {\n\t\t\tsetType('day');\n\t\t\treturn;\n\t\t}\n\n\t\tsetType('month');\n\t}, [pathname]);\n\n\treturn (\n\t\t<ToolbarWrapper>\n\t\t\t<PeriodSelector\n\t\t\t\tonClickPrev={onClickPrev}\n\t\t\t\tonClickNext={onClickNext}\n\t\t\t\ttype={type}\n\t\t\t\tdate={today}\n\t\t\t/>\n\t\t\t<PeriodTypeSelector today={today} onChangeType={setType} />\n\t\t</ToolbarWrapper>\n\t);\n};\n\nexport default CalendarToolbar;\n\nCalendarToolbar.propTypes = {\n\tonClickPrev: PropTypes.func.isRequired,\n\tonClickNext: PropTypes.func.isRequired,\n\ttoday: PropTypes.string.isRequired,\n};\n","const SvgChevronLeft = props => (\n\t<svg width=\"1em\" height=\"1em\" fill=\"none\" {...props}>\n\t\t<path\n\t\t\td=\"M6.75 13.5L11.25 9L6.75 4.5\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t/>\n\t</svg>\n);\nexport default SvgChevronLeft;\n","const SvgChevronRight = props => (\n\t<svg width=\"1em\" height=\"1em\" fill=\"none\" {...props}>\n\t\t<path\n\t\t\td=\"M11.25 13.5L6.75 9L11.25 4.5\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"1.5\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t/>\n\t</svg>\n);\nexport default SvgChevronRight;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-bottom: 18px;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-bottom: 0;\n\t}\n`;\n\nexport const TitleWrapper = styled.button`\n\twidth: 195px;\n\tpadding: 6px 12px;\n\tborder-radius: 8px;\n\tbackground-color: #3e85f3;\n\tcolor: #ffffff;\n\tfont-size: 14px;\n\tfont-weight: 700;\n\tline-height: calc(18 / 14);\n\ttext-align: center;\n\ttext-transform: uppercase;\n\n\t@media screen and (min-width: 768px) {\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\tpadding: 8px 12px;\n\t\tfont-size: 16px;\n\t}\n`;\n\nexport const ButtonsWrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-left: 8px;\n`;\n\nexport const ButtonLeft = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 5px 8px;\n\tborder: 1px solid #dce3e5;\n\tborder-radius: 8px;\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n\tbackground-color: #ffffff;\n\tcolor: rgba(220, 227, 229, 0.8);\n\tfont-size: 20px;\n\tcursor: pointer;\n\ttransition: color 250ms;\n\n\t&:hover {\n\t\tcolor: #343434;\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 7px 9px;\n\t}\n`;\n\nexport const ButtonRight = styled(ButtonLeft)`\n\tborder-radius: 8px;\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n`;\n","// import { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\t// format,\n\tparse,\n} from 'date-fns';\n\nimport { NewCalendarDatePicker } from '.';\n// import { CalendarDatePicker } from '.';\n\nimport { ChevronLeft, ChevronRight } from '../icons';\nimport {\n\tWrapper,\n\t// TitleWrapper,\n\tButtonsWrapper,\n\tButtonLeft,\n\tButtonRight,\n} from './PeriodSelector.styled';\n// import { useState } from 'react';\n\nconst PeriodSelector = ({\n\tonClickPrev,\n\tonClickNext,\n\ttype,\n\tdate,\n\tsetCurrentDate,\n}) => {\n\t// const getFormattedDate = () => {\n\t// \treturn format(\n\t// \t\tnew Date(date),\n\t// \t\ttype === 'day' ? 'dd MMMM yyyy' : 'MMMM yyyy'\n\t// \t);\n\t// };\n\n\t// console.log(setCurrentDate);\n\n\t// const CustomInput = forwardRef(({ value, onClick }, ref) => {\n\t// \tconst formattedDate = getFormattedDate();\n\n\t// \tconst monthYear = formattedDate.split(' ')[0];\n\t// \tconst preparedMonth = `months.${monthYear.toLowerCase()}`;\n\n\t// \treturn (\n\t// \t\t<TitleWrapper onClick={onClick} ref={ref}>\n\t// \t\t\t{type === 'day'\n\t// \t\t\t\t? value\n\t// \t\t\t\t: `${preparedMonth} ${formattedDate.split(' ')[1]}`}\n\t// \t\t</TitleWrapper>\n\t// \t);\n\t// });\n\n\tconst currentDate = parse(date, 'yyyy-MM-dd', new Date());\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<NewCalendarDatePicker type={type} date={currentDate} />\n\t\t\t{/* <CalendarDatePicker\n\t\t\t\ttype={type}\n\t\t\t\tcustomInput={CustomInput} ===\n\t\t\t\tonSelectDay={currentDate}\n\t\t\t\tsetCurrentDate={setCurrentDate} ===\n\t\t\t/> */}\n\t\t\t<ButtonsWrapper>\n\t\t\t\t<ButtonLeft\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClickPrev(type);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ChevronRight width=\"18px\" height=\"18px\" />\n\t\t\t\t</ButtonLeft>\n\t\t\t\t<ButtonRight\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClickNext(type);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ChevronLeft width=\"18px\" height=\"18px\" />\n\t\t\t\t</ButtonRight>\n\t\t\t</ButtonsWrapper>\n\t\t</Wrapper>\n\t);\n};\n\nexport default PeriodSelector;\n\nPeriodSelector.propTypes = {\n\tonClickPrev: PropTypes.func.isRequired,\n\tonClickNext: PropTypes.func.isRequired,\n\ttype: PropTypes.string,\n\tdate: PropTypes.string,\n\t// value: PropTypes.any,\n\t// onClick: PropTypes.func,\n\t// setCurrentDate: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n\tdisplay: flex;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 76px;\n\theight: 34px;\n\tbackground-color: #e3f3ff;\n\tcolor: #3e85f3;\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tline-height: calc(18 / 14);\n\ttransition: background-color 250ms;\n\n\t&.active,\n\t&:hover,\n\t&:focus {\n\t\tbackground: #cae8ff;\n\t}\n\n\t&.month {\n\t\tborder-top-left-radius: 8px;\n\t\tborder-bottom-left-radius: 8px;\n\t\tborder-right: 1px solid rgba(62, 133, 243, 0.2);\n\t}\n\n\t&.day {\n\t\tborder-top-right-radius: 8px;\n\t\tborder-bottom-right-radius: 8px;\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 16px;\n\t}\n`;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\n\nimport { List, StyledNavLink } from './PeriodTypeSelector.styled';\n\nconst PeriodTypeSelector = ({ today, onChangeType }) => {\n\tconst formattedToday = format(new Date(today), 'yyyy-MM-dd');\n\n\treturn (\n\t\t<List>\n\t\t\t<li>\n\t\t\t\t<StyledNavLink\n\t\t\t\t\tclassName=\"month\"\n\t\t\t\t\tto={`/calendar/month/${formattedToday}`}\n\t\t\t\t\tonClick={() => onChangeType('month')}\n\t\t\t\t>\n\t\t\t\t\tMonth\n\t\t\t\t</StyledNavLink>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<StyledNavLink\n\t\t\t\t\tclassName=\"day\"\n\t\t\t\t\tto={`/calendar/day/${formattedToday}`}\n\t\t\t\t\tonClick={() => onChangeType('day')}\n\t\t\t\t>\n\t\t\t\t\tDay\n\t\t\t\t</StyledNavLink>\n\t\t\t</li>\n\t\t</List>\n\t);\n};\n\nexport default PeriodTypeSelector;\n\nPeriodTypeSelector.propTypes = {\n\ttoday: PropTypes.string.isRequired,\n\tonChangeType: PropTypes.func.isRequired,\n};\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const DateBtn = styled.div`\n\tpadding: 6px 12px;\n\tborder-radius: 8px;\n\tbackground-color: #3e85f3;\n\tcolor: #ffffff;\n\tfont-size: 14px;\n\tfont-weight: 700;\n\tline-height: calc(18 / 14);\n\ttext-align: center;\n\ttext-transform: uppercase;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-block: 33px;\n\t\tpadding: 8px 12px;\n\t\tfont-size: 16px;\n\t}\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n\t.react-datepicker__wrapper {\n\t\tposition: relative;\n\t}\n\n\t.react-datepicker {\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-1%, 0%);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\twidth: 327px;\n\t\theight: 354px;\n\t\tpadding: 9px 18px;\n\t\tborder-radius: 16px;\n\t\tbackground-color: #3E85F3;\n\t\tfont-family: Inter;\n\t}\n\t\n\t.react-datepicker__month-container {\n\t\tfloat: inherit;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.react-datepicker__header {\n\t\tposition: relative;\n\t\tbackground-color: #3E85F3;\n\t}\n\n\t.react-datepicker__day-names {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 12px 19px;\n\t\tborder-bottom: 1px solid rgba(255, 255, 255, 0.4);\n\t}\n\n\t.react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n\t\tpadding: 0;\n\t\tborder-bottom: 0px;\n\t}\n\n\t.react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today {\n\t\toutline: none;\n\t\tborder: none;\n\t}\n\n\t.react-datepicker__current-month {\n\t\tfont-family: Inter;\n\t\tfont-size: 20px;\n\t\tfont-weight: 600;\n\t\tline-height: calc(24 / 20);\n\t\ttext-align: center;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__day-name {\n\t\tmargin: 0;\n\t\tpadding: 12px 19px;\n\t\tfont-family: Inter;\n\t\tfont-size: 14px;\n\t\tfont-weight: 600;\n\t\tline-height: calc(18 / 14);\n\t\ttext-align: center;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__navigation {\n\t\tmargin-top: 24px;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__navigation--previous {\n\t\tleft: 7px;\n\t\twidth: 18px;\n\t\theight: 18px;\n\t}\n\n\t.react-datepicker__navigation--next {\n\t\tright: 7px;\n\t\twidth: 18px;\n\t\theight: 18px;\n\t}\n\n\t.react-datepicker__navigation-icon::before:hover:focus {\n\t\tborder-color: #ffffff;\n\t}\n\n\t.react-datepicker__week {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__day {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 8px;\n\t\tflex-shrink: 0;\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tmargin: 0;\n\t\tborder-radius: 50%;\n\t\tcolor: #ffffff;\n\t\tfont-family: Inter;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: calc(18 / 14);\n\t\ttext-align: center;\n\t}\n\n\t.react-datepicker__month {\n\t\tdisplay: flex;\n\t\tgap: 7px;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\tmargin: 0;\n\t\tpadding-top: 16px;\n\t}\n\n\t.react-datepicker__day--selected {\n\t\tbackground-color: #ffffff;\n\t\tcolor: #3e85f3;\n\t\tfont-size: 14px;\n\t}\n\n\t.react-datepicker__day--selected:hover {\n\t\tborder-radius: 50%;\n\t\tbackground-color: #ffffff;\n\t}\n\n\t.react-datepicker__day:hover {\n\t\tborder-radius: 50%;\n\t\tbackground-color: #ffffff;\n\t\tcolor: #3e85f3;\n\t}\n\n\t.react-datepicker__day--keyboard-selected {\n\t\tborder-radius: 50%;\n\t\tbackground-color: #ffffff;\n\t\tcolor: #3e85f3;\n\t}\n\n\t.react-datepicker__day--weekend {\n\t\topacity: 50%;\n\t}\n\n\t.react-datepicker__day--outside-month {\n\t\tbackground-color: transparent;\n\t\tpointer-events: none;\n\t\topacity: 0;\n\t}\n\n\t.react-datepicker__view-calendar-icon input {\n\t\tpadding: 6px 10px 5px 13px;\n\t}\n\n\t.react-datepicker__triangle {\n\t\tvisibility: hidden;\n\t}\n`;\n","import { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { format } from 'date-fns';\nimport DatePicker from 'react-date-picker';\nimport 'react-date-picker/dist/DatePicker.css';\nimport 'react-calendar/dist/Calendar.css';\n\nconst NewCalendarDatePicker = ({ type, date }) => {\n  const navigate = useNavigate();\n  const params = useParams();\n  const isParams = Boolean(Object.keys(params).length);\n\n  const [dateValue, setDateValue] = useState(date);\n\n  useEffect(() => {\n    setDateValue(date);\n  }, [date]);\n\n  return (\n    <DatePicker\n      onChange={date => {\n        setDateValue(date);\n        const formattedDate = format(date, 'yyyy-MM-dd');\n        if (setDateValue) {\n          setDateValue(formattedDate);\n        }\n        navigate(\n          isParams ? `/calendar/${type}/${formattedDate}` : '/statistics'\n        );\n      }}\n      value={dateValue}\n      clearIcon={null}\n      format={type === 'day' ? 'y-MM-dd' : 'MMMM-y'}\n      locale=\"en-US\"\n      showLeadingZeros={true}\n    />\n  );\n};\n\nexport default NewCalendarDatePicker;\n","import styled from 'styled-components';\n\nexport const MonthCalendarHeadStyles = styled.div``;\n\nexport const MobileDaysList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  /* width: 100%; */\n  height: 50px;\n  margin-bottom: 14px;\n  padding: 16px 16px;\n  border: 1px solid rgba(220, 227, 229, 0.314);\n  border-radius: 8px;\n  background-color: #ffffff;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const DesktopDayList = styled.ul`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    /* gap: 62px; */\n    /* width: 100%; */\n    height: 46px;\n    margin-bottom: 18px;\n    padding: 14px 40px;\n    border: 1px solid rgba(220, 227, 229, 0.314);\n    border-radius: 8px;\n    background-color: #ffffff;\n\n    @media screen and (min-width: 1440px) {\n      /* gap: 122px; */\n      height: 46px;\n      margin-bottom: 15px;\n      padding: 14px 60px;\n    }\n  }\n`;\n\nexport const WorkDay = styled.li`\n  /* width: calc(100% / 7); */\n  color: #343434;\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(18 / 16);\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const WeekendDay = styled(WorkDay)`\n  color: #3e85f3;\n`;\n","import {\n\tMonthCalendarHeadStyles,\n\tWorkDay,\n\tWeekendDay,\n\tMobileDaysList,\n\tDesktopDayList,\n} from './CalendarHead.styled';\n\nconst workDayNames = ['MON', 'TUE', 'WED', 'THU', 'FRI'];\nconst weekendDayNames = ['SAT', 'SUN'];\n\nconst CalendarHead = () => {\n\treturn (\n\t\t<MonthCalendarHeadStyles>\n\t\t\t<DesktopDayList>\n\t\t\t\t{workDayNames.map(day => (\n\t\t\t\t\t<WorkDay key={day}>{day}</WorkDay>\n\t\t\t\t))}\n\t\t\t\t{weekendDayNames.map(day => (\n\t\t\t\t\t<WeekendDay key={day}>{day}</WeekendDay>\n\t\t\t\t))}\n\t\t\t</DesktopDayList>\n\t\t\t<MobileDaysList>\n\t\t\t\t{workDayNames.map(day => (\n\t\t\t\t\t<WorkDay key={day}>{day.slice(0, 1)}</WorkDay>\n\t\t\t\t))}\n\t\t\t\t{weekendDayNames.map(day => (\n\t\t\t\t\t<WeekendDay key={day}>{day.slice(0, 1)}</WeekendDay>\n\t\t\t\t))}\n\t\t\t</MobileDaysList>\n\t\t</MonthCalendarHeadStyles>\n\t);\n};\n\nexport default CalendarHead;\n","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <Circles height=\"80\" width=\"80\" color=\"#4d78a9\" wrapperClass={css.loader} />\n  );\n};\n\nexport default Loader;\n","import { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoading, selectTasks } from 'redux/task/taskSelectors';\n\nimport Loader from 'components/Loader';\nimport { renderCalendar } from 'utils/calendar';\n\nimport { GridWrapper } from './CalendarTable.styled';\n\nconst CalendarTable = () => {\n  const { currentDate } = useParams();\n  const isLoading = useSelector(selectIsLoading);\n  const tasksList = useSelector(selectTasks);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <GridWrapper>\n      {renderCalendar({ isLoading, currentDate, tasksList })}\n    </GridWrapper>\n  );\n};\n\nexport default CalendarTable;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100vh;\n`;\n","import CalendarHead from './CalendarHead';\nimport CalendarTable from './CalendarTable';\nimport { Container } from './ChoosedMonth.styled';\n\nconst ChoosedMonth = () => {\n  return (\n    <Container>\n      {/* <h2>Month</h2> */}\n      <CalendarHead />\n      <CalendarTable />\n    </Container>\n  );\n};\n\nexport default ChoosedMonth;\n","import styled from 'styled-components';\n\nexport const StyledChoosedDay = styled.div`\n  padding: 24px 20px 20px;\n  overflow-x: auto;\n\n  /* height: 100%; */\n  /* height: 600px; */\n\n  background: #f7f6f9;\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px 18px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 32px 32px 18px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 335px);\n  /* grid-template-rows: repeat(auto-fit, 1fr); */\n  /* grid-template-rows: 1fr; */\n  grid-column-gap: 20px;\n  grid-row-gap: 0px;\n\n  overflow-x: auto;\n  /* height: 100%; */\n  /* height: 500px; */\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 344px);\n    grid-column-gap: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-column-gap: 27px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnItem = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 18px 18px 20px;\n  /* min-width: 335px;\n  min-height: 155px; */\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background: #fff;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 20px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n\n  .columnHeadBar {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 28px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledColumnHeadBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 34px;\n\n  @media screen and (min-width: 768px) {\n    height: 38px;\n  }\n\n  & h3 {\n    margin: 0;\n    color: #111;\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.111; /* 111.111% */\n\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      line-height: 1.2; /* 120% */\n    }\n  }\n\n  & button {\n    /* width: 22px; */\n    /* height: 22px; */\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: white;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 22px;\n    height: 22px;\n    stroke: currentColor;\n    fill: white;\n\n    @media screen and (min-width: 768px) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const DeleteBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n`;\n","const { Path, Circle, Svg, CheckmarkWrap } = require('./Checkmark.styled');\n\nconst Checkmark = () => {\n  return (\n    <CheckmarkWrap>\n      <Svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 104 104\"\n        width=\"104\"\n        height=\"104\"\n      >\n        <Circle cx=\"52\" cy=\"52\" r=\"50\" fill=\"none\" />\n        <Path fill=\"none\" d=\"M28.2 54.2l14.2 14.4 33.4-33.6\" />\n      </Svg>\n    </CheckmarkWrap>\n  );\n};\n\nexport default Checkmark;\n","import { DeleteBtn, CancelBtn, BtnWrapper, TextDiv } from './DeleteForm.styled';\nimport { useDispatch } from 'react-redux';\nimport sprite from '../Pictures/sprite.svg';\nimport { deleteTask } from 'redux/task/taskOperations';\nimport Checkmark from 'components/TaskForm/Checkmark/Checkmark';\nimport { useState } from 'react';\n\nconst DeleteForm = ({ task, closeModal }) => {\n  const dispatch = useDispatch();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const removeTask = () => {\n    dispatch(deleteTask(task._id));\n    setIsSubmitted(true);\n    setTimeout(() => closeModal(), 1500);\n  };\n  return (\n    <>\n      {isSubmitted ? (\n        <Checkmark />\n      ) : (\n        <>\n          <TextDiv>Do you want to delete the task?</TextDiv>\n          <BtnWrapper>\n            <DeleteBtn onClick={removeTask}>\n              <svg width=\"18\" height=\"18\" style={{ marginRight: 8 }}>\n                <use href={sprite + '#trashbin'}></use>\n              </svg>\n              Delete\n            </DeleteBtn>\n            <CancelBtn onClick={closeModal}>Cancel</CancelBtn>\n          </BtnWrapper>\n        </>\n      )}{' '}\n    </>\n  );\n};\n\nexport default DeleteForm;\n","import styled from '@emotion/styled/macro';\nimport { Field, Form } from 'formik';\n// import { keyframes } from 'styled-components';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst styledRadio = Field;\n\nexport const FormContainer = styled.div`\n  box-sizing: border-box;\n  padding: 0 10px 26px 10px;\n`;\n\nexport const FormElement = styled(styledForm)``;\n\nexport const FormLabel = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: rgba(52, 52, 52, 0.8);\n  font-size: 12px;\n  line-height: 1.16;\n  font-family: Inter;\n`;\n\nexport const FormField = styled(styledField)`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 0;\n  margin-bottom: 16px;\n  padding: 14px 18px;\n  background: #f6f6f6;\n  color: #343434;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n    border: 0;\n  }\n\n  &::placeholder {\n    color: #343434;\n  }\n`;\n\nexport const TimeInput = styled(styledField)`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 0;\n  margin-bottom: 16px;\n  padding: 14px 18px;\n  background: #f6f6f6;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  max-width: 126px;\n\n  &:focus {\n    outline: none;\n    border: 0;\n  }\n\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n\n  &::placeholder {\n    color: #343434;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 163px;\n  }\n`;\n\nexport const TimeWrapper = styled.div`\n  display: flex;\n  column-gap: 15px;\n  position: relative;\n`;\n\nexport const TimeFieldWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const RadioBtn = styled(styledRadio)`\n  opacity: 0;\n  pointer-events: none;\n`;\n\nexport const CustomRadioBtn = styled.span`\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: white;\n  cursor: pointer;\n  left: 1.3px;\n  top: 3.3px;\n  z-index: 3;\n\n  &::after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    position: absolute;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: opacity 0.2s;\n    z-index: 2;\n  }\n`;\n\nexport const LowPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #72c2f8;\n  }\n`;\n\nexport const MidPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #f3b249;\n  }\n`;\n\nexport const HighPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #ea3d65;\n  }\n`;\n\nexport const PriorityWrapper = styled.div`\n  display: flex;\n  column-gap: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const RadioLabel = styled.label`\n  color: #343434;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.16;\n  font-family: Inter;\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const CheckedRadioBtnBlue = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: rgba(114, 194, 248, 0.5);\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const CheckedRadioBtnYellow = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #f3b24988;\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const CheckedRadioBtnRed = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #ea3d658b;\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const RadioLabelStyled = styled(RadioLabel)`\n  & ${RadioBtn}:checked + ${CheckedRadioBtnRed} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n  & ${RadioBtn}:checked + ${CheckedRadioBtnBlue} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n  & ${RadioBtn}:checked + ${CheckedRadioBtnYellow} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n`;\n\nexport const AddTaskButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.17;\n  border: 0;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 10px;\n  font-weight: 400;\n  color: red;\n  position: absolute;\n  width: 400px;\n  bottom: 5px;\n  left: 2px;\n`;\n\nexport const BoxInput = styled.div`\n  position: relative;\n`;\n\nexport const StyledSVG = styled.svg`\n  display: inline-block;\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const StyledEditBtn = styled.svg`\n  text-align: center;\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const BtnTxt = styled.span`\n  display: inline-block;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  AddTaskButton,\n  BoxInput,\n  BtnTxt,\n  BtnWrapper,\n  CancelButton,\n  CheckedRadioBtnBlue,\n  CheckedRadioBtnRed,\n  CheckedRadioBtnYellow,\n  Error,\n  FormContainer,\n  FormElement,\n  FormField,\n  FormLabel,\n  HighPrioBtn,\n  LowPrioBtn,\n  MidPrioBtn,\n  PriorityWrapper,\n  RadioBtn,\n  RadioLabelStyled,\n  StyledEditBtn,\n  StyledSVG,\n  TimeFieldWrap,\n  TimeInput,\n  TimeWrapper,\n} from './TaskForm.styled';\nimport sprite from '../Pictures/sprite.svg';\nimport { editTask, addTask } from '../../redux/task/taskOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsError } from 'redux/task/taskSelectors';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Checkmark from './Checkmark/Checkmark';\n\nconst TaskForm = ({ closeModal, task }) => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const error = useSelector(selectIsError);\n  const { title, start, end, priority } = task;\n\n  useEffect(() => {}, [error]);\n\n  let taskSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, 'Task name too short')\n      .max(60, 'Task name too long.')\n      .required('Task name is required'),\n    start: Yup.string().required('Start time is required'),\n    end: Yup.string()\n      .required('End time is required')\n      .test(\n        'is-greater',\n        'End time must be greater than start time',\n        function (end) {\n          const start = this.parent.start;\n          return !start || !end || start < end;\n        }\n      ),\n    priority: Yup.string()\n      .oneOf(['low', 'medium', 'high'])\n      .required('Priority is required'),\n  });\n\n  const onTaskSubmit = async values => {\n    const newTask = { ...task, ...values };\n    task._id ? dispatch(editTask(newTask)) : dispatch(addTask(newTask));\n    setIsSubmitted(true);\n    setTimeout(() => closeModal(), 1500);\n  };\n\n  return (\n    <FormContainer>\n      {!isSubmitted && (\n        <Formik\n          initialValues={\n            task._id\n              ? { title, start, end, priority }\n              : { title: '', start: '09:00', end: '10:00', priority: 'low' }\n          }\n          validationSchema={taskSchema}\n          onSubmit={async values => {\n            onTaskSubmit(values);\n          }}\n        >\n          {({ values, errors, touched }) => {\n            return (\n              <FormElement>\n                <FormLabel htmlFor=\"title\">Title</FormLabel>\n                <BoxInput>\n                  <FormField\n                    id=\"title\"\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Enter text\"\n                  />\n                  {errors.title && touched.title ? (\n                    <Error>{errors.title}</Error>\n                  ) : null}\n                </BoxInput>\n                <TimeWrapper>\n                  <TimeFieldWrap>\n                    <FormLabel htmlFor=\"start\">Start</FormLabel>\n                    <TimeInput\n                      id=\"start\"\n                      type=\"time\"\n                      step=\"60\"\n                      name=\"start\"\n                    ></TimeInput>\n                    {errors.start && touched.start ? (\n                      <Error>{errors.start}</Error>\n                    ) : null}\n                    {!errors.start && errors.end && touched.end ? (\n                      <Error>{errors.end}</Error>\n                    ) : null}\n                  </TimeFieldWrap>\n                  <TimeFieldWrap>\n                    <FormLabel htmlFor=\"end\">End</FormLabel>\n                    <TimeInput id=\"end\" type=\"time\" name=\"end\"></TimeInput>\n                  </TimeFieldWrap>\n                </TimeWrapper>\n                <PriorityWrapper role=\"group\" id=\"priority-group\">\n                  <RadioLabelStyled>\n                    <RadioBtn type=\"radio\" name=\"priority\" value=\"low\" />\n                    <CheckedRadioBtnBlue />\n                    <LowPrioBtn />\n                    Low\n                  </RadioLabelStyled>\n                  <RadioLabelStyled>\n                    <RadioBtn\n                      type=\"radio\"\n                      name=\"priority\"\n                      value=\"medium\"\n                    ></RadioBtn>\n                    <CheckedRadioBtnYellow />\n                    <MidPrioBtn /> Medium\n                  </RadioLabelStyled>\n                  <RadioLabelStyled>\n                    <RadioBtn\n                      type=\"radio\"\n                      name=\"priority\"\n                      value=\"high\"\n                    ></RadioBtn>\n                    <CheckedRadioBtnRed />\n                    <HighPrioBtn /> High\n                  </RadioLabelStyled>\n                </PriorityWrapper>\n                <BtnWrapper>\n                  <AddTaskButton type=\"submit\">\n                    {task._id ? (\n                      <StyledEditBtn style={{ marginRight: 8 }}>\n                        <use href={sprite + '#edit-btn'}></use>\n                      </StyledEditBtn>\n                    ) : (\n                      <StyledSVG>\n                        <use href={sprite + '#plus-btn'}></use>\n                      </StyledSVG>\n                    )}\n                    {task._id ? 'Edit' : <BtnTxt>Add</BtnTxt>}\n                  </AddTaskButton>\n                  <CancelButton onClick={closeModal}>Cancel</CancelButton>\n                </BtnWrapper>\n              </FormElement>\n            );\n          }}\n        </Formik>\n      )}\n      {isSubmitted ? <Checkmark /> : null}\n    </FormContainer>\n  );\n};\n\nexport default TaskForm;\n","import DeleteForm from 'components/DeleteForm/DeleteForm';\nimport Modal from 'components/Modal/Modal';\nimport TaskForm from 'components/TaskForm/TaskForm';\n\nimport { createPortal } from 'react-dom';\n\nconst TaskModal = ({ task, closeModal, deleteTask }) => {\n  return createPortal(\n    <Modal closeModal={closeModal}>\n      {deleteTask ? (\n        <DeleteForm closeModal={closeModal} task={task}></DeleteForm>\n      ) : (\n        <TaskForm closeModal={closeModal} task={task}></TaskForm>\n      )}\n    </Modal>,\n    document.body\n  );\n};\n\nexport default TaskModal;\n","import { useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport { StyledColumnHeadBar } from './ColumnHeadBar.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\n// import { ReactComponent as PlusCircleLogo } from '../../../Pictures/plus-circle.svg';\nimport sprite from 'components/Pictures/sprite.svg';\n\nconst ColumnHeadBar = ({ title, category }) => {\n  const [showModal, setShowModal] = useState(false);\n  const { currentDate } = useParams();\n\n  const handleClick = () => setShowModal(true);\n\n  const closeModal = () => setShowModal(false);\n\n  return (\n    <>\n      <StyledColumnHeadBar className=\"columnHeadBar\">\n        <h3>{title}</h3>\n        <button onClick={handleClick} aria-label=\"add task\" type=\"button\">\n          <svg>\n            <use href={sprite + '#icon-plus-circle'}></use>\n          </svg>\n          {/* <PlusCircleLogo /> */}\n        </button>\n      </StyledColumnHeadBar>\n\n      {showModal && (\n        <TaskModal\n          task={{ category, date: currentDate }}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ColumnHeadBar;\n","import styled from 'styled-components';\n\nexport const StyledColumnTasksList = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskColumnCard = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px; */\n  padding: 14px 14px 18px;\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #f7f6f9;\n\n  & .title,\n  .time {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    /* margin-bottom: 28px; */\n    margin-bottom: 5px;\n\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285; /* 128.571% */\n  }\n\n  & .time {\n    text-align: center;\n  }\n\n  & .time span:first-child {\n    margin-right: 5px;\n  }\n  & .time span:last-child {\n    margin-left: 5px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskToolbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n\n  & .infoWrapper {\n    display: flex;\n    align-items: end;\n  }\n\n  & .imgWrapper {\n    overflow: hidden;\n    margin-right: 8px;\n\n    width: 32px;\n    height: 32px;\n\n    border-radius: 50%;\n    border: 1.8px solid #3e85f3;\n    /* background: url(<path-to-image>), lightgray 50% / cover no-repeat; */\n\n    & img {\n      margin-left: -1px;\n      margin-top: -1px;\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  & span {\n    padding: 4px 12px;\n\n    color: #fff;\n\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 600;\n    line-height: 1.2; /* 120% */\n\n    border-radius: 4px;\n    background: ${props => props.priority};\n  }\n\n  .controlsWrapper {\n    line-height: 0;\n  }\n  & button {\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: #f7f6f9;\n  }\n\n  & button:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: #f7f6f9;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledCategoryModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  /* background-color: rgba(0, 0, 0, 0.8); */\n\n  & .modal {\n    position: absolute;\n    top: ${({ coords }) => coords.clientY + 15 + 'px'};\n    left: ${({ coords }) => coords.clientX - 5 + 'px'};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    padding: 0 12px;\n\n    width: 148px;\n    height: 90px;\n\n    border-radius: 8px;\n    background: #fff;\n    box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.1);\n  }\n\n  & button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 12px 12px;\n\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.2857; /* 128.571% */\n\n    color: #343434;\n    border: none;\n    background-color: #fff;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & button span {\n    line-height: 0;\n  }\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: #f7f6f9;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import sprite from 'components/Pictures/sprite.svg';\n\nconst CategoryButton = ({ category, title, changeCategory }) => {\n  return (\n    <button\n      onClick={() => changeCategory(category)}\n      aria-label=\"change task category\"\n      type=\"button\"\n    >\n      {title}\n      <span>\n        <svg>\n          <use href={sprite + '#arrow-circle-broken-right'}></use>\n        </svg>\n      </span>\n    </button>\n  );\n};\n\nexport default CategoryButton;\n","export const CATEGORY_LIST = ['to-do', 'in-progress', 'done'];\n","export const filterDayTasks = (monthTasks, day) => {\n  return monthTasks.filter(task => task.date.slice(-2) === day);\n};\n\nexport const CreateSortedTasks = (categories, tasks) => {\n  const obj = {};\n  categories.forEach(cat => (obj[cat] = []));\n  tasks.forEach(task => obj[task.category].push(task));\n  return obj;\n};\n\nexport const parseCategoryTitle = category => {\n  const capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\n  return capitalize(category).replace('-', ' ');\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { StyledCategoryModal } from './CategoryModal.styled';\nimport CategoryButton from './CategoryButton/CategoryButton';\n\nimport { editTask } from 'redux/task/taskOperations';\nimport { selectIsError } from 'redux/task/taskSelectors';\nimport { CATEGORY_LIST } from 'constants/categoryList';\nimport { parseCategoryTitle } from 'helpers/helpers';\n\nconst CategoryModal = ({ task, coords, closeModal }) => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectIsError);\n\n  const variants = CATEGORY_LIST.filter(cat => cat !== task.category);\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) closeModal();\n  };\n\n  const changeCategory = category => {\n    dispatch(editTask({ ...task, category }));\n    !error && closeModal();\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') closeModal();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [closeModal]);\n\n  return createPortal(\n    <StyledCategoryModal coords={coords} onClick={handleOverlayClick}>\n      <div className=\"modal\">\n        {variants.map(variant => (\n          <CategoryButton\n            key={variant}\n            category={variant}\n            title={parseCategoryTitle(variant)}\n            changeCategory={changeCategory}\n          />\n        ))}\n      </div>\n    </StyledCategoryModal>,\n    document.body\n  );\n};\n\nexport default CategoryModal;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { StyledTaskToolbar } from './TaskToolbar.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\nimport CategoryModal from './CategoryModal/CategoryModal';\n\nimport { selectUser } from 'redux/auth/authSelectors';\nimport sprite from 'components/Pictures/sprite.svg';\n\nconst TaskToolbar = ({ task }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteTask, setDeleteTask] = useState(false);\n  const [categoryModal, setCategoryModal] = useState({\n    isOpen: false,\n    coords: null,\n  });\n\n  const user = useSelector(selectUser);\n  const { avatarURL, name } = user;\n  const { priority } = task;\n\n  const priorityColors = {\n    low: '#72C2F8',\n    medium: '#F3B249',\n    high: '#EA3D65',\n  };\n\n  const handleClick = ({ clientX, clientY }) => {\n    setCategoryModal({\n      isOpen: true,\n      coords: { clientX, clientY },\n    });\n  };\n\n  const closeCategoryModal = () => {\n    setCategoryModal({\n      isOpen: false,\n      coords: null,\n    });\n  };\n\n  const onEditClick = () => {\n    setShowModal(true);\n  };\n\n  const onDeleteClick = () => {\n    setShowModal(true);\n    setDeleteTask(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setDeleteTask(false);\n  };\n  return (\n    <>\n      <StyledTaskToolbar\n        className=\"taskToolbar\"\n        priority={priorityColors[priority]}\n      >\n        <div className=\"infoWrapper\">\n          <div className=\"imgWrapper\">\n            <img src={avatarURL} alt={name} />\n          </div>\n          <span>{priority}</span>\n        </div>\n        <div className=\"controlsWrapper\">\n          <button\n            onClick={handleClick}\n            aria-label=\"change task category\"\n            type=\"button\"\n          >\n            <svg>\n              <use href={sprite + '#arrow-circle-broken-right'}></use>\n            </svg>\n          </button>\n          <button onClick={onEditClick} aria-label=\"edit task\" type=\"button\">\n            <svg>\n              <use href={sprite + '#icon-pencil'}></use>\n            </svg>\n          </button>\n          <button\n            onClick={onDeleteClick}\n            aria-label=\"delete task\"\n            type=\"button\"\n          >\n            <svg>\n              <use href={sprite + '#icon-trash'}></use>\n            </svg>\n          </button>\n        </div>\n      </StyledTaskToolbar>\n\n      {showModal && (\n        <TaskModal\n          task={task}\n          closeModal={closeModal}\n          deleteTask={deleteTask}\n        />\n      )}\n\n      {categoryModal.isOpen && (\n        <CategoryModal\n          task={task}\n          coords={categoryModal.coords}\n          closeModal={closeCategoryModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskToolbar;\n","import { StyledTaskColumnCard } from './TaskColumnCard.styled';\nimport TaskToolbar from './TaskToolbar/TaskToolbar';\n\nconst TaskColumnCard = ({ task }) => {\n  return (\n    <StyledTaskColumnCard>\n      <p className=\"title\">{task.title}</p>\n      <p className=\"time\">\n        <span>{task.start}</span>-<span>{task.end}</span>\n      </p>\n      <TaskToolbar task={task} />\n    </StyledTaskColumnCard>\n  );\n};\n\nexport default TaskColumnCard;\n","import { StyledColumnTasksList } from './ColumnTasksList.styled';\nimport TaskColumnCard from './TaskColumnCard/TaskColumnCard';\n\nconst ColumnTasksList = ({ tasks }) => {\n  return (\n    <StyledColumnTasksList>\n      {tasks.map(task => (\n        <TaskColumnCard key={task._id} task={task} />\n      ))}\n    </StyledColumnTasksList>\n  );\n};\n\nexport default ColumnTasksList;\n","import styled from 'styled-components';\n\nexport const StyledAddTaskBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 299px;\n  height: 48px;\n  padding: 16px 20px;\n\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n  background: #e3f3ff;\n\n  color: #111;\n  /* text-align: center; */\n  font-family: Inter;\n  font-size: 14px;\n  /* font-style: normal; */\n  font-weight: 600;\n  line-height: 1.285; /* 128.571% */\n\n  & span {\n    line-height: 0;\n    margin-right: 8px;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: currentColor;\n    fill: white;\n  }\n\n  &:hover {\n    color: white;\n    border: 1px solid #3e85f3;\n    background: #3e85f3;\n  }\n`;\n","import { useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport { StyledAddTaskBtn } from './AddTaskBtn.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\nimport sprite from 'components/Pictures/sprite.svg';\n\nconst AddTaskBtn = ({ category }) => {\n  const [showModal, setShowModal] = useState(false);\n  const { currentDate } = useParams();\n\n  const handleClick = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  return (\n    <>\n      <StyledAddTaskBtn aria-label=\"add task\" onClick={handleClick}>\n        <span>\n          <svg>\n            <use href={sprite + '#icon-plus'}></use>\n          </svg>\n        </span>\n        Add task\n      </StyledAddTaskBtn>\n\n      {showModal && (\n        <TaskModal\n          task={{ category, date: currentDate }}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default AddTaskBtn;\n","import { StyledTasksColumnItem } from './TasksColumnItem.styled';\nimport ColumnHeadBar from './ColumnHeadBar/ColumnHeadBar';\nimport ColumnTasksList from './ColumnTasksList/ColumnTasksList';\nimport AddTaskBtn from './AddTaskBtn/AddTaskBtn';\n\nconst TasksColumnItem = ({ title, tasks, category }) => {\n  return (\n    <StyledTasksColumnItem className=\"tasksColumnItem\">\n      <ColumnHeadBar title={title} category={category} />\n      <ColumnTasksList tasks={tasks} />\n      <AddTaskBtn category={category} />\n    </StyledTasksColumnItem>\n  );\n};\n\nexport default TasksColumnItem;\n","import { StyledTasksColumnsList } from './TasksColumnsList.styled';\nimport TasksColumnItem from '../TasksColumnItem/TasksColumnItem';\n\nimport { parseCategoryTitle } from 'helpers/helpers';\nimport { CATEGORY_LIST } from 'constants/categoryList';\n\nconst TasksColumnsList = ({ sortedTasks }) => {\n  return (\n    <StyledTasksColumnsList>\n      {CATEGORY_LIST.map(category => (\n        <TasksColumnItem\n          key={category}\n          title={parseCategoryTitle(category)}\n          category={category}\n          tasks={sortedTasks[category]}\n        />\n      ))}\n    </StyledTasksColumnsList>\n  );\n};\n\nexport default TasksColumnsList;\n","import { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { StyledChoosedDay } from './ChoosedDay.styled';\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\n\nimport { selectTasks } from 'redux/task/taskSelectors';\nimport { CreateSortedTasks, filterDayTasks } from 'helpers/helpers';\nimport { CATEGORY_LIST } from 'constants/categoryList';\n\nconst ChoosedDay = () => {\n  const { pathname } = useLocation();\n  const monthTasks = useSelector(selectTasks);\n\n  const day = pathname.slice(-2);\n  const dayTasks = filterDayTasks(monthTasks, day);\n  const sortedTasks = CreateSortedTasks(CATEGORY_LIST, dayTasks); // maybe useSelector ?\n\n  return (\n    <StyledChoosedDay>\n      {/* <DayCalendarHead /> */}\n      <TasksColumnsList sortedTasks={sortedTasks} />\n    </StyledChoosedDay>\n    //\n  );\n};\n\nexport default ChoosedDay;\n","import { Suspense, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nimport { addDays, addMonths, format, subDays, subMonths } from 'date-fns';\n\nimport { HeaderContainer } from './CalendarPage.styled.jsx';\nimport Header from 'components/Header/Header.jsx';\nimport { CalendarToolbar } from 'components/Calendar/common';\nimport { CalendarContainer } from 'components/Calendar/common';\nimport ChoosedMonth from 'components/Calendar/month/ChoosedMonth';\n\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport ChoosedDay from 'components/ChoosedDay/ChoosedDay.jsx';\n\nimport { getTasks as getTasksThunk } from 'redux/task/taskOperations';\nimport { selectTasks } from 'redux/task/taskSelectors';\n\nconst CalendarPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const tasks = useSelector(selectTasks);\n\n  const currentDate = Object.values(useParams())[0].slice(-10);\n  const requestDate = currentDate.slice(0, 7);\n\n  const prevMonthRef = useRef(pathname.slice(-5).slice(0, 2));\n\n  useEffect(() => {\n    if (tasks.length > 0) return;\n\n    dispatch(getTasksThunk(requestDate));\n  }, [dispatch, requestDate, tasks.length]);\n\n  useEffect(() => {\n    if (tasks.length === 0) return;\n\n    const currentMonth = pathname.slice(-5).slice(0, 2);\n    if (prevMonthRef.current === currentMonth) return;\n\n    prevMonthRef.current = currentMonth;\n    dispatch(getTasksThunk(requestDate));\n  }, [dispatch, requestDate, tasks.length, pathname]);\n\n  const handlePrev = () => {\n    if (pathname.includes('day')) {\n      const newDate = subDays(new Date(currentDate), 1);\n      navigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n\n      return;\n    }\n\n    const newDate = subMonths(new Date(currentDate), 1);\n    navigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n  };\n\n  const handleNext = () => {\n    if (pathname.includes('day')) {\n      const newDate = addDays(new Date(currentDate), 1);\n      navigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n\n      return;\n    }\n\n    const newDate = addMonths(new Date(currentDate), 1);\n    navigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n  };\n\n  return (\n    <MainLayout>\n      <CalendarContainer>\n        <HeaderContainer>\n          <Header />\n        </HeaderContainer>\n\n        <Suspense fallback={null}>\n          <CalendarToolbar\n            onClickPrev={handlePrev}\n            onClickNext={handleNext}\n            today={currentDate}\n          />\n          <Routes>\n            <Route path=\"/month/:currentDate\" element={<ChoosedMonth />} />\n            <Route path=\"/day/:currentDate\" element={<ChoosedDay />} />\n          </Routes>\n        </Suspense>\n      </CalendarContainer>\n    </MainLayout>\n  );\n};\n\nexport default CalendarPage;\n","export const selectTasks = state => state.tasks.tasks;\nexport const selectIsError = state => state.tasks.error;\nexport const selectIsLoading = state => state.tasks.isLoading;\n"],"names":["CheckmarkWrap","styled","strokeAnimation","keyframes","scaleAnimation","fillAnimation","Circle","Svg","Path","HeaderContainer","ToolbarWrapper","today","onClickPrev","onClickNext","useState","type","setType","pathname","useLocation","useEffect","includes","date","onChangeType","props","width","height","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Wrapper","ButtonsWrapper","ButtonLeft","ButtonRight","currentDate","setCurrentDate","parse","Date","onClick","ChevronRight","ChevronLeft","List","StyledNavLink","NavLink","formattedToday","format","className","to","createGlobalStyle","navigate","useNavigate","params","useParams","isParams","Boolean","Object","keys","length","dateValue","setDateValue","onChange","formattedDate","value","clearIcon","locale","showLeadingZeros","MonthCalendarHeadStyles","MobileDaysList","DesktopDayList","WorkDay","WeekendDay","workDayNames","weekendDayNames","map","day","slice","color","wrapperClass","css","isLoading","useSelector","selectIsLoading","tasksList","selectTasks","renderCalendar","Container","StyledChoosedDay","StyledTasksColumnsList","StyledTasksColumnItem","StyledColumnHeadBar","DeleteBtn","CancelBtn","BtnWrapper","TextDiv","require","xmlns","viewBox","cx","cy","r","task","closeModal","dispatch","useDispatch","isSubmitted","setIsSubmitted","deleteTask","_id","setTimeout","style","marginRight","href","sprite","styledForm","Form","styledField","Field","styledRadio","FormContainer","FormElement","FormLabel","FormField","TimeInput","TimeWrapper","TimeFieldWrap","RadioBtn","CustomRadioBtn","LowPrioBtn","MidPrioBtn","HighPrioBtn","PriorityWrapper","RadioLabel","CheckedRadioBtnBlue","CheckedRadioBtnYellow","CheckedRadioBtnRed","RadioLabelStyled","AddTaskButton","CancelButton","Error","BoxInput","StyledSVG","StyledEditBtn","BtnTxt","error","selectIsError","title","start","end","priority","taskSchema","Yup","shape","min","max","required","test","this","parent","oneOf","onTaskSubmit","values","newTask","editTask","addTask","initialValues","validationSchema","onSubmit","errors","touched","htmlFor","id","name","placeholder","step","role","createPortal","Modal","document","body","category","showModal","setShowModal","StyledColumnTasksList","StyledTaskColumnCard","StyledTaskToolbar","StyledCategoryModal","coords","clientY","clientX","changeCategory","CATEGORY_LIST","parseCategoryTitle","string","charAt","toUpperCase","replace","variants","filter","cat","handleKeyDown","e","code","window","addEventListener","removeEventListener","currentTarget","target","variant","setDeleteTask","isOpen","categoryModal","setCategoryModal","user","selectUser","avatarURL","low","medium","high","src","alt","tasks","StyledAddTaskBtn","sortedTasks","dayTasks","monthTasks","filterDayTasks","categories","obj","forEach","push","CreateSortedTasks","requestDate","prevMonthRef","useRef","getTasksThunk","currentMonth","current","MainLayout","Header","Suspense","fallback","newDate","subDays","subMonths","addDays","addMonths","path","element","state"],"sourceRoot":""}