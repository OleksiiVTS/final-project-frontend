{"version":3,"file":"static/js/754.b4f03290.chunk.js","mappings":"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","sources":["components/DeleteForm/DeleteForm.styled.jsx","components/TaskForm/Checkmark/Checkmark.jsx","components/TaskForm/Checkmark/Checkmark.styled.jsx","helpers/ValidSchema.js","components/UserForm/UserForm.styled.jsx","components/UserForm/PreviewAvatar.js","components/UserForm/ConfirmationModal/ConfirmationModal.jsx","components/UserForm/UserForm.jsx","pages/Private/AccountPage/AccountPage.jsx"],"sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const DeleteBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n`;\n","const { Path, Circle, Svg, CheckmarkWrap } = require('./Checkmark.styled');\n\nconst Checkmark = () => {\n  return (\n    <CheckmarkWrap>\n      <Svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 104 104\"\n        width=\"104\"\n        height=\"104\"\n      >\n        <Circle cx=\"52\" cy=\"52\" r=\"50\" fill=\"none\" />\n        <Path fill=\"none\" d=\"M28.2 54.2l14.2 14.4 33.4-33.6\" />\n      </Svg>\n    </CheckmarkWrap>\n  );\n};\n\nexport default Checkmark;\n","import styled, { keyframes } from 'styled-components';\n\nexport const CheckmarkWrap = styled.div`\n  box-sizing: border-box;\n  height: 258.39px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst strokeAnimation = keyframes`\n  100% {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst fillAnimation = keyframes`\n  100% {\n    box-shadow: inset 0px 0px 0px 30px #ffffff0;\n  }\n`;\n\nconst scaleAnimation = keyframes`\n  0%, 100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n`;\n\nexport const Circle = styled.circle`\n  stroke-dasharray: 332;\n  stroke-dashoffset: 332;\n  stroke-width: 4;\n  stroke-miterlimit: 10;\n  stroke: green;\n  fill: none;\n  animation: ${strokeAnimation} 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n`;\n\nexport const Svg = styled.svg`\n  display: block;\n  width: 112px;\n  height: 112px;\n  border-radius: 50%;\n  display: block;\n  stroke-width: 4;\n  stroke: green;\n  stroke-miterlimit: 10;\n  margin: 10% auto;\n  box-shadow: inset 0px 0px 0px #7ac142;\n  animation: ${fillAnimation} 0.4s ease-in-out 0.4s forwards,\n    ${scaleAnimation} 0.3s ease-in-out 0.9s both;\n`;\n\nexport const Path = styled.path`\n  transform-origin: 50% 50%;\n  stroke-dasharray: 96;\n  stroke-dashoffset: 96;\n  animation: ${strokeAnimation} 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s\n    forwards;\n`;\n","import * as Yup from 'yup';\nconst phoneRegExp =\n  '\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}';\n\nconst birthdayRegExp =\n  '^(0[1-9]|[12]\\\\d|3[01])/(0[1-9]|1[0-2])/(19\\\\d{2}|20\\\\d{2})$';\n\nconst ValidSchema = Yup.object().shape({\n  usrName: Yup.string()\n    .max(16, 'Must be 16 characters or less')\n    .required('Username is required'),\n  phone: Yup.string().matches(phoneRegExp, 'Wrong number'),\n  birthday: Yup.string().matches(\n    birthdayRegExp,\n    'Wrong format. Example: 22/10/2022'\n  ),\n  skype: Yup.string().max(16, 'Must be 16 characters or less'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n});\n\nexport default ValidSchema;\n","import styled from 'styled-components';\n\nexport const FormaBox = styled.form`\n  /* width: 100vh; */\n  height: 100vh;\n\n  /* padding: 95px 20px 40px 20px; */\n  /* background-color: #f7f6f9; */\n  @media screen and (min-width: 768px) {\n    /* padding: 64px 32px 38px 32px; */\n  }\n  @media screen and (min-width: 1440px) {\n    /* padding: 33px 32px 32px 32px; */\n  }\n`;\nexport const UserFormBox = styled.div`\n  width: 335px;\n  position: relative;\n\n  display: flex;\n  padding: 59px 18px 40px 18px;\n  flex-direction: column;\n  border-radius: 16px;\n  background: ${({ bg }) => bg || 'var(--color-choice-dark-no-active)'};\n  color: ${({ color }) => color || '#000'};\n\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    padding: 40px 175px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    padding: 60px 165px;\n  }\n`;\nexport const BoxForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  column-gap: 50px;\n  row-gap: 24px;\n  box-sizing: border-box;\n  @media screen and (min-width: 1440px) {\n    height: 270px;\n    width: 758px;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  left: 50%;\n  top: 0;\n  width: 72px;\n  height: 72px;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    left: 0;\n    transform: translate(0, 0);\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const IconDiv = styled.button`\n  position: absolute;\n  top: 25px;\n  left: 52%;\n  z-index: 2;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  @media screen and (min-width: 768px) {\n    top: 150px;\n    left: 51%;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 168px;\n    left: 51%;\n  }\n`;\nexport const WhiteBox = styled.div`\n  position: absolute;\n  top: 29.5px;\n  left: 53.2%;\n  width: 6px;\n  height: 6px;\n  background-color: #ffffff;\n  border-radius: 50%;\n  z-index: 1;\n  @media screen and (min-width: 768px) {\n    top: 156.5px;\n    left: 52%;\n    width: 10px;\n    height: 10px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 175px;\n    left: 51.7%;\n  }\n`;\nexport const UserName = styled.h1`\n  color: ${({ color }) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1; /* 100% */\n\n  margin: 0;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 14px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 20px;\n  }\n`;\n\nexport const User = styled.h2`\n  color: ${({ color }) => color || '#343434'};\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n\n  margin-top: 8px;\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: center;\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 44px;\n  }\n`;\n\nexport const LabelUserForm = styled.label`\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.17; /* 116.667% */\n  display: block;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.29; /* 128.571% */\n  }\n`;\n\nexport const InputUserForm = styled.input`\n  box-sizing: border-box;\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  color: ${({ color }) => color || '#000'};\n  background: ${({ bg }) => bg || '#fff'};\n  padding: 12px 14px;\n  border-radius: 8px;\n  width: 100%;\n  border: 1px solid\n    ${({ bordercolor }) => bordercolor || 'rgba(17, 17, 17, 0.1)'};\n\n  @media screen and (min-width: 768px) {\n    padding: 13px 18px;\n    width: 354px;\n    font-size: 16px;\n    line-height: 1.12; /* 112.5% */\n  }\n  @media screen and (min-width: 1440px) {\n    width: 354px;\n  }\n`;\n\nexport const BtnUserForm = styled.button`\n  width: 195px;\n  height: 46px;\n\n  display: flex;\n\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 16px;\n  background: #3e85f3;\n  border: none;\n  color: #fff;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29; /* 128.571% */\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n  @media screen and (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n    margin-top: 18px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-top: 88px;\n  }\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 10px;\n  font-weight: 400;\n  color: red;\n  position: absolute;\n  width: 400px;\n  bottom: -12px;\n  left: 10px;\n`;\n\nexport const FieldWrap = styled.div`\n  position: relative;\n`;\n","import React from 'react';\nimport { Avatar } from './UserForm.styled';\n\nconst PreviewAvatar = ({ file }) => {\n  const [preview, setPreview] = React.useState(null);\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    setPreview(reader.result);\n  };\n  return (\n    <>\n      <Avatar src={preview} alt=\"User avatar\" />\n    </>\n  );\n};\n\nexport default PreviewAvatar;\n","import {\n  BtnWrapper,\n  CancelBtn,\n  DeleteBtn,\n  TextDiv,\n} from 'components/DeleteForm/DeleteForm.styled';\nimport Modal from 'components/Modal/Modal';\nimport Checkmark from 'components/TaskForm/Checkmark/Checkmark';\nimport { useState } from 'react';\n\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { update } from 'redux/auth/authOperations';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst ConfirmationModal = ({ values, closeModal }) => {\n  const dispatch = useDispatch();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const theme = useSelector(selectTheme);\n  const updateUser = updateUser => {\n    dispatch(update(updateUser));\n  };\n\n  const submitForm = () => {\n    setIsSubmitted(true);\n    setTimeout(() => closeModal(), 1500);\n    setTimeout(() => updateUser(values), 1500);\n  };\n\n  return createPortal(\n    <Modal closeModal={closeModal}>\n      {isSubmitted ? (\n        <Checkmark />\n      ) : (\n        <>\n          <TextDiv\n            style={theme === 'dark' ? { color: '#fff' } : { color: '#000' }}\n          >\n            Do you want to save the changes?\n          </TextDiv>\n          <BtnWrapper>\n            <DeleteBtn onClick={submitForm}>Save</DeleteBtn>\n            <CancelBtn onClick={closeModal}>Cancel</CancelBtn>\n          </BtnWrapper>\n        </>\n      )}\n    </Modal>,\n    document.body\n  );\n};\n\nexport default ConfirmationModal;\n","//import moment from 'moment';\nimport { format } from 'date-fns';\nimport { AiFillPlusCircle } from 'react-icons/ai';\n\nimport { Formik, useFormik } from 'formik';\nimport ValidSchema from 'helpers/ValidSchema.js';\n\nimport { selectUser } from '../../redux/auth/authSelectors.js';\nimport {\n  Avatar,\n  BoxForm,\n  BtnUserForm,\n  Error,\n  FieldWrap,\n  FormaBox,\n  IconDiv,\n  InputUserForm,\n  LabelUserForm,\n  User,\n  UserFormBox,\n  UserName,\n  WhiteBox,\n} from './UserForm.styled.jsx';\nimport { useRef } from 'react';\nimport PreviewAvatar from './PreviewAvatar.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\nimport { useState } from 'react';\n\nimport ConfirmationModal from './ConfirmationModal/ConfirmationModal.jsx';\nimport { useSelector } from 'react-redux';\n\nconst UserForm = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [formValues, setFormValues] = useState(false);\n\n  const isUser = useSelector(selectUser);\n  const theme = useSelector(selectTheme);\n\n  const fileRef = useRef(null);\n\n  const formik = useFormik({\n    initialValues: {\n      usrName: isUser.username ?? '',\n      phone: isUser.phone ?? '',\n      birthday: isUser.birthday ?? '',\n      skype: isUser.skype ?? '',\n      email: isUser.email ?? '',\n      file: null,\n    },\n    onSubmit: values => {\n      setShowModal(true);\n      var imagefile = document.getElementById('avatar');\n      setFormValues({ ...values, avatarURL: imagefile });\n    },\n    validationSchema: ValidSchema,\n  });\n\n  const closeModal = () => setShowModal(false);\n  //const nowDate = new Date();\n  const dateMoment = format(new Date(), 'MM/dd/yyyy');\n\n  return (\n    <>\n      <Formik>\n        <FormaBox onSubmit={formik.handleSubmit}>\n          <UserFormBox\n            bg={\n              theme === 'dark' ? 'var(--color-choice-dark-no-active)' : '#fff'\n            }\n            color={theme === 'dark' ? 'var(--color-field-names-dark)' : '#000'}\n          >\n            <div>\n              <label htmlFor=\"avatar\">\n                {formik.values.file ? (\n                  <PreviewAvatar file={formik.values.file} />\n                ) : (\n                  <Avatar src={isUser.avatarURL} alt=\"User avatar\" />\n                )}\n\n                <IconDiv\n                  type=\"button\"\n                  onClick={() => {\n                    fileRef.current.click();\n                  }}\n                >\n                  <AiFillPlusCircle size={24} fill=\"#3E85F3\" />\n                </IconDiv>\n                <WhiteBox></WhiteBox>\n                <input\n                  ref={fileRef}\n                  id=\"avatar\"\n                  type=\"file\"\n                  hidden\n                  accept=\"image/*\"\n                  onChange={event => {\n                    formik.setFieldValue('file', event.target.files[0]);\n                  }}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.avatar}\n                />\n              </label>\n              <UserName color={theme === 'dark' ? '#fff' : '#343434'}>\n                {isUser.username ?? 'User Name'}\n              </UserName>\n\n              <User\n                color={\n                  theme === 'dark' ? 'var(--color-field-names-dark)' : '#343434'\n                }\n              >\n                User\n              </User>\n            </div>\n            <BoxForm>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"usrName\">User Name</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  id=\"usrName\"\n                  name=\"usrName\"\n                  type=\"text\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.usrName}\n                  style={\n                    formik.touched.usrName &&\n                    formik.errors.usrName && { border: '1px solid red' }\n                  }\n                />\n                {formik.touched.usrName && formik.errors.usrName ? (\n                  <Error>{formik.errors.usrName}</Error>\n                ) : null}\n              </FieldWrap>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"birthday\">Birthday</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  id=\"birthday\"\n                  name=\"birthday\"\n                  type=\"birthday\"\n                  placeholder={dateMoment}\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.birthday}\n                  style={\n                    formik.touched.birthday &&\n                    formik.errors.birthday && { border: '1px solid red' }\n                  }\n                ></InputUserForm>\n                {formik.touched.birthday && formik.errors.birthday ? (\n                  <Error>{formik.errors.birthday}</Error>\n                ) : null}\n              </FieldWrap>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"email\">Email</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Add your email\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.email}\n                  style={\n                    formik.touched.email &&\n                    formik.errors.email && { border: '1px solid red' }\n                  }\n                />\n                {formik.touched.email && formik.errors.email ? (\n                  <Error>{formik.errors.email}</Error>\n                ) : null}\n              </FieldWrap>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"phone\">Phone</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  style={\n                    formik.touched.phone &&\n                    formik.errors.phone && { border: '1px solid red' }\n                  }\n                  id=\"phone\"\n                  name=\"phone\"\n                  type=\"phone\"\n                  placeholder=\"Add a phone number\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.phone}\n                ></InputUserForm>\n                {formik.touched.phone && formik.errors.phone ? (\n                  <Error>{formik.errors.phone}</Error>\n                ) : null}\n              </FieldWrap>\n              <FieldWrap>\n                <LabelUserForm htmlFor=\"skype\">Skype</LabelUserForm>\n                <InputUserForm\n                  bg={\n                    theme === 'dark'\n                      ? 'var(--color-choice-dark-no-active)'\n                      : '#fff'\n                  }\n                  color={theme === 'dark' ? '#fff' : '#000'}\n                  bordercolor={\n                    theme === 'dark'\n                      ? 'var(--color-field-names-dark)'\n                      : 'rgba(17, 17, 17, 0.1)'\n                  }\n                  id=\"skype\"\n                  name=\"skype\"\n                  type=\"skype\"\n                  placeholder=\"Add a skype number\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.skype}\n                  style={\n                    formik.touched.skype &&\n                    formik.errors.skype && { border: '1px solid red' }\n                  }\n                ></InputUserForm>\n                {formik.touched.skype && formik.errors.skype ? (\n                  <Error>{formik.errors.skype}</Error>\n                ) : null}{' '}\n              </FieldWrap>\n            </BoxForm>\n            <BtnUserForm type=\"submit\">Save changes</BtnUserForm>\n          </UserFormBox>\n        </FormaBox>\n      </Formik>\n      {showModal && (\n        <ConfirmationModal values={formValues} closeModal={closeModal} />\n      )}\n    </>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport { selectIsRefreshing } from 'redux/auth/authSelectors.js';\nimport { useSelector } from 'react-redux';\nimport { Circles } from 'react-loader-spinner';\nimport UserForm from 'components/UserForm/UserForm.jsx';\nimport { HeaderContainer } from '../CalendarPage/CalendarPage.styled.jsx';\nimport Header from 'components/Header/Header.jsx';\nimport { CalendarContainer } from 'components/Calendar/common/index.js';\nimport { selectTheme } from 'redux/header/headerSlice.js';\n\nconst AccountPage = () => {\n  const IsRefreshing = useSelector(selectIsRefreshing);\n  const theme = useSelector(selectTheme);\n\n  return (\n    <MainLayout>\n      <CalendarContainer bgcolor={theme === 'dark' ? '#171820' : '#f7f6f9'}>\n        <HeaderContainer>\n          <Header pageName='My Account'/>\n        </HeaderContainer>\n        {IsRefreshing ? (\n          <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#4d78a9\"\n            // wrapperClass={css.loader}\n          />\n        ) : (\n          <UserForm />\n        )}\n      </CalendarContainer>\n    </MainLayout>\n  );\n};\n\nexport default AccountPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["DeleteBtn","CancelBtn","BtnWrapper","TextDiv","require","Path","Circle","Svg","CheckmarkWrap","xmlns","viewBox","width","height","cx","cy","r","fill","d","styled","strokeAnimation","keyframes","fillAnimation","scaleAnimation","Yup","shape","usrName","max","required","phone","matches","birthday","skype","email","FormaBox","UserFormBox","bg","color","BoxForm","Avatar","IconDiv","WhiteBox","UserName","User","LabelUserForm","InputUserForm","bordercolor","BtnUserForm","Error","FieldWrap","file","React","preview","setPreview","reader","FileReader","readAsDataURL","onload","result","src","alt","values","closeModal","dispatch","useDispatch","useState","isSubmitted","setIsSubmitted","theme","useSelector","selectTheme","createPortal","Modal","Checkmark","style","onClick","setTimeout","updateUser","update","document","body","showModal","setShowModal","formValues","setFormValues","isUser","selectUser","fileRef","useRef","formik","useFormik","initialValues","username","onSubmit","imagefile","getElementById","avatarURL","validationSchema","ValidSchema","dateMoment","format","Date","handleSubmit","htmlFor","type","current","click","size","ref","id","hidden","accept","onChange","event","setFieldValue","target","files","onBlur","handleBlur","value","avatar","name","handleChange","touched","errors","border","placeholder","IsRefreshing","selectIsRefreshing","MainLayout","bgcolor","Header","pageName"],"sourceRoot":""}