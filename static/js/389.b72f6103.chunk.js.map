{"version":3,"file":"static/js/389.b72f6103.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Public/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\nimport { NavLink } from 'react-router-dom';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst navLink = NavLink;\n\nexport const PageContainer = styled.div`\n  position: relative;\n  height: 100vh;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #dcebf7;\n  overflow: hidden;\n`;\n\nexport const FormPosition = styled.div`\n  width: 100%;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const RegisterContainer = styled.div`\n  padding: 24px 24px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #ffffff;\n  border-radius: 8px;\n  @media screen and (min-width: 335px) and (max-width: 767px) {\n    box-sizing: border-box;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    box-sizing: border-box;\n    max-width: 480px;\n    padding: 40px 40px;\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  margin-bottom: 32px;\n  font-family: Inter;\n  font-size: 18px;\n  font-weight: 600;\n  line-height: 1.33;\n  color: #3e85f3;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n  }\n`;\n\nexport const BoxInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 24px;\n  position: relative;\n`;\n\nexport const FormStyled = styled(styledForm)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  margin-bottom: 8px;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.29;\n  color: #111111;\n  \n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const FormField = styled(styledField)`\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 14px;\n  margin-bottom: 4px;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 400;\n  color: #111111;\n  background-color: #FFFFFF;\n  border-radius: 8px;\n  border: 1px solid #dce3e599;   \n  \n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    margin-bottom: 8px;\n  }\n\n  ::placeholder {\n    color: #dce3e5;\n  }\n`;\n\nexport const CorrectInput = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #3cbc81;\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 400;\n  color: #e74a3b;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nexport const InputIconName = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconEmail = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const InputIconPassword = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 88%;\n`;\n\nexport const RegButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 8px;\n  padding: 14px 0;\n  border: 1px solid transparent;\n  border-radius: 16px;\n  box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n  font-size: 14px;\n  background-color: #3e85f3;\n  color: #ffffff;\n\n  &:hover {\n    background-color: #2b78ef;\n  }\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 30px;\n    font-size: 18px;\n  }\n`;\n\nexport const LogIn = styled(navLink)`\n  display: block;\n  margin-top: 18px;\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n  color: #3e85f3;\n  text-decoration: underline;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ImagePosition = styled.div`\n  position: relative;\n  max-width: 480px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Image = styled.img`\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: absolute;\n    bottom: -90px;\n    right: 520px;\n    width: 368px;\n    height: auto;\n    overflow: hidden;\n  }\n`;\n","import { Formik } from 'formik';\nimport { FiLogIn } from 'react-icons/fi';\nimport { MdErrorOutline } from 'react-icons/md';\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\nimport {\n  Error,\n  FormField,\n  FormLabel,\n  FormStyled,\n  FormTitle,\n  LogIn,\n  RegButton,\n  RegisterContainer,\n  BoxInput,\n  Image,\n  FormPosition,\n  PageContainer,\n  ImagePosition,\n  CorrectInput,\n  InputIconName,\n  InputIconEmail,\n  InputIconPassword,\n} from './RegisterForm.styled';\nimport * as Yup from 'yup';\n\nimport IMG from '../Pictures/singup_goose.jpg';\n\nconst RegisterForm = () => {\n  let userSchema = Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .min(2, 'Name is too short - should be 2 chars minimum.')\n      .max(20, 'Name is too long - should be 20 chars maximum.')\n      .required('Name is required'),\n    email: Yup.string()\n      .trim()\n      .matches(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Invalid email. Valid email contain xxx@xxx.xxx'\n      )\n      .required('Email is required'),\n    password: Yup.string()\n      .trim()\n      .min(6, 'Password should be 6 chars minimum.')\n      .max(20, 'Password should be 20 chars maximum')\n      .required('Password is required')\n      .matches(/[a-zA-Z]/, 'Password mast contain Latin letters.'),\n  });\n\n  return (\n    <PageContainer>\n      <FormPosition>\n        <RegisterContainer>\n          <FormTitle>Sign Up</FormTitle>\n          <Formik\n            initialValues={{ name: '', email: '', password: '' }}\n            validationSchema={userSchema}\n            onSubmit={async values => {\n              console.log(values);\n            }}\n          >\n            {({ values, errors, touched }) => (\n              <FormStyled>\n                <BoxInput>\n                  {errors.name || values.name.trim() ? (\n                    <FormLabel\n                      style={\n                        errors.name\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"name\"\n                    >\n                      Name\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"name\">Name</FormLabel>\n                  )}\n\n                  {errors.name || values.name.trim() ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.name\n                            ? { borderColor: '#E74A3B', position: 'relative' }\n                            : { borderColor: '#3CBC81', position: 'relative' }\n                        }\n                        id=\"name\"\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Enter your name\"\n                      />\n                      {errors.name ? (\n                        <>\n                          <Error>{errors.name}</Error>\n                          <InputIconName>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconName>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is an CORRECT name</CorrectInput>\n                          <InputIconName>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconName>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"name\"\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Enter your name\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {errors.email || values.email.trim() ? (\n                    <FormLabel\n                      style={\n                        errors.email\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"email\">Email</FormLabel>\n                  )}\n\n                  {errors.email || values.email.trim() ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.email\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                      />\n                      {errors.email ? (\n                        <>\n                          <Error>{errors.email}</Error>\n                          <InputIconEmail>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconEmail>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>This is an CORRECT email</CorrectInput>\n                          <InputIconEmail>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconEmail>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter email\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <BoxInput>\n                  {errors.password || values.password.trim() ? (\n                    <FormLabel\n                      style={\n                        errors.password\n                          ? { color: '#E74A3B' }\n                          : { color: '#3CBC81' }\n                      }\n                      htmlFor=\"password\"\n                    >\n                      Password\n                    </FormLabel>\n                  ) : (\n                    <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  )}\n\n                  {errors.password || values.password.trim() ? (\n                    <>\n                      <FormField\n                        style={\n                          errors.password\n                            ? {\n                                borderColor: '#E74A3B',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                            : {\n                                borderColor: '#3CBC81',\n                                backgroundColor: '#FFFFFF',\n                                position: 'relative',\n                              }\n                        }\n                        id=\"password\"\n                        type=\"text\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                      />\n                      {errors.password ? (\n                        <>\n                          <Error>{errors.password}</Error>\n                          <InputIconPassword>\n                            <MdErrorOutline size={24} color=\"#E74A3B\" />\n                          </InputIconPassword>\n                        </>\n                      ) : (\n                        <>\n                          <CorrectInput>\n                            This is an CORRECT password\n                          </CorrectInput>\n                          <InputIconPassword>\n                            <AiOutlineCheckCircle size={24} color=\"#3CBC81\" />\n                          </InputIconPassword>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      <FormField\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                      />\n                    </>\n                  )}\n                </BoxInput>\n\n                <RegButton type=\"submit\">\n                  Sign Up <FiLogIn size={18} style={{ marginLeft: 11 }} />\n                </RegButton>\n              </FormStyled>\n            )}\n          </Formik>\n        </RegisterContainer>\n        <ImagePosition>\n          <LogIn to=\"/login\">Log In</LogIn>\n          <Image src={IMG} alt=\"Goose\" />\n        </ImagePosition>\n      </FormPosition>\n    </PageContainer>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\nimport RegisterForm from '../../../components/RegisterForm/RegisterForm.jsx';\n\nconst RegisterPage = () => {\n  return <RegisterForm></RegisterForm>;\n};\n\nexport default RegisterPage;\n\n// {isLoading && !error && (\n//     <Circles\n//       height=\"80\"\n//       width=\"80\"\n//       color=\"#4d78a9\"\n//!       wrapperClass={css.loader}\n//     />\n//   )}\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n"],"names":["styledForm","Form","styledField","Field","navLink","NavLink","PageContainer","styled","FormPosition","RegisterContainer","FormTitle","BoxInput","FormStyled","FormLabel","FormField","CorrectInput","Error","InputIconName","InputIconEmail","InputIconPassword","RegButton","LogIn","ImagePosition","Image","userSchema","Yup","shape","name","trim","min","max","required","email","matches","password","initialValues","validationSchema","onSubmit","values","console","log","errors","touched","style","color","htmlFor","borderColor","position","id","type","placeholder","size","backgroundColor","marginLeft","to","src","IMG","alt"],"sourceRoot":""}