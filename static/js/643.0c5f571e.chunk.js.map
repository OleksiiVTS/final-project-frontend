{"version":3,"file":"static/js/643.0c5f571e.chunk.js","mappings":"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","sources":["components/TaskForm/Checkmark/Checkmark.styled.jsx","components/Calendar/month/CalendarHead/CalendarHead.styled.jsx","components/Calendar/month/CalendarHead/CalendarHead.jsx","components/Calendar/month/CalendarTable/CalendarTable.jsx","components/Calendar/month/ChoosedMonth.styled.jsx","components/Calendar/month/ChoosedMonth.jsx","components/ChoosedDay/ChoosedDay.styled.js","components/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/ChoosedDay/TasksColumnItem/TasksColumnItem.styled.js","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.styled.js","components/DeleteForm/DeleteForm.styled.jsx","components/TaskForm/Checkmark/Checkmark.jsx","components/DeleteForm/DeleteForm.jsx","components/TaskForm/TaskForm.styled.jsx","components/TaskForm/TaskForm.jsx","components/TaskModal/TaskModal.jsx","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryModal.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryButton/CategoryButton.jsx","constants/categoryList.js","helpers/helpers.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/CategoryModal/CategoryModal.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.jsx","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.styled.js","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.jsx","components/ChoosedDay/TasksColumnItem/TasksColumnItem.jsx","components/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ColumnHeadBar/DayCalendarHead.styled.js","components/ChoosedDay/ColumnHeadBar/DayListItem/DayListItem.styled.js","components/ChoosedDay/ColumnHeadBar/DayListItem/DayListItem.jsx","components/ChoosedDay/ColumnHeadBar/DayCalendarHead.jsx","../node_modules/date-fns/esm/eachDayOfInterval/index.js","components/ChoosedDay/ChoosedDay.jsx","pages/Private/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nexport const CheckmarkWrap = styled.div`\n  box-sizing: border-box;\n  height: 258.39px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst strokeAnimation = keyframes`\n  100% {\n    stroke-dashoffset: 0;\n  }\n`;\n\nconst fillAnimation = keyframes`\n  100% {\n    box-shadow: inset 0px 0px 0px 30px #ffffff0;\n  }\n`;\n\nconst scaleAnimation = keyframes`\n  0%, 100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n`;\n\nexport const Circle = styled.circle`\n  stroke-dasharray: 332;\n  stroke-dashoffset: 332;\n  stroke-width: 4;\n  stroke-miterlimit: 10;\n  stroke: green;\n  fill: none;\n  animation: ${strokeAnimation} 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n`;\n\nexport const Svg = styled.svg`\n  display: block;\n  width: 112px;\n  height: 112px;\n  border-radius: 50%;\n  display: block;\n  stroke-width: 4;\n  stroke: green;\n  stroke-miterlimit: 10;\n  margin: 10% auto;\n  box-shadow: inset 0px 0px 0px #7ac142;\n  animation: ${fillAnimation} 0.4s ease-in-out 0.4s forwards,\n    ${scaleAnimation} 0.3s ease-in-out 0.9s both;\n`;\n\nexport const Path = styled.path`\n  transform-origin: 50% 50%;\n  stroke-dasharray: 96;\n  stroke-dashoffset: 96;\n  animation: ${strokeAnimation} 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s\n    forwards;\n`;\n","import styled from 'styled-components';\n\nexport const MonthCalendarHeadStyles = styled.div`\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    max-width: 1065px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n  }\n`;\n\nexport const MobileDaysList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  /* width: 100%; */\n  height: 50px;\n  margin-bottom: 14px;\n  padding: 16px 16px;\n  border: 1px solid ${({ bordercolor }) => bordercolor};\n  border-radius: 8px;\n  background-color: ${({ bgcolor }) => bgcolor};\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const DesktopDayList = styled.ul`\n  display: none;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    /* gap: 62px; */\n    /* width: 100%; */\n    height: 46px;\n    margin-bottom: 18px;\n    padding: 14px 40px;\n    border: 1px solid ${({ bordercolor }) => bordercolor};\n    border-radius: 8px;\n    background-color: ${({ bgcolor }) => bgcolor};\n\n    @media screen and (min-width: 1440px) {\n      /* gap: 122px; */\n      height: 46px;\n      margin-bottom: 15px;\n      padding: 14px 60px;\n    }\n  }\n`;\n\nexport const WorkDay = styled.li`\n  /* width: calc(100% / 7); */\n  color: ${({ color }) => color};\n  font-family: Inter;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: calc(18 / 16);\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const WeekendDay = styled(WorkDay)`\n  color: #3e85f3;\n`;\n","import {\n  MonthCalendarHeadStyles,\n  WorkDay,\n  WeekendDay,\n  MobileDaysList,\n  DesktopDayList,\n} from './CalendarHead.styled';\n\nconst workDayNames = ['MON', 'TUE', 'WED', 'THU', 'FRI'];\nconst weekendDayNames = ['SAT', 'SUN'];\n\nconst CalendarHead = ({ theme }) => {\n  return (\n    <MonthCalendarHeadStyles>\n      <DesktopDayList\n        bordercolor={\n          theme === 'dark'\n            ? 'rgba(255, 255, 255, 0.15)'\n            : 'rgba(220, 227, 229, 0.80)'\n        }\n        bgcolor={theme === 'dark' ? '#21222c' : '#ffffff'}\n      >\n        {workDayNames.map(day => (\n          <WorkDay key={day} color={theme === 'dark' ? '#ffffff' : '#343434'}>\n            {day}\n          </WorkDay>\n        ))}\n        {weekendDayNames.map(day => (\n          <WeekendDay key={day}>{day}</WeekendDay>\n        ))}\n      </DesktopDayList>\n\n      <MobileDaysList\n        bordercolor={\n          theme === 'dark'\n            ? 'rgba(255, 255, 255, 0.15)'\n            : 'rgba(220, 227, 229, 0.80)'\n        }\n        bgcolor={theme === 'dark' ? '#21222c' : '#ffffff'}\n      >\n        {workDayNames.map(day => (\n          <WorkDay key={day} color={theme === 'dark' ? '#ffffff' : '#343434'}>\n            {day.slice(0, 1)}\n          </WorkDay>\n        ))}\n        {weekendDayNames.map(day => (\n          <WeekendDay key={day}>{day.slice(0, 1)}</WeekendDay>\n        ))}\n      </MobileDaysList>\n    </MonthCalendarHeadStyles>\n  );\n};\n\nexport default CalendarHead;\n","// import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { selectIsLoading, selectTasks } from 'redux/task/taskSelectors';\n\nimport Loader from 'components/Loader';\n// import TaskModal from 'components/TaskModal/TaskModal';\nimport { renderCalendar } from 'utils/calendar';\n\nimport { GridWrapper } from './CalendarTable.styled';\n\nconst CalendarTable = ({ theme }) => {\n  const { currentDate } = useParams();\n  const isLoading = useSelector(selectIsLoading);\n  const tasksList = useSelector(selectTasks);\n\n  // let taskToEdit = null;\n\n  const handleClick = task => {\n    // taskToEdit = task;\n    // console.log(taskToEdit);\n  };\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <GridWrapper\n      bordercolor={\n        theme === 'dark'\n          ? 'rgba(255, 255, 255, 0.15)'\n          : 'rgba(220, 227, 229, 0.80)'\n      }\n      bgcolor={theme === 'dark' ? '#21222c' : '#ffffff'}\n    >\n      {renderCalendar({\n        isLoading,\n        currentDate,\n        tasksList,\n        theme,\n        handleClick,\n      })}\n\n      {/* {showModal && (\n        <TaskModal\n          task={taskToEdit}\n          closeModal={closeModal}\n          deleteTask={deleteTask}\n        />\n      )} */}\n    </GridWrapper>\n  );\n};\n\nexport default CalendarTable;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* height: 100vh; */\n`;\n","import CalendarHead from './CalendarHead';\nimport CalendarTable from './CalendarTable';\nimport { Container } from './ChoosedMonth.styled';\n\nconst ChoosedMonth = ({ theme }) => {\n  return (\n    <Container>\n      <CalendarHead theme={theme} />\n      <CalendarTable theme={theme} />\n    </Container>\n  );\n};\n\nexport default ChoosedMonth;\n","import styled from 'styled-components';\n\nconst sectionBgColor = {\n  dark: '#171820',\n  light: '#F7F6F9',\n};\n\nexport const StyledChoosedDay = styled.div`\n  /* padding: 24px 20px 20px; */\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* overflow-x: auto; */\n\n  /* height: 100%; */\n  /* height: 600px; */\n\n  background: ${({ theme }) => sectionBgColor[theme]};\n\n  @media screen and (min-width: 768px) {\n    /* padding: 24px 32px 18px; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    /* padding: 32px 32px 18px; */\n  }\n\n  .DayCalendarHead {\n    margin-bottom: 16px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnsContainer = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  @media screen and (min-width: 768px) {\n    max-width: 1065px;\n    overflow-x: auto;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n  }\n`;\n\nexport const StyledTasksColumnsList = styled.div`\n  display: flex;\n  column-gap: 20px;\n  /* flex-wrap: wrap; */\n  /* width: 100%; */\n  width: 335px;\n  /* overflow-x: auto; */\n\n  @media screen and (min-width: 768px) {\n    /* width: 100%; */\n    column-gap: 16px;\n    /* overflow-x: auto; */\n  }\n\n  @media screen and (min-width: 1440px) {\n    column-gap: 16px;\n    /* width: 1086px; */\n  }\n`;\n","import styled from 'styled-components';\n\nconst elementBorderColor = {\n  dark: 'rgba(255, 255, 255, 0.15)',\n  light: 'rgba(220, 227, 229, 0.80)',\n};\n\nconst elementBgColor = {\n  dark: '#21222c',\n  light: '#ffffff',\n};\n\nexport const StyledTasksColumnItem = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 18px 18px 20px;\n  width: 335px;\n  min-height: 155px;\n  height: 100%;\n\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => elementBorderColor[theme]};\n  background-color: ${({ theme }) => elementBgColor[theme]};\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 20px 20px;\n    min-width: 344px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n\n  .columnHeadBar {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 28px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst textColor = {\n  dark: '#FFFFFF',\n  light: '#111111',\n};\nconst elementBgColor = {\n  dark: '#21222c',\n  light: '#ffffff',\n};\n\nexport const StyledColumnHeadBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 34px;\n\n  @media screen and (min-width: 768px) {\n    height: 38px;\n  }\n\n  & h3 {\n    margin: 0;\n\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: calc(20 / 18); /* 111.111% */\n\n    color: ${({ theme }) => textColor[theme]};\n\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      line-height: calc(24 / 20); /* 120% */\n    }\n  }\n\n  & button {\n    padding: 0;\n\n    line-height: 0;\n    border-radius: 50%;\n    border: none;\n\n    color: ${({ theme }) => textColor[theme]};\n    background-color: ${({ theme }) => elementBgColor[theme]};\n  }\n\n  & button:hover {\n    color: #2b78ef;\n  }\n\n  & svg {\n    width: 22px;\n    height: 22px;\n    stroke: currentColor;\n    fill: ${({ theme }) => elementBgColor[theme]};\n\n    @media screen and (min-width: 768px) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const DeleteBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelBtn = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n  margin-bottom: 14px;\n`;\n\nexport const TextDiv = styled.div`\n  margin-top: 14px;\n  margin-bottom: 14px;\n  text-align: center;\n  color: #343434;\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n`;\n","const { Path, Circle, Svg, CheckmarkWrap } = require('./Checkmark.styled');\n\nconst Checkmark = () => {\n  return (\n    <CheckmarkWrap>\n      <Svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 104 104\"\n        width=\"104\"\n        height=\"104\"\n      >\n        <Circle cx=\"52\" cy=\"52\" r=\"50\" fill=\"none\" />\n        <Path fill=\"none\" d=\"M28.2 54.2l14.2 14.4 33.4-33.6\" />\n      </Svg>\n    </CheckmarkWrap>\n  );\n};\n\nexport default Checkmark;\n","import { DeleteBtn, CancelBtn, BtnWrapper, TextDiv } from './DeleteForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport sprite from '../Pictures/sprite.svg';\nimport { deleteTask } from 'redux/task/taskOperations';\nimport Checkmark from 'components/TaskForm/Checkmark/Checkmark';\nimport { useState } from 'react';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst DeleteForm = ({ task, closeModal }) => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const removeTask = () => {\n    setIsSubmitted(true);\n    setTimeout(() => closeModal(), 1500);\n    setTimeout(() => dispatch(deleteTask(task._id)), 1500);\n  };\n  return (\n    <>\n      {isSubmitted ? (\n        <Checkmark />\n      ) : (\n        <>\n          <TextDiv\n            style={theme === 'dark' ? { color: '#fff' } : { color: '#000' }}\n          >\n            Do you want to delete the task?\n          </TextDiv>\n          <BtnWrapper>\n            <DeleteBtn onClick={removeTask}>\n              <svg width=\"18\" height=\"18\" style={{ marginRight: 8 }}>\n                <use href={sprite + '#trashbin'}></use>\n              </svg>\n              Delete\n            </DeleteBtn>\n            <CancelBtn onClick={closeModal}>Cancel</CancelBtn>\n          </BtnWrapper>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DeleteForm;\n","import styled from '@emotion/styled/macro';\nimport { Field, Form } from 'formik';\n// import { keyframes } from 'styled-components';\n\nconst styledForm = Form;\nconst styledField = Field;\nconst styledRadio = Field;\n\nexport const FormContainer = styled.div`\n  box-sizing: border-box;\n  padding: 0 10px 26px 10px;\n  background-color: ${({ bg }) => bg || '#fff'};\n`;\n\nexport const FormElement = styled(styledForm)``;\n\nexport const FormLabel = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  color: rgba(52, 52, 52, 0.8);\n  font-size: 12px;\n  line-height: 1.16;\n  font-family: Inter;\n`;\n\nexport const FormField = styled(styledField)`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 0;\n  margin-bottom: 16px;\n  padding: 14px 18px;\n  /* background: #f6f6f6;\n  color: #343434; */\n  background-color: ${({ bg }) => bg || '#f6f6f6'};\n  color: ${({ color }) => color || '#343434'};\n\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  width: 100%;\n\n  &:focus {\n    outline: none;\n    border: 0;\n  }\n\n  &::placeholder {\n    color: ${({ color }) => color || '#FFFFFF'};\n  }\n`;\n\nexport const TimeInput = styled(styledField)`\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 0;\n  margin-bottom: 16px;\n  padding: 14px 18px;\n  /* background: #f6f6f6;\n  color: #343434; */\n\n  background-color: ${({ bg }) => bg || '#F6F6F6'};\n  color: ${({ color }) => color || '#343434'};\n  border: ${({ color }) => color || 'white'};\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  max-width: 126px;\n\n  &:focus {\n    outline: none;\n    border: 0;\n  }\n\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n\n  &::placeholder {\n    color: #343434;\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 163px;\n  }\n`;\n\nexport const TimeWrapper = styled.div`\n  display: flex;\n  column-gap: 15px;\n  position: relative;\n`;\n\nexport const TimeFieldWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const RadioBtn = styled(styledRadio)`\n  opacity: 0;\n  pointer-events: none;\n`;\n\nexport const CustomRadioBtn = styled.span`\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: white;\n  cursor: pointer;\n  left: 1.3px;\n  top: 3.3px;\n  z-index: 3;\n\n  &::after {\n    content: '';\n    width: 8px;\n    height: 8px;\n    position: absolute;\n    border-radius: 50%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    transition: opacity 0.2s;\n    z-index: 2;\n  }\n`;\n\nexport const LowPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #72c2f8;\n  }\n`;\n\nexport const MidPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #f3b249;\n  }\n`;\n\nexport const HighPrioBtn = styled(CustomRadioBtn)`\n  &::after {\n    content: '';\n    background: #ea3d65;\n  }\n`;\n\nexport const PriorityWrapper = styled.div`\n  display: flex;\n  column-gap: 16px;\n  margin-bottom: 32px;\n`;\n\nexport const RadioLabel = styled.label`\n  color: #343434;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.16;\n  font-family: Inter;\n  position: relative;\n  cursor: pointer;\n`;\n\nexport const CheckedRadioBtnBlue = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: rgba(114, 194, 248, 0.5);\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const CheckedRadioBtnYellow = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #f3b24988;\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const CheckedRadioBtnRed = styled.span`\n  position: absolute;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: #ea3d658b;\n  cursor: pointer;\n  left: 0;\n  top: 2px;\n  z-index: 3;\n  opacity: 0;\n`;\n\nexport const RadioLabelStyled = styled(RadioLabel)`\n  & ${RadioBtn}:checked + ${CheckedRadioBtnRed} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n  & ${RadioBtn}:checked + ${CheckedRadioBtnBlue} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n  & ${RadioBtn}:checked + ${CheckedRadioBtnYellow} {\n    opacity: 1;\n    transition: opacity 0.2s;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  column-gap: 14px;\n`;\n\nexport const AddTaskButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #3e85f3;\n  border-radius: 8px;\n  padding: 10px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.17;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    background: #2b78ef;\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: background-color box-shadow 0.2s;\n  }\n`;\n\nexport const CancelButton = styled.button`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #efefef;\n  border-radius: 8px;\n  padding: 10px;\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border: 0;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    transition: box-shadow 0.2s;\n  }\n`;\n\nexport const Error = styled.p`\n  font-family: Inter;\n  font-size: 10px;\n  font-weight: 400;\n  color: red;\n  position: absolute;\n  width: 400px;\n  bottom: 5px;\n  left: 2px;\n`;\n\nexport const BoxInput = styled.div`\n  position: relative;\n`;\n\nexport const StyledSVG = styled.svg`\n  display: inline-block;\n  margin-right: 8px;\n  width: 18px;\n  height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const StyledEditBtn = styled.svg`\n  text-align: center;\n  margin-right: 8px;\n  width: 16px;\n  height: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const BtnTxt = styled.span`\n  display: inline-block;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  AddTaskButton,\n  BoxInput,\n  BtnTxt,\n  BtnWrapper,\n  CancelButton,\n  CheckedRadioBtnBlue,\n  CheckedRadioBtnRed,\n  CheckedRadioBtnYellow,\n  Error,\n  FormContainer,\n  FormElement,\n  FormField,\n  FormLabel,\n  HighPrioBtn,\n  LowPrioBtn,\n  MidPrioBtn,\n  PriorityWrapper,\n  RadioBtn,\n  RadioLabelStyled,\n  StyledEditBtn,\n  StyledSVG,\n  TimeFieldWrap,\n  TimeInput,\n  TimeWrapper,\n} from './TaskForm.styled';\nimport sprite from '../Pictures/sprite.svg';\nimport { editTask, addTask } from '../../redux/task/taskOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsError } from 'redux/task/taskSelectors';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport Checkmark from './Checkmark/Checkmark';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst TaskForm = ({ closeModal, task }) => {\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const error = useSelector(selectIsError);\n  const { title, start, end, priority } = task;\n  const theme = useSelector(selectTheme);\n\n  useEffect(() => {}, [error]);\n\n  let taskSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(2, 'Task name too short')\n      .max(60, 'Task name too long.')\n      .required('Task name is required'),\n    start: Yup.string().required('Start time is required'),\n    end: Yup.string()\n      .required('End time is required')\n      .test(\n        'is-greater',\n        'End time must be greater than start time',\n        function (end) {\n          const start = this.parent.start;\n          return !start || !end || start < end;\n        }\n      ),\n    priority: Yup.string()\n      .oneOf(['low', 'medium', 'high'])\n      .required('Priority is required'),\n  });\n\n  const onTaskSubmit = async values => {\n    const newTask = { ...task, ...values };\n    task._id ? dispatch(editTask(newTask)) : dispatch(addTask(newTask));\n    setIsSubmitted(true);\n    setTimeout(() => closeModal(), 1500);\n  };\n\n  return (\n    <FormContainer bg={theme !== 'dark' ? '#fff' : 'var(--color-theme-dark)'}>\n      {!isSubmitted && (\n        <Formik\n          initialValues={\n            task._id\n              ? { title, start, end, priority }\n              : { title: '', start: '09:00', end: '10:00', priority: 'low' }\n          }\n          validationSchema={taskSchema}\n          onSubmit={async values => {\n            onTaskSubmit(values);\n          }}\n        >\n          {({ values, errors, touched }) => {\n            return (\n              <FormElement>\n                <FormLabel\n                  htmlFor=\"title\"\n                  style={\n                    theme === 'dark'\n                      ? { color: 'rgba(250, 250, 250, 0.30)' }\n                      : { color: 'rgba(52, 52, 52, 0.8)' }\n                  }\n                >\n                  Title\n                </FormLabel>\n                <BoxInput>\n                  <FormField\n                    bg={\n                      theme !== 'dark' ? '#f6f6f6' : 'var(--color-theme-dark)'\n                    }\n                    color={theme === 'dark' ? '#fff' : '#343434'}\n                    style={{\n                      border:\n                        errors.title && touched.title\n                          ? '1px solid red'\n                          : theme === 'dark'\n                          ? '1px solid rgba(52, 52, 52, 0.8)'\n                          : '1px solid #FFF',\n                    }}\n                    id=\"title\"\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Enter text\"\n                  />\n                  {errors.title && touched.title ? (\n                    <Error>{errors.title}</Error>\n                  ) : null}\n                </BoxInput>\n                <TimeWrapper>\n                  <TimeFieldWrap>\n                    <FormLabel\n                      htmlFor=\"start\"\n                      style={\n                        theme === 'dark'\n                          ? { color: 'rgba(250, 250, 250, 0.30)' }\n                          : { color: 'rgba(52, 52, 52, 0.8)' }\n                      }\n                    >\n                      Start\n                    </FormLabel>\n                    <TimeInput\n                      bg={\n                        theme !== 'dark' ? '#f6f6f6' : 'var(--color-theme-dark)'\n                      }\n                      color={theme === 'dark' ? '#fff' : '#343434'}\n                      style={{\n                        border:\n                          errors.start && touched.start\n                            ? '1px solid red'\n                            : theme === 'dark'\n                            ? '1px solid rgba(52, 52, 52, 0.8)'\n                            : '1px solid #FFF',\n                      }}\n                      id=\"start\"\n                      type=\"time\"\n                      step=\"60\"\n                      name=\"start\"\n                    ></TimeInput>\n                    {errors.start && touched.start ? (\n                      <Error>{errors.start}</Error>\n                    ) : null}\n                    {!errors.start && errors.end && touched.end ? (\n                      <Error>{errors.end}</Error>\n                    ) : null}\n                  </TimeFieldWrap>\n                  <TimeFieldWrap>\n                    <FormLabel\n                      htmlFor=\"end\"\n                      style={\n                        theme === 'dark'\n                          ? { color: 'rgba(250, 250, 250, 0.30)' }\n                          : { color: 'rgba(52, 52, 52, 0.8)' }\n                      }\n                    >\n                      End\n                    </FormLabel>\n                    <TimeInput\n                      bg={\n                        theme !== 'dark' ? '#f6f6f6' : 'var(--color-theme-dark)'\n                      }\n                      color={theme === 'dark' ? '#fff' : '#343434'}\n                      id=\"end\"\n                      type=\"time\"\n                      name=\"end\"\n                      style={{\n                        border:\n                          errors.end && touched.end\n                            ? '1px solid red'\n                            : theme === 'dark'\n                            ? '1px solid rgba(52, 52, 52, 0.8)'\n                            : '1px solid #FFF',\n                      }}\n                    ></TimeInput>\n                  </TimeFieldWrap>\n                </TimeWrapper>\n                <PriorityWrapper role=\"group\" id=\"priority-group\">\n                  <RadioLabelStyled\n                    style={\n                      theme === 'dark'\n                        ? { color: '#FFF' }\n                        : { color: 'rgba(52, 52, 52, 0.8)' }\n                    }\n                  >\n                    <RadioBtn type=\"radio\" name=\"priority\" value=\"low\" />\n                    <CheckedRadioBtnBlue />\n                    <LowPrioBtn\n                      style={\n                        theme === 'dark'\n                          ? { backgroundColor: '#000000' }\n                          : { backgroundColor: '#FFF' }\n                      }\n                    />\n                    Low\n                  </RadioLabelStyled>\n                  <RadioLabelStyled\n                    style={\n                      theme === 'dark'\n                        ? { color: '#FFF' }\n                        : { color: 'rgba(52, 52, 52, 0.8)' }\n                    }\n                  >\n                    <RadioBtn\n                      type=\"radio\"\n                      name=\"priority\"\n                      value=\"medium\"\n                    ></RadioBtn>\n                    <CheckedRadioBtnYellow />\n                    <MidPrioBtn\n                      style={\n                        theme === 'dark'\n                          ? { backgroundColor: '#000000' }\n                          : { backgroundColor: '#FFF' }\n                      }\n                    />{' '}\n                    Medium\n                  </RadioLabelStyled>\n                  <RadioLabelStyled\n                    style={\n                      theme === 'dark'\n                        ? { color: '#FFF' }\n                        : { color: 'rgba(52, 52, 52, 0.8)' }\n                    }\n                  >\n                    <RadioBtn\n                      type=\"radio\"\n                      name=\"priority\"\n                      value=\"high\"\n                    ></RadioBtn>\n                    <CheckedRadioBtnRed />\n                    <HighPrioBtn\n                      style={\n                        theme === 'dark'\n                          ? { backgroundColor: '#000000' }\n                          : { backgroundColor: '#FFF' }\n                      }\n                    />{' '}\n                    High\n                  </RadioLabelStyled>\n                </PriorityWrapper>\n                <BtnWrapper>\n                  <AddTaskButton type=\"submit\">\n                    {task._id ? (\n                      <StyledEditBtn style={{ marginRight: 8 }}>\n                        <use href={sprite + '#edit-btn'}></use>\n                      </StyledEditBtn>\n                    ) : (\n                      <StyledSVG>\n                        <use href={sprite + '#plus-btn'}></use>\n                      </StyledSVG>\n                    )}\n                    {task._id ? 'Edit' : <BtnTxt>Add</BtnTxt>}\n                  </AddTaskButton>\n                  <CancelButton onClick={closeModal}>Cancel</CancelButton>\n                </BtnWrapper>\n              </FormElement>\n            );\n          }}\n        </Formik>\n      )}\n      {isSubmitted ? <Checkmark /> : null}\n    </FormContainer>\n  );\n};\n\nexport default TaskForm;\n","import DeleteForm from 'components/DeleteForm/DeleteForm';\nimport Modal from 'components/Modal/Modal';\nimport TaskForm from 'components/TaskForm/TaskForm';\n\nimport { createPortal } from 'react-dom';\n\nconst TaskModal = ({ task, closeModal, deleteTask }) => {\n  return createPortal(\n    <Modal closeModal={closeModal}>\n      {deleteTask ? (\n        <DeleteForm closeModal={closeModal} task={task}></DeleteForm>\n      ) : (\n        <TaskForm closeModal={closeModal} task={task}></TaskForm>\n      )}\n    </Modal>,\n    document.body\n  );\n};\n\nexport default TaskModal;\n","import { useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport { StyledColumnHeadBar } from './ColumnHeadBar.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\n// import { ReactComponent as PlusCircleLogo } from '../../../Pictures/plus-circle.svg';\nimport sprite from 'components/Pictures/sprite.svg';\nimport { useTheme } from 'styled-components';\n\nconst ColumnHeadBar = ({ title, category }) => {\n  const [showModal, setShowModal] = useState(false);\n  const { currentDate } = useParams();\n\n  const handleClick = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  const { theme } = useTheme();\n  return (\n    <>\n      <StyledColumnHeadBar className=\"columnHeadBar\" theme={theme}>\n        <h3>{title}</h3>\n        <button onClick={handleClick} aria-label=\"add task\" type=\"button\">\n          <svg>\n            <use href={sprite + '#icon-plus-circle'}></use>\n          </svg>\n          {/* <PlusCircleLogo /> */}\n        </button>\n      </StyledColumnHeadBar>\n\n      {showModal && (\n        <TaskModal\n          task={{ category, date: currentDate }}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ColumnHeadBar;\n","import styled from 'styled-components';\n\nexport const StyledColumnTasksList = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px;\n  overflow: auto;\n\n  @media screen and (min-width: 768px) {\n    row-gap: 18px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n`;\n","import styled from 'styled-components';\n\nconst sectionBgColor = {\n  dark: '#171820',\n  light: '#F7F6F9',\n};\n\nconst sectionBorderColor = {\n  dark: 'rgba(255, 255, 255, 0.15)',\n  light: 'rgba(220, 227, 229, 0.80);',\n};\n\nconst textColor = {\n  dark: '#FFFFFF',\n  light: '#111111',\n};\n\nexport const StyledTaskColumnCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 14px 14px 18px;\n\n  min-height: 108px;\n\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => sectionBorderColor[theme]};\n  background-color: ${({ theme }) => sectionBgColor[theme]};\n\n  & .title,\n  .time {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    color: ${({ theme }) => textColor[theme]};\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285; /* 128.571% */\n  }\n\n  & .time {\n    text-align: center;\n  }\n\n  & .time span:first-child {\n    margin-right: 5px;\n  }\n  & .time span:last-child {\n    margin-left: 5px;\n  }\n`;\n","import styled from 'styled-components';\n\nconst textColor = {\n  dark: '#FFFFFF',\n  light: '#111111',\n};\n\nconst sectionBgColor = {\n  dark: '#171820',\n  light: '#F7F6F9',\n};\n\nconst priorityColors = {\n  low: '#72C2F8',\n  medium: '#F3B249',\n  high: '#EA3D65',\n};\n\nexport const StyledTaskToolbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n\n  & .infoWrapper {\n    display: flex;\n    align-items: end;\n  }\n\n  & .imgWrapper {\n    overflow: hidden;\n    margin-right: 8px;\n\n    width: 32px;\n    height: 32px;\n\n    border-radius: 50%;\n    border: 1.8px solid #3e85f3;\n    /* background: url(<path-to-image>), lightgray 50% / cover no-repeat; */\n\n    & img {\n      margin-left: -1px;\n      margin-top: -1px;\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  & span {\n    padding: 4px 12px;\n\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 600;\n    line-height: calc(12 / 10); /* 120% */\n\n    border-radius: 4px;\n    color: ${({ theme }) => (theme === 'dark' ? '#111111' : '#FFFFFF')};\n    background-color: ${({ priority }) => priorityColors[priority]};\n  }\n\n  .controlsWrapper {\n    line-height: 0;\n  }\n  & button {\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: ${({ theme }) => textColor[theme]};\n    background-color: ${({ theme }) => sectionBgColor[theme]};\n  }\n\n  & button:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  & button:hover {\n    color: #2b78ef;\n  }\n\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: ${({ theme }) => sectionBgColor[theme]};\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst textColor = {\n  dark: '#FFFFFF',\n  light: '#111111',\n};\n\nconst elementBorderColor = {\n  dark: 'rgba(255, 255, 255, 0.15)',\n  light: 'rgba(220, 227, 229, 0.80)',\n};\n\nconst elementBgColor = {\n  dark: '#21222c',\n  light: '#ffffff',\n};\n\nexport const StyledCategoryModal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  /* background-color: rgba(0, 0, 0, 0.8); */\n\n  & .modal {\n    position: absolute;\n    top: ${({ coords }) => coords.clientY + 15 + 'px'};\n    left: ${({ coords }) => coords.clientX - 40 + 'px'};\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    padding: 0 12px;\n\n    width: 148px;\n    height: 90px;\n\n    border-radius: 8px;\n    background: ${({ theme }) => elementBgColor[theme]};\n    box-shadow: 0px 4px 16px 0px ${({ theme }) => elementBorderColor[theme]};\n  }\n\n  & button {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 12px 12px;\n\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: calc(18 / 14); /* 128.571% */\n\n    color: ${({ theme }) => textColor[theme]};\n    border: none;\n    background-color: ${({ theme }) => elementBgColor[theme]};\n  }\n\n  & button:hover {\n    color: #2b78ef;\n  }\n\n  & button span {\n    line-height: 0;\n  }\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: ${({ theme }) => elementBgColor[theme]};\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import sprite from 'components/Pictures/sprite.svg';\n\nconst CategoryButton = ({ category, title, changeCategory }) => {\n  return (\n    <button\n      onClick={() => changeCategory(category)}\n      aria-label=\"change task category\"\n      type=\"button\"\n    >\n      {title}\n      <span>\n        <svg>\n          <use href={sprite + '#arrow-circle-broken-right'}></use>\n        </svg>\n      </span>\n    </button>\n  );\n};\n\nexport default CategoryButton;\n","export const CATEGORY_LIST = ['to-do', 'in-progress', 'done'];\n","export const filterDayTasks = (monthTasks, day) => {\n  return monthTasks.filter(task => task.date.slice(-2) === day);\n};\n\nexport const CreateSortedTasks = (categories, tasks) => {\n  const obj = {};\n  categories.forEach(cat => (obj[cat] = []));\n  tasks.forEach(task => obj[task.category].push(task));\n  return obj;\n};\n\nexport const parseCategoryTitle = category => {\n  const capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\n\n  return capitalize(category).replace('-', ' ');\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { StyledCategoryModal } from './CategoryModal.styled';\nimport CategoryButton from './CategoryButton/CategoryButton';\n\nimport { editTask } from 'redux/task/taskOperations';\nimport { selectIsError } from 'redux/task/taskSelectors';\nimport { CATEGORY_LIST } from 'constants/categoryList';\nimport { parseCategoryTitle } from 'helpers/helpers';\nimport { useTheme } from 'styled-components';\n\nconst CategoryModal = ({ task, coords, closeModal }) => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectIsError);\n\n  const variants = CATEGORY_LIST.filter(cat => cat !== task.category);\n\n  const handleOverlayClick = e => {\n    if (e.currentTarget === e.target) closeModal();\n  };\n\n  const changeCategory = category => {\n    dispatch(editTask({ ...task, category }));\n    !error && closeModal();\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') closeModal();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [closeModal]);\n\n  const { theme } = useTheme();\n  return createPortal(\n    <StyledCategoryModal\n      coords={coords}\n      onClick={handleOverlayClick}\n      theme={theme}\n    >\n      <div className=\"modal\">\n        {variants.map(variant => (\n          <CategoryButton\n            key={variant}\n            category={variant}\n            title={parseCategoryTitle(variant)}\n            changeCategory={changeCategory}\n          />\n        ))}\n      </div>\n    </StyledCategoryModal>,\n    document.body\n  );\n};\n\nexport default CategoryModal;\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { StyledTaskToolbar } from './TaskToolbar.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\nimport CategoryModal from './CategoryModal/CategoryModal';\n\nimport { selectUser } from 'redux/auth/authSelectors';\nimport sprite from 'components/Pictures/sprite.svg';\nimport { useTheme } from 'styled-components';\n\nconst TaskToolbar = ({ task }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteTask, setDeleteTask] = useState(false);\n  const [categoryModal, setCategoryModal] = useState({\n    isOpen: false,\n    coords: null,\n  });\n\n  const user = useSelector(selectUser);\n  const { avatarURL, name } = user;\n  const { priority } = task;\n\n  const handleClick = ({ clientX, clientY }) => {\n    setCategoryModal({\n      isOpen: true,\n      coords: { clientX, clientY },\n    });\n  };\n\n  const closeCategoryModal = () => {\n    setCategoryModal({\n      isOpen: false,\n      coords: null,\n    });\n  };\n\n  const onEditClick = () => {\n    setShowModal(true);\n  };\n\n  const onDeleteClick = () => {\n    setShowModal(true);\n    setDeleteTask(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    setDeleteTask(false);\n  };\n\n  const { theme } = useTheme();\n  return (\n    <>\n      <StyledTaskToolbar\n        className=\"taskToolbar\"\n        priority={priority}\n        theme={theme}\n      >\n        <div className=\"infoWrapper\">\n          <div className=\"imgWrapper\">\n            <img src={avatarURL} alt={name} />\n          </div>\n          <span>{priority}</span>\n        </div>\n        <div className=\"controlsWrapper\">\n          <button\n            onClick={handleClick}\n            aria-label=\"change task category\"\n            type=\"button\"\n          >\n            <svg>\n              <use href={sprite + '#arrow-circle-broken-right'}></use>\n            </svg>\n          </button>\n          <button onClick={onEditClick} aria-label=\"edit task\" type=\"button\">\n            <svg>\n              <use href={sprite + '#icon-pencil'}></use>\n            </svg>\n          </button>\n          <button\n            onClick={onDeleteClick}\n            aria-label=\"delete task\"\n            type=\"button\"\n          >\n            <svg>\n              <use href={sprite + '#icon-trash'}></use>\n            </svg>\n          </button>\n        </div>\n      </StyledTaskToolbar>\n\n      {showModal && (\n        <TaskModal\n          task={task}\n          closeModal={closeModal}\n          deleteTask={deleteTask}\n        />\n      )}\n\n      {categoryModal.isOpen && (\n        <CategoryModal\n          task={task}\n          coords={categoryModal.coords}\n          closeModal={closeCategoryModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default TaskToolbar;\n","import { useTheme } from 'styled-components';\nimport { StyledTaskColumnCard } from './TaskColumnCard.styled';\nimport TaskToolbar from './TaskToolbar/TaskToolbar';\n\nconst TaskColumnCard = ({ task }) => {\n  const { theme } = useTheme();\n  return (\n    <StyledTaskColumnCard theme={theme}>\n      <p className=\"title\">{task.title}</p>\n      <p className=\"time\">\n        <span>{task.start}</span>-<span>{task.end}</span>\n      </p>\n      <TaskToolbar task={task} />\n    </StyledTaskColumnCard>\n  );\n};\n\nexport default TaskColumnCard;\n","import { StyledColumnTasksList } from './ColumnTasksList.styled';\nimport TaskColumnCard from './TaskColumnCard/TaskColumnCard';\n\nconst ColumnTasksList = ({ tasks }) => {\n  return (\n    <StyledColumnTasksList className=\"ColumnTasksList\">\n      {tasks.map(task => (\n        <TaskColumnCard key={task._id} task={task} />\n      ))}\n    </StyledColumnTasksList>\n  );\n};\n\nexport default ColumnTasksList;\n","import styled from 'styled-components';\n\nconst textColor = {\n  dark: '#FFFFFF',\n  light: '#111111',\n};\n\nconst bgColor = {\n  dark: '#3E85F3',\n  light: '#E3F3FF',\n};\n\nexport const StyledAddTaskBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 299px;\n  height: 48px;\n  padding: 16px 20px;\n\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n\n  font-family: Inter;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: calc(18 / 14); /* 128.571% */\n\n  color: ${({ theme }) => textColor[theme]};\n  background-color: ${({ theme }) => bgColor[theme]};\n\n  & span {\n    line-height: 0;\n    margin-right: 8px;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: currentColor;\n    /* fill: white; */\n  }\n\n  &:hover {\n    color: white;\n    border: 1px solid #2b78ef;\n    background-color: #2b78ef;\n  }\n`;\n","import { useState } from 'react';\nimport { useParams } from 'react-router';\n\nimport { StyledAddTaskBtn } from './AddTaskBtn.styled';\nimport TaskModal from 'components/TaskModal/TaskModal';\nimport sprite from 'components/Pictures/sprite.svg';\nimport { useTheme } from 'styled-components';\n\nconst AddTaskBtn = ({ category }) => {\n  const [showModal, setShowModal] = useState(false);\n  const { currentDate } = useParams();\n\n  const handleClick = () => setShowModal(true);\n  const closeModal = () => setShowModal(false);\n\n  const { theme } = useTheme();\n  return (\n    <>\n      <StyledAddTaskBtn\n        aria-label=\"add task\"\n        onClick={handleClick}\n        theme={theme}\n      >\n        <span>\n          <svg>\n            <use href={sprite + '#icon-plus'}></use>\n          </svg>\n        </span>\n        Add task\n      </StyledAddTaskBtn>\n\n      {showModal && (\n        <TaskModal\n          task={{ category, date: currentDate }}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default AddTaskBtn;\n","import { StyledTasksColumnItem } from './TasksColumnItem.styled';\nimport ColumnHeadBar from './ColumnHeadBar/ColumnHeadBar';\nimport ColumnTasksList from './ColumnTasksList/ColumnTasksList';\nimport AddTaskBtn from './AddTaskBtn/AddTaskBtn';\nimport { useTheme } from 'styled-components';\n\nconst TasksColumnItem = ({ title, tasks, category }) => {\n  const { theme } = useTheme();\n  return (\n    <StyledTasksColumnItem className=\"tasksColumnItem\" theme={theme}>\n      <ColumnHeadBar title={title} category={category} />\n      {tasks.length > 0 && <ColumnTasksList tasks={tasks} />}\n      <AddTaskBtn category={category} />\n    </StyledTasksColumnItem>\n  );\n};\n\nexport default TasksColumnItem;\n","import {\n  StyledTasksColumnsContainer,\n  StyledTasksColumnsList,\n} from './TasksColumnsList.styled';\nimport TasksColumnItem from '../TasksColumnItem/TasksColumnItem';\n\nimport { parseCategoryTitle } from 'helpers/helpers';\nimport { CATEGORY_LIST } from 'constants/categoryList';\n\nconst TasksColumnsList = ({ sortedTasks }) => {\n  return (\n    <StyledTasksColumnsContainer>\n      <StyledTasksColumnsList className=\"TasksColumnsList\">\n        {CATEGORY_LIST.map(category => (\n          <TasksColumnItem\n            key={category}\n            title={parseCategoryTitle(category)}\n            category={category}\n            tasks={sortedTasks[category]}\n          />\n        ))}\n      </StyledTasksColumnsList>\n    </StyledTasksColumnsContainer>\n  );\n};\n\nexport default TasksColumnsList;\n","import styled from 'styled-components';\n\n// export const StyledDayCalendarHead = styled.div``;\n\nconst elementBorderColor = {\n  dark: 'rgba(255, 255, 255, 0.15)',\n  light: 'rgba(220, 227, 229, 0.80)',\n};\n\nconst elementBgColor = {\n  dark: '#21222c',\n  light: '#ffffff',\n};\n\nexport const DayContainer = styled.div`\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    max-width: 1065px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n  }\n`;\n\nexport const DayList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  padding: 14px 18px;\n\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => elementBorderColor[theme]};\n  background-color: ${({ theme }) => elementBgColor[theme]};\n\n  @media screen and (min-width: 768px) {\n    padding: 10px 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 10px 46px;\n  }\n`;\n","import styled from 'styled-components';\n\nconst weeksDayTitleColor = {\n  dark: '#FAFAFA4D',\n  light: '#343434',\n};\n\nconst weeksDayNumberColor = {\n  dark: '#ffffff',\n  light: '#343434',\n};\n\nexport const StyledDayListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n\n  & span {\n    margin-bottom: 4px;\n\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: calc(18 / 14);\n    text-align: center;\n    text-transform: uppercase;\n\n    color: ${({ theme }) => weeksDayTitleColor[theme]};\n  }\n\n  & button {\n    padding: 4px 8px;\n\n    color: ${({ theme }) => weeksDayNumberColor[theme]};\n    background-color: transparent;\n\n    font-family: Inter;\n    font-size: 16px;\n    font-weight: 700;\n    line-height: calc(18 / 16);\n\n    border-radius: 8px;\n    border: none;\n\n    cursor: pointer;\n  }\n\n  & button:hover,\n  .current {\n    color: #ffffff;\n    background-color: #2b78ef;\n  }\n\n  & .tablet {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    & .tablet {\n      display: block;\n    }\n\n    & .mobile {\n      display: none;\n    }\n  }\n`;\n","import { format } from 'date-fns';\nimport React from 'react';\nimport { StyledDayListItem } from './DayListItem.styled';\nimport { useTheme } from 'styled-components';\n\nconst DayListItem = ({ date, onClick, currentDate }) => {\n  const dayOfWeek = format(date, 'eee');\n  const isCurrentDay = format(date, 'dd') === format(currentDate, 'dd');\n\n  const { theme } = useTheme();\n  return (\n    <StyledDayListItem theme={theme}>\n      <span className=\"tablet\">{dayOfWeek}</span>\n      <span className=\"mobile\">{dayOfWeek[0]}</span>\n      <button\n        type=\"button\"\n        className={isCurrentDay ? 'current' : null}\n        aria-label=\"day of the week\"\n        onClick={() => onClick(date)}\n      >\n        {format(date, 'dd')}\n      </button>\n    </StyledDayListItem>\n  );\n};\n\nexport default DayListItem;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport { eachDayOfInterval, endOfWeek, format, startOfWeek } from 'date-fns';\n\nimport { DayList, DayContainer } from './DayCalendarHead.styled.js';\nimport DayListItem from './DayListItem/DayListItem.jsx';\nimport { useTheme } from 'styled-components';\n\nconst DayCalendarHead = () => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const currentDate = new Date(pathname.slice(-10));\n\n  const startOfWeekDate = startOfWeek(currentDate, { weekStartsOn: 1 });\n  const endOfWeekDate = endOfWeek(currentDate, { weekStartsOn: 1 });\n\n  const weekDates = eachDayOfInterval({\n    start: startOfWeekDate,\n    end: endOfWeekDate,\n  });\n\n  const handleClick = date => {\n    navigate(`/calendar/day/${format(date, 'yyyy-MM-dd')}`);\n  };\n\n  const { theme } = useTheme();\n  return (\n    <DayContainer className=\"DayCalendarHead\">\n      <DayList theme={theme}>\n        {weekDates.map((date, idx) => {\n          return (\n            <DayListItem\n              key={idx}\n              date={date}\n              currentDate={currentDate}\n              onClick={handleClick}\n              theme={theme}\n            />\n          );\n        })}\n      </DayList>\n    </DayContainer>\n  );\n};\n\nexport default DayCalendarHead;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","import { useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { StyledChoosedDay } from './ChoosedDay.styled';\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\n\nimport { selectTasks } from 'redux/task/taskSelectors';\nimport { CreateSortedTasks, filterDayTasks } from 'helpers/helpers';\nimport { CATEGORY_LIST } from 'constants/categoryList';\nimport DayCalendarHead from './ColumnHeadBar/DayCalendarHead';\nimport { ThemeProvider } from 'styled-components';\nimport { selectTheme } from 'redux/header/headerSlice';\n\nconst ChoosedDay = () => {\n  const { pathname } = useLocation();\n  const monthTasks = useSelector(selectTasks);\n\n  const day = pathname.slice(-2);\n  const dayTasks = filterDayTasks(monthTasks, day);\n  const sortedTasks = CreateSortedTasks(CATEGORY_LIST, dayTasks); // maybe useSelector ?\n\n  const theme = useSelector(selectTheme);\n  return (\n    <ThemeProvider theme={{ theme }}>\n      <StyledChoosedDay className=\"ChoosedDay\" theme={{ theme }}>\n        <DayCalendarHead />\n        <TasksColumnsList sortedTasks={sortedTasks} />\n      </StyledChoosedDay>\n    </ThemeProvider>\n  );\n};\n\nexport default ChoosedDay;\n","import { Suspense, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\n\nimport { addDays, addMonths, format, subDays, subMonths } from 'date-fns';\n\nimport { HeaderContainer } from './CalendarPage.styled.jsx';\nimport Header from 'components/Header/Header.jsx';\nimport { CalendarToolbar } from 'components/Calendar/common';\nimport { CalendarContainer } from 'components/Calendar/common';\nimport ChoosedMonth from 'components/Calendar/month/ChoosedMonth';\n\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport ChoosedDay from 'components/ChoosedDay/ChoosedDay.jsx';\n\nimport { getTasks as getTasksThunk } from 'redux/task/taskOperations';\nimport { selectTheme } from 'redux/header/headerSlice.js';\n\nconst CalendarPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const theme = useSelector(selectTheme);\n\n  const currentDate = pathname.slice(-10);\n  const prevMonthRef = useRef(null);\n\n  useEffect(() => {\n    const currentMonth = pathname.slice(-5).slice(0, 2);\n    if (prevMonthRef.current === currentMonth) return;\n\n    prevMonthRef.current = currentMonth;\n    const requestDate = currentDate.slice(0, 7);\n\n    dispatch(getTasksThunk(requestDate));\n  }, [dispatch, currentDate, pathname]);\n\n  const handlePrev = () => {\n    if (pathname.includes('day')) {\n      const newDate = subDays(new Date(currentDate), 1);\n      navigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n      return;\n    }\n\n    const newDate = subMonths(new Date(currentDate), 1);\n    navigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n  };\n\n  const handleNext = () => {\n    if (pathname.includes('day')) {\n      const newDate = addDays(new Date(currentDate), 1);\n      navigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n      return;\n    }\n\n    const newDate = addMonths(new Date(currentDate), 1);\n    navigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n  };\n\n  return (\n    <MainLayout>\n      <CalendarContainer bgcolor={theme === 'dark' ? '#171820' : '#f7f6f9'}>\n        <HeaderContainer>\n          <Header pageName=\"Calendar\" />\n        </HeaderContainer>\n\n        <Suspense fallback={null}>\n          <CalendarToolbar\n            onClickPrev={handlePrev}\n            onClickNext={handleNext}\n            today={currentDate}\n            theme={theme}\n          />\n          <Routes>\n            <Route\n              path=\"/month/:currentDate\"\n              element={<ChoosedMonth theme={theme} />}\n            />\n            <Route\n              path=\"/day/:currentDate\"\n              element={<ChoosedDay theme={theme} />}\n            />\n          </Routes>\n        </Suspense>\n      </CalendarContainer>\n    </MainLayout>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["CheckmarkWrap","styled","strokeAnimation","keyframes","fillAnimation","scaleAnimation","Circle","Svg","Path","MonthCalendarHeadStyles","MobileDaysList","bordercolor","bgcolor","DesktopDayList","WorkDay","color","WeekendDay","workDayNames","weekendDayNames","theme","map","day","slice","currentDate","useParams","isLoading","useSelector","selectIsLoading","tasksList","selectTasks","Loader","renderCalendar","handleClick","task","Container","sectionBgColor","dark","light","StyledChoosedDay","StyledTasksColumnsContainer","StyledTasksColumnsList","elementBorderColor","elementBgColor","StyledTasksColumnItem","textColor","StyledColumnHeadBar","DeleteBtn","CancelBtn","BtnWrapper","TextDiv","require","xmlns","viewBox","width","height","cx","cy","r","fill","d","closeModal","dispatch","useDispatch","selectTheme","useState","isSubmitted","setIsSubmitted","style","onClick","setTimeout","deleteTask","_id","marginRight","href","sprite","styledForm","Form","styledField","Field","styledRadio","FormContainer","bg","FormElement","FormLabel","FormField","TimeInput","TimeWrapper","TimeFieldWrap","RadioBtn","CustomRadioBtn","LowPrioBtn","MidPrioBtn","HighPrioBtn","PriorityWrapper","RadioLabel","CheckedRadioBtnBlue","CheckedRadioBtnYellow","CheckedRadioBtnRed","RadioLabelStyled","AddTaskButton","CancelButton","Error","BoxInput","StyledSVG","StyledEditBtn","BtnTxt","error","selectIsError","title","start","end","priority","useEffect","taskSchema","Yup","shape","min","max","required","test","this","parent","oneOf","onTaskSubmit","values","newTask","editTask","addTask","initialValues","validationSchema","onSubmit","errors","touched","htmlFor","border","id","type","name","placeholder","step","role","value","backgroundColor","createPortal","Modal","document","body","category","showModal","setShowModal","useTheme","className","date","StyledColumnTasksList","sectionBorderColor","StyledTaskColumnCard","priorityColors","low","medium","high","StyledTaskToolbar","StyledCategoryModal","coords","clientY","clientX","changeCategory","CATEGORY_LIST","parseCategoryTitle","string","charAt","toUpperCase","replace","variants","filter","cat","handleKeyDown","e","code","window","addEventListener","removeEventListener","currentTarget","target","variant","setDeleteTask","isOpen","categoryModal","setCategoryModal","user","selectUser","avatarURL","src","alt","tasks","bgColor","StyledAddTaskBtn","length","sortedTasks","DayContainer","DayList","weeksDayTitleColor","weeksDayNumberColor","StyledDayListItem","dayOfWeek","format","isCurrentDay","pathname","useLocation","navigate","useNavigate","Date","weekDates","dirtyInterval","options","_options$step","requiredArgs","arguments","interval","startDate","toDate","endTime","getTime","RangeError","dates","setHours","Number","isNaN","push","setDate","getDate","eachDayOfInterval","startOfWeek","weekStartsOn","endOfWeek","idx","dayTasks","monthTasks","filterDayTasks","categories","obj","forEach","CreateSortedTasks","prevMonthRef","useRef","currentMonth","current","requestDate","getTasksThunk","MainLayout","Header","pageName","Suspense","fallback","onClickPrev","includes","newDate","subDays","subMonths","onClickNext","addDays","addMonths","today","path","element"],"sourceRoot":""}