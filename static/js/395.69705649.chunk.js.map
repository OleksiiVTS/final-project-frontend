{"version":3,"file":"static/js/395.69705649.chunk.js","mappings":"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","sources":["../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","components/Calendar/common/CalendarContainer.jsx","components/Calendar/common/CalendarToolbar.jsx","components/Calendar/common/CalendarToolbar.styled.jsx","components/Calendar/month/CalendarHead/CalendarHead.styled.jsx","components/Calendar/common/PeriodSelector.styled.jsx","components/Calendar/common/CalendarDatePicker.styled.jsx","components/Calendar/month/CalendarHead/CalendarHead.jsx","components/Calendar/month/ChoosedMonth.jsx","components/ChoosedDay/TasksColumnsList/TasksColumnsList.styled.js","components/ChoosedDay/TasksColumnItem/TasksColumnItem.styled.js","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.styled.js","components/ChoosedDay/TasksColumnItem/ColumnHeadBar/ColumnHeadBar.jsx","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.styled.js","components/ChoosedDay/TasksColumnItem/AddTaskBtn/AddTaskBtn.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.styled.js","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskToolbar/TaskToolbar.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/TaskColumnCard/TaskColumnCard.jsx","components/ChoosedDay/TasksColumnItem/ColumnTasksList/ColumnTasksList.jsx","components/ChoosedDay/TasksColumnItem/TasksColumnItem.jsx","components/ChoosedDay/TasksColumnsList/TasksColumnsList.jsx","components/ChoosedDay/ChoosedDay.styled.js","components/ChoosedDay/ChoosedDay.jsx","pages/Private/CalendarPage/CalendarPage.jsx","../node_modules/date-fns/esm/subDays/index.js","../node_modules/date-fns/esm/subMonths/index.js"],"sourcesContent":["import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import styled from 'styled-components';\n\nconst CalendarContainer = styled.div`\n\theight: 200px;\n\tpadding-inline: 20px;\n\tbackground-color: grey;\n`;\n\nexport default CalendarContainer;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { ToolbarWrapper } from '.';\n\nconst CalendarToolbar = () =>\n  // { onClickPrev, onClickNext, today }\n  {\n    const [\n      // type,\n      setType,\n    ] = useState('month');\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n      if (pathname.includes('day')) {\n        setType('day');\n        return;\n      }\n\n      setType('month');\n    }, [pathname, setType]);\n\n    return <ToolbarWrapper></ToolbarWrapper>;\n  };\n\nexport default CalendarToolbar;\n","import styled from 'styled-components';\n\nconst ToolbarWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 24px;\n\n\t@media screen and (min-width: 768px) {\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tmargin-bottom: 32px;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-bottom: 40px;\n\t}\n`;\n\nexport default ToolbarWrapper;\n","import styled from 'styled-components';\n\nexport const MonthCalendarHeadStyles = styled.div``;\n\nexport const MobileDaysList = styled.ul`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\twidth: 100%;\n\theight: 50px;\n\tmargin-bottom: 14px;\n\tpadding: 16px 16px;\n\tborder: 1px solid rgba(220, 227, 229, 0.314);\n\tborder-radius: 8px;\n\tbackground-color: #ffffff;\n\n\t@media screen and (min-width: 768px) {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const DesktopDayList = styled.ul`\n\tdisplay: none;\n\n\t@media screen and (min-width: 768px) {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\tgap: 65px;\n\t\twidth: 100%;\n\t\theight: 46px;\n\t\tmargin-bottom: 18px;\n\t\tpadding: 14px 40px;\n\t\tborder: 1px solid rgba(220, 227, 229, 0.314);\n\t\tborder-radius: 8px;\n\t\tbackground-color: #ffffff;\n\n\t\t@media screen and (min-width: 1440px) {\n\t\t\theight: 46px;\n\t\t\tmargin-bottom: 15px;\n\t\t\tpadding: 14px 60px;\n\t\t}\n\t}\n`;\n\nexport const WorkDay = styled.li`\n\twidth: calc(100% / 7);\n\tcolor: #343434;\n\tfont-family: Inter;\n\tfont-size: 16px;\n\tfont-weight: 600;\n\tline-height: calc(18 / 16);\n\ttext-transform: uppercase;\n`;\n\nexport const WeekendDay = styled(WorkDay)`\n\tcolor: #3e85f3;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\t/* position: relative; */\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\t/* width: 100%; */\n\n\t@media screen and (min-width: 768px) {\n\t\tjustify-content: left;\n\t\t/* align-items: center; */\n\t}\n`;\n\nexport const TitleWrapper = styled.button`\n\twidth: 195px;\n\tpadding: 6px 12px;\n\tborder-radius: 8px;\n\tbackground-color: #3e85f3;\n\tcolor: #ffffff;\n\tfont-size: 14px;\n\tfont-weight: 700;\n\tline-height: calc(18 / 14);\n\ttext-align: center;\n\ttext-transform: uppercase;\n\n\t@media screen and (min-width: 768px) {\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\tpadding: 8px 12px;\n\t\tfont-size: 16px;\n\t}\n`;\n\nexport const ButtonsWrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-left: 8px;\n`;\n\nexport const ButtonLeft = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 7px 10px;\n\tborder: 1px solid red;\n\tborder-radius: 8px;\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n\tbackground-color: red;\n\tcolor: rgba(220, 227, 229, 0.8);\n\tfont-size: 20px;\n\tcursor: pointer;\n\ttransition: color 250ms;\n\n\t&:hover {\n\t\tcolor: #565759;\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 8px 10px;\n\t}\n`;\n\nexport const ButtonRight = styled.button`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 7px 10px;\n\tborder: 1px solid red;\n\tborder-radius: 8px;\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n\tbackground-color: red;\n\tcolor: rgba(220, 227, 229, 0.8);\n\tfont-size: 20px;\n\tcursor: pointer;\n\ttransition: color 250ms;\n\n\t&:hover {\n\t\tcolor: #565759;\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 8px 10px;\n\t}\n`;\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const DateBtn = styled.div`\n\tpadding: 6px 12px;\n\tborder-radius: 8px;\n\tbackground-color: #3e85f3;\n\tcolor: #ffffff;\n\tfont-size: 14px;\n\tfont-weight: 700;\n\tline-height: calc(18 / 14);\n\ttext-align: center;\n\ttext-transform: uppercase;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-block: 33px;\n\t\tpadding: 8px 12px;\n\t\tfont-size: 16px;\n\t}\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n\t.react-datepicker__wrapper {\n\t\tposition: relative;\n\t}\n\n\t.react-datepicker {\n\t\tposition: absolute;\n\t\tleft: 50%;\n\t\ttop: 50%;\n\t\ttransform: translate(-1%, 0%);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\twidth: 327px;\n\t\theight: 354px;\n\t\tpadding: 9px 18px;\n\t\tborder-radius: 16px;\n\t\tbackground-color: red;\n\t\tfont-family: Inter;\n\t}\n\t\n\t.react-datepicker__month-container {\n\t\tfloat: inherit;\n\t\tbox-sizing: border-box;\n\t}\n\n\t.react-datepicker__header {\n\t\tposition: relative;\n\t\tbackground-color: red;\n\t}\n\n\t.react-datepicker__day-names {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tpadding: 12px 19px;\n\t\tborder-bottom: 1px solid rgba(255, 255, 255, 0.4);\n\t}\n\n\t.react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n\t\tpadding: 0;\n\t\tborder-bottom: 0px;\n\t}\n\n\t.react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today {\n\t\toutline: none;\n\t\tborder: none;\n\t}\n\n\t.react-datepicker__current-month {\n\t\tfont-family: Inter;\n\t\tfont-size: 20px;\n\t\tfont-weight: 600;\n\t\tline-height: calc(24 / 20);\n\t\ttext-align: center;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__day-name {\n\t\tmargin: 0;\n\t\tpadding: 12px 19px;\n\t\tfont-family: Inter;\n\t\tfont-size: 14px;\n\t\tfont-weight: 600;\n\t\tline-height: calc(18 / 14);\n\t\ttext-align: center;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__navigation {\n\t\tmargin-top: 24px;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__navigation--previous {\n\t\tleft: 7px;\n\t\twidth: 18px;\n\t\theight: 18px;\n\t}\n\n\t.react-datepicker__navigation--next {\n\t\tright: 7px;\n\t\twidth: 18px;\n\t\theight: 18px;\n\t}\n\n\t.react-datepicker__navigation-icon::before:hover:focus {\n\t\tborder-color: #ffffff;\n\t}\n\n\t.react-datepicker__week {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tcolor: #ffffff;\n\t}\n\n\t.react-datepicker__day {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 8px;\n\t\tflex-shrink: 0;\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tmargin: 0;\n\t\tborder-radius: 50%;\n\t\tcolor: #ffffff;\n\t\tfont-family: Inter;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: calc(18 / 14);\n\t\ttext-align: center;\n\t}\n\n\t.react-datepicker__month {\n\t\tdisplay: flex;\n\t\tgap: 7px;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\tmargin: 0;\n\t\tpadding-top: 16px;\n\t}\n\n\t.react-datepicker__day--selected {\n\t\tbackground-color: #ffffff;\n\t\tcolor: red;\n\t\tfont-size: 14px;\n\t}\n\n\t.react-datepicker__day--selected:hover {\n\t\tborder-radius: 50%;\n\t\tbackground-color: #ffffff;\n\t}\n\n\t.react-datepicker__day:hover {\n\t\tborder-radius: 50%;\n\t\tbackground-color: #ffffff;\n\t\tcolor: red;\n\t}\n\n\t.react-datepicker__day--keyboard-selected {\n\t\tborder-radius: 50%;\n\t\tbackground-color: #ffffff;\n\t\tcolor: red;\n\t}\n\n\t.react-datepicker__day--weekend {\n\t\topacity: 50%;\n\t}\n\n\t.react-datepicker__day--outside-month {\n\t\tbackground-color: transparent;\n\t\tpointer-events: none;\n\t\topacity: 0;\n\t}\n\n\t.react-datepicker__view-calendar-icon input {\n\t\tpadding: 6px 10px 5px 13px;\n\t}\n\n\t.react-datepicker__triangle {\n\t\tvisibility: hidden;\n\t}\n`;\n","import {\n\tMonthCalendarHeadStyles,\n\tWorkDay,\n\tWeekendDay,\n\tMobileDaysList,\n\tDesktopDayList,\n} from './CalendarHead.styled';\n\nconst workDayNames = ['MON', 'TUE', 'WED', 'THU', 'FRI'];\nconst weekendDayNames = ['SAT', 'SUN'];\n\nconst CalendarHead = () => {\n\treturn (\n\t\t<MonthCalendarHeadStyles>\n\t\t\t<DesktopDayList>\n\t\t\t\t{workDayNames.map(day => (\n\t\t\t\t\t<WorkDay key={day}>{day}</WorkDay>\n\t\t\t\t))}\n\t\t\t\t{weekendDayNames.map(day => (\n\t\t\t\t\t<WeekendDay key={day}>{day}</WeekendDay>\n\t\t\t\t))}\n\t\t\t</DesktopDayList>\n\t\t\t<MobileDaysList>\n\t\t\t\t{workDayNames.map(day => (\n\t\t\t\t\t<WorkDay key={day}>{day}</WorkDay>\n\t\t\t\t))}\n\t\t\t\t{weekendDayNames.map(day => (\n\t\t\t\t\t<WeekendDay key={day}>{day}</WeekendDay>\n\t\t\t\t))}\n\t\t\t</MobileDaysList>\n\t\t</MonthCalendarHeadStyles>\n\t);\n};\n\nexport default CalendarHead;\n","import CalendarHead from './CalendarHead';\n\nconst ChoosedMonth = () => {\n\treturn (\n\t\t<>\n\t\t\t<h2>Month</h2>\n\t\t\t<CalendarHead />\n\t\t</>\n\t);\n};\n\nexport default ChoosedMonth;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 335px);\n  /* grid-template-rows: repeat(auto-fit, 1fr); */\n  /* grid-template-rows: 1fr; */\n  grid-column-gap: 20px;\n  grid-row-gap: 0px;\n\n  overflow-x: auto;\n  /* height: 100%; */\n  /* height: 500px; */\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(3, 344px);\n    grid-column-gap: 16px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    grid-column-gap: 27px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTasksColumnItem = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 18px 18px 20px;\n  /* min-width: 335px;\n  min-height: 155px; */\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background: #fff;\n\n  @media screen and (min-width: 768px) {\n    padding: 20px 20px 20px;\n  }\n\n  @media screen and (min-width: 1440px) {\n  }\n\n  .columnHeadBar {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 28px;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledColumnHeadBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  height: 34px;\n\n  @media screen and (min-width: 768px) {\n    height: 38px;\n  }\n\n  & h3 {\n    margin: 0;\n    color: #111;\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 700;\n    line-height: 1.111; /* 111.111% */\n\n    @media screen and (min-width: 768px) {\n      font-size: 20px;\n      line-height: 1.2; /* 120% */\n    }\n  }\n\n  & button {\n    /* width: 22px; */\n    /* height: 22px; */\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: white;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 22px;\n    height: 22px;\n    stroke: currentColor;\n    fill: white;\n\n    @media screen and (min-width: 768px) {\n      width: 24px;\n      height: 24px;\n    }\n  }\n`;\n","import React from 'react';\nimport sprite from '../../../Pictures/sprite.svg';\n// import { ReactComponent as PlusCircleLogo } from '../../../Pictures/plus-circle.svg';\nimport { StyledColumnHeadBar } from './ColumnHeadBar.styled';\n\n// import { useDispatch } from 'react-redux';\n// import { addTask } from 'redux/tasks/operations';\n\nconst ColumnHeadBar = ({ title, category }) => {\n  // const dispatch = useDispatch();\n\n  const handleClick = e => {\n    console.log(`add task to ${category}`);\n    //\n    // onClick={dispatch(addTask)}\n  };\n\n  return (\n    <StyledColumnHeadBar className=\"columnHeadBar\">\n      <h3>{title}</h3>\n      <button onClick={handleClick} aria-label=\"add task\" type=\"button\">\n        <svg>\n          <use href={sprite + '#icon-plus-circle'}></use>\n        </svg>\n        {/* <PlusCircleLogo /> */}\n      </button>\n    </StyledColumnHeadBar>\n  );\n};\n\nexport default ColumnHeadBar;\n","import styled from 'styled-components';\n\nexport const StyledAddTaskBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 299px;\n  height: 48px;\n  padding: 16px 20px;\n\n  border-radius: 8px;\n  border: 1px dashed #3e85f3;\n  background: #e3f3ff;\n\n  color: #111;\n  /* text-align: center; */\n  font-family: Inter;\n  font-size: 14px;\n  /* font-style: normal; */\n  font-weight: 600;\n  line-height: 1.285; /* 128.571% */\n\n  & span {\n    line-height: 0;\n    margin-right: 8px;\n  }\n\n  & svg {\n    width: 24px;\n    height: 24px;\n    stroke: currentColor;\n    fill: white;\n  }\n\n  &:hover {\n    color: white;\n    border: 1px solid #3e85f3;\n    background: #3e85f3;\n  }\n`;\n","import React from 'react';\nimport { StyledAddTaskBtn } from './AddTaskBtn.styled';\n\nimport sprite from '../../../Pictures/sprite.svg';\n\nconst AddTaskBtn = ({ category }) => {\n  const handleClick = e => {\n    console.log(`add task to ${category}`);\n    //\n    // onClick={dispatch(addTask)}\n  };\n\n  return (\n    <StyledAddTaskBtn aria-label=\"add task\" onClick={handleClick}>\n      <span>\n        <svg>\n          <use href={sprite + '#icon-plus'}></use>\n        </svg>\n      </span>\n      Add task\n    </StyledAddTaskBtn>\n  );\n};\n\nexport default AddTaskBtn;\n","import styled from 'styled-components';\n\nexport const StyledColumnTasksList = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskColumnCard = styled.div`\n  /* display: flex;\n  flex-direction: column;\n  row-gap: 14px;\n  margin-bottom: 32px; */\n  padding: 14px 14px 18px;\n\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #f7f6f9;\n\n  & .title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    margin-bottom: 28px;\n\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.285; /* 128.571% */\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledTaskToolbar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n\n  & .infoWrapper {\n    display: flex;\n    align-items: end;\n  }\n\n  & .imgWrapper {\n    overflow: hidden;\n    margin-right: 8px;\n\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    border: 1.8px solid #3e85f3;\n    /* background: url(<path-to-image>), lightgray 50% / cover no-repeat; */\n\n    & img {\n      width: 32px;\n      height: 32px;\n    }\n  }\n\n  & span {\n    padding: 4px 12px;\n\n    color: #fff;\n\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 600;\n    line-height: 1.2; /* 120% */\n\n    border-radius: 4px;\n    background: ${props => props.priority};\n  }\n\n  .controlsWrapper {\n    line-height: 0;\n  }\n  & button {\n    line-height: 0;\n    padding: 0;\n    border: none;\n    border-radius: 50%;\n    color: #111;\n    background-color: #f7f6f9;\n  }\n\n  & button:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  & button:hover {\n    color: #3e85f3;\n  }\n\n  & svg {\n    width: 14px;\n    height: 14px;\n    stroke: currentColor;\n    fill: #f7f6f9;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n","import { StyledTaskToolbar } from './TaskToolbar.styled';\n\nimport sprite from '../../../../../Pictures/sprite.svg';\n// import { useSelector } from 'react-redux';\n\nconst TaskToolbar = ({ priority, id }) => {\n  // const user = useSelector('user')\n  const user = {\n    _id: { $oid: '6529476a97b7633982504c1e' },\n    email: 'vlad4@mail.com',\n    password: '$2a$10$/LQqZa97FIpqrzsuN0fhi.yzcowlVFbq5TpxWaV5iitOMgexu.lVi',\n    subscription: 'starter',\n    avatarURL:\n      'http://res.cloudinary.com/dnd9pw6nh/image/upload/v1697204074/avatarUser/scymdkr4ztejgfzcj8qh.jpg',\n    public_id: 'avatarUser/scymdkr4ztejgfzcj8qh',\n    verify: true,\n    name: 'vlad',\n    verificationToken: ' ',\n    createdAt: { $date: { $numberLong: '1697204074420' } },\n    updatedAt: { $date: { $numberLong: '1697315175368' } },\n    token:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1Mjk0NzZhOTdiNzYzMzk4MjUwNGMxZSIsImlhdCI6MTY5NzMxNTE3NSwiZXhwIjoxNjk3Mzk3OTc1fQ.c3V0oMP1jeWgx4RiyHPD5pJot0DdtNl2Eus3B-juXOw',\n  };\n\n  const { avatarURL, name } = user;\n\n  const priorityColors = {\n    low: '#72C2F8',\n    medium: '#F3B249',\n    high: '#EA3D65',\n  };\n\n  const onCategoryChange = e => {\n    console.log(`change category for id ${id}`);\n  };\n\n  const onEditClick = e => {\n    console.log(`edit ${id}`);\n  };\n\n  const onDeleteClick = e => {\n    console.log(`delete ${id}`);\n  };\n\n  return (\n    <StyledTaskToolbar\n      className=\"taskToolbar\"\n      priority={priorityColors[priority]}\n    >\n      <div className=\"infoWrapper\">\n        <div className=\"imgWrapper\">\n          <img src={avatarURL} alt={name} />\n        </div>\n        <span>{priority}</span>\n      </div>\n      <div className=\"controlsWrapper\">\n        <button\n          onClick={onCategoryChange}\n          aria-label=\"change task category\"\n          type=\"button\"\n        >\n          <svg>\n            <use href={sprite + '#arrow-circle-broken-right'}></use>\n          </svg>\n        </button>\n        <button onClick={onEditClick} aria-label=\"edit task\" type=\"button\">\n          <svg>\n            <use href={sprite + '#icon-pencil'}></use>\n          </svg>\n        </button>\n        <button onClick={onDeleteClick} aria-label=\"delete task\" type=\"button\">\n          <svg>\n            <use href={sprite + '#icon-trash'}></use>\n          </svg>\n        </button>\n      </div>\n    </StyledTaskToolbar>\n    //\n  );\n};\n\nexport default TaskToolbar;\n","import React from 'react';\nimport { StyledTaskColumnCard } from './TaskColumnCard.styled';\nimport TaskToolbar from './TaskToolbar/TaskToolbar';\n\nconst TaskColumnCard = ({ task }) => {\n  const { title, priority, _id } = task;\n  return (\n    <StyledTaskColumnCard>\n      <p className=\"title\">{title}</p>\n      <TaskToolbar priority={priority} id={_id} />\n    </StyledTaskColumnCard>\n  );\n};\n\nexport default TaskColumnCard;\n","import React from 'react';\nimport { StyledColumnTasksList } from './ColumnTasksList.styled';\nimport TaskColumnCard from './TaskColumnCard/TaskColumnCard';\n\nconst ColumnTasksList = ({ tasks }) => {\n  return (\n    <StyledColumnTasksList>\n      {tasks.map(task => (\n        <TaskColumnCard key={task.title} task={task} />\n      ))}\n    </StyledColumnTasksList>\n  );\n};\n\nexport default ColumnTasksList;\n","import React from 'react';\nimport { StyledTasksColumnItem } from './TasksColumnItem.styled';\nimport ColumnHeadBar from './ColumnHeadBar/ColumnHeadBar';\nimport AddTaskBtn from './AddTaskBtn/AddTaskBtn';\nimport ColumnTasksList from './ColumnTasksList/ColumnTasksList';\n\nconst TasksColumnItem = ({ title, tasks, category }) => {\n  // console.log(category);\n  return (\n    <StyledTasksColumnItem className=\"tasksColumnItem\">\n      <ColumnHeadBar title={title} category={category} />\n      <ColumnTasksList tasks={tasks} />\n      <AddTaskBtn category={category} />\n    </StyledTasksColumnItem>\n  );\n};\n\nexport default TasksColumnItem;\n","import React from 'react';\nimport { StyledTasksColumnsList } from './TasksColumnsList.styled';\nimport TasksColumnItem from '../TasksColumnItem/TasksColumnItem';\n\nconst TasksColumnsList = ({ currentTasks }) => {\n  // console.log(currentTasks);\n  const titles = ['To do', 'In progress', 'Done'];\n  const categoryList = ['to-do', 'in-progress', 'done'];\n\n  return (\n    <StyledTasksColumnsList>\n      {currentTasks.map((set, idx) => (\n        <TasksColumnItem\n          key={titles[idx]}\n          title={titles[idx]}\n          category={categoryList[idx]}\n          tasks={set}\n        />\n      ))}\n    </StyledTasksColumnsList>\n  );\n};\n\nexport default TasksColumnsList;\n","import styled from 'styled-components';\n\nexport const StyledChoosedDay = styled.div`\n  padding: 24px 20px 20px;\n  overflow-x: auto;\n\n  /* height: 100%; */\n  /* height: 600px; */\n\n  background: #f7f6f9;\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px 18px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 32px 32px 18px;\n  }\n`;\n","import React from 'react';\n// import { useDispatch } from 'react-redux';\n\nimport TasksColumnsList from './TasksColumnsList/TasksColumnsList';\nimport { StyledChoosedDay } from './ChoosedDay.styled';\nimport { useParams } from 'react-router-dom';\n\nconst ChoosedDay = () => {\n  const { currentDay } = useParams();\n  console.log('currentDay', currentDay);\n\n  // const tasks = []; //get from state\n  const categoryList = ['to-do', 'in-progress', 'done'];\n  // const priorityList = ['low', 'medium', 'high'];\n\n  const tasksForCurrentDay = [\n    {\n      _id: '65294bc4924f405b17970a7e',\n      title: 'first',\n      start: '14:15',\n      end: '03:00',\n      priority: 'medium',\n      date: '2023-12-31',\n      category: 'done',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '65294cf6924f405b17970a82',\n      title: 'second',\n      start: '14:15',\n      end: '03:00',\n      priority: 'low',\n      date: '2023-12-31',\n      category: 'to-do',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '65294d04924f405b17970a85',\n      title: 'third',\n      start: '14:15',\n      end: '03:00',\n      priority: 'high',\n      date: '2023-12-31',\n      category: 'to-do',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '6529508bbbaee1c2770c5ba9',\n      title: 'fourth',\n      start: '14:15',\n      end: '03:00',\n      priority: 'low',\n      date: '2023-12-31',\n      category: 'done',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '652ad610673d4d226e29333e',\n      title: 'fifth',\n      start: '15:30',\n      end: '12:12',\n      priority: 'high',\n      date: '2023-12-31',\n      category: 'done',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n    {\n      _id: '652ad7a68911da03b5124190',\n      title: 'sixth',\n      start: '15:30',\n      end: '12:12',\n      priority: 'medium',\n      date: '2023-12-31',\n      category: 'to-do',\n      owner: {\n        $oid: '6529476a97b7633982504c1e',\n      },\n    },\n  ];\n\n  const currentTasks = [[], [], []];\n\n  tasksForCurrentDay.forEach(task => {\n    if (task.category === categoryList[0]) currentTasks[0].push(task);\n    if (task.category === categoryList[1]) currentTasks[1].push(task);\n    if (task.category === categoryList[2]) currentTasks[2].push(task);\n  });\n\n  // const currentTasks = tasksForCurrentDay.reduce((acc, task) => {\n  //   console.log(task.category);\n  //   acc[task.category] = [...acc[task.category], task];\n  //   return acc;\n  // }, {});\n  // console.log(currentTasks);\n\n  return (\n    <StyledChoosedDay>\n      {/* <DayCalendarHead /> */}\n      <TasksColumnsList currentTasks={currentTasks} />\n    </StyledChoosedDay>\n    //\n  );\n};\n\nexport default ChoosedDay;\n","import React, { Suspense } from 'react';\nimport {\n\tRoute,\n\tRoutes,\n\tuseLocation,\n\tuseNavigate,\n\tuseParams,\n} from 'react-router-dom';\n\nimport { addDays, addMonths, format, subDays, subMonths } from 'date-fns';\n\nimport { CalendarToolbar } from 'components/Calendar/common';\nimport { Container } from 'components/Calendar/common';\nimport ChoosedMonth from 'components/Calendar/month/ChoosedMonth';\n\nimport MainLayout from '../../../components/MainLayout/MainLayout.jsx';\nimport ChoosedDay from 'components/ChoosedDay/ChoosedDay.jsx';\n\n// import { Link } from 'react-router-dom';\n// import { Circles } from 'react-loader-spinner'; //! Спинер\n\nconst CalendarPage = () => {\n\tconst { pathname } = useLocation();\n\tconst navigate = useNavigate();\n\tconst currentDate = Object.values(useParams())[0].slice(-10);\n\t// const { currentDate } = useParams();\n\n\tconsole.log(currentDate);\n\n\tconst handlePrev = () => {\n\t\tif (pathname.includes('day')) {\n\t\t\tconst newDate = subDays(new Date(currentDate), 1);\n\t\t\tnavigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newDate = subMonths(new Date(currentDate, 1));\n\t\tnavigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n\t};\n\n\tconst handleNext = () => {\n\t\tif (pathname.includes('day')) {\n\t\t\tconst newDate = addDays(new Date(currentDate), 1);\n\t\t\tnavigate(`/calendar/day/${format(newDate, 'yyyy-MM-dd')}`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst newDate = addMonths(new Date(currentDate, 1));\n\t\tnavigate(`/calendar/month/${format(newDate, 'yyyy-MM-dd')}`);\n\t};\n\n\t// const [currentDate, setCurrentDate] = useState(getCurrentDate());\n\n\t// useEffect(() => {\n\t// \tif (!currentDate) setCurrentDate(getCurrentDate());\n\n\t// \tnavigate(`calendar/month/${currentDate}`, { replace: true });\n\t// }, [navigate, currentDate]);\n\n\treturn (\n\t\t<MainLayout>\n\t\t\t<div>\n\t\t\t\t<h1>CalendarPage</h1>\n\t\t\t</div>\n\t\t\t<Suspense fallback={null}>\n\t\t\t\t<Container>\n\t\t\t\t\t<CalendarToolbar\n\t\t\t\t\t\tonClickPrev={handlePrev}\n\t\t\t\t\t\tonClickNext={handleNext}\n\t\t\t\t\t\ttoday={currentDate}\n\t\t\t\t\t/>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path=\"/month/:currentDate\" element={<ChoosedMonth />} />\n\t\t\t\t\t\t<Route path=\"/day/:currentDay\" element={<ChoosedDay />} />\n\t\t\t\t\t</Routes>\n\t\t\t\t</Container>\n\t\t\t</Suspense>\n\t\t</MainLayout>\n\t\t// {isLoading && !error && (\n\t\t//     <Circles\n\t\t//       height=\"80\"\n\t\t//       width=\"80\"\n\t\t//       color=\"#4d78a9\"\n\t\t//!       wrapperClass={css.loader}\n\t\t//     />\n\t\t//   )}\n\t);\n};\n\nexport default CalendarPage;\n\n// .loader {\n//     position: fixed;\n//     top: 0;\n//     width: 100%;\n//     height: 100%;\n//     display: flex;\n//     align-items: center;\n//     justify-content: center;\n//   }\n","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function subMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, -amount);\n}"],"names":["addDays","dirtyDate","dirtyAmount","requiredArgs","arguments","date","toDate","amount","toInteger","isNaN","Date","NaN","setDate","getDate","addMonths","dayOfMonth","endOfDesiredMonth","getTime","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","styled","useState","setType","pathname","useLocation","useEffect","includes","MonthCalendarHeadStyles","createGlobalStyle","MobileDaysList","DesktopDayList","WorkDay","WeekendDay","workDayNames","weekendDayNames","map","day","StyledTasksColumnsList","StyledTasksColumnItem","StyledColumnHeadBar","title","category","className","onClick","e","console","log","type","href","sprite","StyledAddTaskBtn","StyledColumnTasksList","StyledTaskColumnCard","StyledTaskToolbar","props","priority","id","avatarURL","name","low","medium","high","src","alt","task","_id","tasks","currentTasks","titles","categoryList","set","idx","StyledChoosedDay","currentDay","useParams","start","end","owner","$oid","forEach","push","navigate","useNavigate","currentDate","Object","values","slice","MainLayout","Suspense","fallback","onClickPrev","newDate","subDays","format","subMonths","onClickNext","today","path","element"],"sourceRoot":""}